/*!
 * @pixi-spine/all-4.1 - v4.0.4
 * Compiled Mon, 31 Jul 2023 22:49:16 UTC
 *
 * @pixi-spine/all-4.1 is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 * 
 * Copyright 2023, Ivan Igorevich Popelyshev <ivan.popelyshev@gmail.com>, All Rights Reserved
 */import{ALPHA_MODES as Ds,Rectangle as me,Texture as Vs,SCALE_MODES as Kt,MIPMAP_MODES as $s,utils as ot,Transform as _s,DRAW_MODES as Ws,Polygon as qs,ExtensionType as Jt,settings as us,extensions as ms,Matrix as Os,BLEND_MODES as yt}from"@pixi/core";import{Container as Lt}from"@pixi/display";import"@pixi/mixin-get-child-by-name";import{Sprite as Us}from"@pixi/sprite";import{SimpleMesh as zs}from"@pixi/mesh-extras";import{Graphics as it}from"@pixi/graphics";import{LoaderParserPriority as gs,checkExtension as Nt}from"@pixi/assets";var K=(i=>(i[i.Region=0]="Region",i[i.BoundingBox=1]="BoundingBox",i[i.Mesh=2]="Mesh",i[i.LinkedMesh=3]="LinkedMesh",i[i.Path=4]="Path",i[i.Point=5]="Point",i[i.Clipping=6]="Clipping",i))(K||{});class xs{constructor(t,s=new Array,e=0,r=new DataView(t.buffer)){this.strings=s,this.index=e,this.buffer=r}readByte(){return this.buffer.getInt8(this.index++)}readUnsignedByte(){return this.buffer.getUint8(this.index++)}readShort(){const t=this.buffer.getInt16(this.index);return this.index+=2,t}readInt32(){const t=this.buffer.getInt32(this.index);return this.index+=4,t}readInt(t){let s=this.readByte(),e=s&127;return s&128&&(s=this.readByte(),e|=(s&127)<<7,s&128&&(s=this.readByte(),e|=(s&127)<<14,s&128&&(s=this.readByte(),e|=(s&127)<<21,s&128&&(s=this.readByte(),e|=(s&127)<<28)))),t?e:e>>>1^-(e&1)}readStringRef(){const t=this.readInt(!0);return t==0?null:this.strings[t-1]}readString(){let t=this.readInt(!0);switch(t){case 0:return null;case 1:return""}t--;let s="";for(let e=0;e<t;){const r=this.readUnsignedByte();switch(r>>4){case 12:case 13:s+=String.fromCharCode((r&31)<<6|this.readByte()&63),e+=2;break;case 14:s+=String.fromCharCode((r&15)<<12|(this.readByte()&63)<<6|this.readByte()&63),e+=3;break;default:s+=String.fromCharCode(r),e++}}return s}readFloat(){const t=this.buffer.getFloat32(this.index);return this.index+=4,t}readBoolean(){return this.readByte()!=0}}var v=(i=>(i[i.setup=0]="setup",i[i.first=1]="first",i[i.replace=2]="replace",i[i.add=3]="add",i))(v||{}),j=(i=>(i[i.mixIn=0]="mixIn",i[i.mixOut=1]="mixOut",i))(j||{}),mt=(i=>(i[i.Fixed=0]="Fixed",i[i.Percent=1]="Percent",i))(mt||{}),Tt=(i=>(i[i.Tangent=0]="Tangent",i[i.Chain=1]="Chain",i[i.ChainScale=2]="ChainScale",i))(Tt||{}),st=(i=>(i[i.Normal=0]="Normal",i[i.OnlyTranslation=1]="OnlyTranslation",i[i.NoRotationOrReflection=2]="NoRotationOrReflection",i[i.NoScale=3]="NoScale",i[i.NoScaleOrReflection=4]="NoScaleOrReflection",i))(st||{});function ge(i){switch(i.toLowerCase()){case"nearest":return tt.Nearest;case"linear":return tt.Linear;case"mipmap":return tt.MipMap;case"mipmapnearestnearest":return tt.MipMapNearestNearest;case"mipmaplinearnearest":return tt.MipMapLinearNearest;case"mipmapnearestlinear":return tt.MipMapNearestLinear;case"mipmaplinearlinear":return tt.MipMapLinearLinear;default:throw new Error(`Unknown texture filter ${i}`)}}function Hs(i){switch(i.toLowerCase()){case"mirroredtepeat":return ct.MirroredRepeat;case"clamptoedge":return ct.ClampToEdge;case"repeat":return ct.Repeat;default:throw new Error(`Unknown texture wrap ${i}`)}}var tt=(i=>(i[i.Nearest=9728]="Nearest",i[i.Linear=9729]="Linear",i[i.MipMap=9987]="MipMap",i[i.MipMapNearestNearest=9984]="MipMapNearestNearest",i[i.MipMapLinearNearest=9985]="MipMapLinearNearest",i[i.MipMapNearestLinear=9986]="MipMapNearestLinear",i[i.MipMapLinearLinear=9987]="MipMapLinearLinear",i))(tt||{}),ct=(i=>(i[i.MirroredRepeat=33648]="MirroredRepeat",i[i.ClampToEdge=33071]="ClampToEdge",i[i.Repeat=10497]="Repeat",i))(ct||{});class Qt{constructor(){this.size=null,this.names=null,this.values=null,this.renderObject=null}get width(){const t=this.texture;return t.trim?t.trim.width:t.orig.width}get height(){const t=this.texture;return t.trim?t.trim.height:t.orig.height}get u(){return this.texture._uvs.x0}get v(){return this.texture._uvs.y0}get u2(){return this.texture._uvs.x2}get v2(){return this.texture._uvs.y2}get offsetX(){const t=this.texture;return t.trim?t.trim.x:0}get offsetY(){return this.spineOffsetY}get pixiOffsetY(){const t=this.texture;return t.trim?t.trim.y:0}get spineOffsetY(){const t=this.texture;return this.originalHeight-this.height-(t.trim?t.trim.y:0)}get originalWidth(){return this.texture.orig.width}get originalHeight(){return this.texture.orig.height}get x(){return this.texture.frame.x}get y(){return this.texture.frame.y}get rotate(){return this.texture.rotate!==0}get degrees(){return(360-this.texture.rotate*45)%360}}class Gs{constructor(){this.x=0,this.y=0,this.width=0,this.height=0,this.offsetX=0,this.offsetY=0,this.originalWidth=0,this.originalHeight=0,this.rotate=0,this.index=0}}class Zt{constructor(t,s,e){this.pages=new Array,this.regions=new Array,t&&this.addSpineAtlas(t,s,e)}addTexture(t,s){const e=this.pages;let r=null;for(let f=0;f<e.length;f++)if(e[f].baseTexture===s.baseTexture){r=e[f];break}if(r===null){r=new xe,r.name="texturePage";const f=s.baseTexture;r.width=f.realWidth,r.height=f.realHeight,r.baseTexture=f,r.minFilter=r.magFilter=tt.Nearest,r.uWrap=ct.ClampToEdge,r.vWrap=ct.ClampToEdge,e.push(r)}const a=new pe;return a.name=t,a.page=r,a.texture=s,a.index=-1,this.regions.push(a),a}addTextureHash(t,s){for(const e in t)t.hasOwnProperty(e)&&this.addTexture(s&&e.indexOf(".")!==-1?e.substr(0,e.lastIndexOf(".")):e,t[e])}addSpineAtlas(t,s,e){return this.load(t,s,e)}load(t,s,e){if(s==null)throw new Error("textureLoader cannot be null.");const r=new Ks(t),a=new Array(4);let f=null;const l={};let n=null;l.size=()=>{f.width=parseInt(a[1]),f.height=parseInt(a[2])},l.format=()=>{},l.filter=()=>{f.minFilter=ge(a[1]),f.magFilter=ge(a[2])},l.repeat=()=>{a[1].indexOf("x")!=-1&&(f.uWrap=ct.Repeat),a[1].indexOf("y")!=-1&&(f.vWrap=ct.Repeat)},l.pma=()=>{f.pma=a[1]=="true"};const o={};o.xy=()=>{n.x=parseInt(a[1]),n.y=parseInt(a[2])},o.size=()=>{n.width=parseInt(a[1]),n.height=parseInt(a[2])},o.bounds=()=>{n.x=parseInt(a[1]),n.y=parseInt(a[2]),n.width=parseInt(a[3]),n.height=parseInt(a[4])},o.offset=()=>{n.offsetX=parseInt(a[1]),n.offsetY=parseInt(a[2])},o.orig=()=>{n.originalWidth=parseInt(a[1]),n.originalHeight=parseInt(a[2])},o.offsets=()=>{n.offsetX=parseInt(a[1]),n.offsetY=parseInt(a[2]),n.originalWidth=parseInt(a[3]),n.originalHeight=parseInt(a[4])},o.rotate=()=>{const h=a[1];let m=0;h.toLocaleLowerCase()=="true"?m=6:h.toLocaleLowerCase()=="false"?m=0:m=(720-parseFloat(h))%360/45,n.rotate=m},o.index=()=>{n.index=parseInt(a[1])};let c=r.readLine();for(;c!=null&&c.trim().length==0;)c=r.readLine();for(;!(c==null||c.trim().length==0||r.readEntry(a,c)==0);)c=r.readLine();const d=()=>{for(;;){if(c==null)return e&&e(this);if(c.trim().length==0)f=null,c=r.readLine();else if(f===null){for(f=new xe,f.name=c.trim();r.readEntry(a,c=r.readLine())!=0;){const h=l[a[0]];h&&h()}this.pages.push(f),s(f.name,h=>{if(h===null)return this.pages.splice(this.pages.indexOf(f),1),e&&e(null);f.baseTexture=h,f.pma&&(h.alphaMode=Ds.PMA),h.valid||h.setSize(f.width,f.height),f.setFilters(),(!f.width||!f.height)&&(f.width=h.realWidth,f.height=h.realHeight,(!f.width||!f.height)&&console.log(`ERROR spine atlas page ${f.name}: meshes wont work if you dont specify size in atlas (http://www.html5gamedevs.com/topic/18888-pixi-spines-and-meshes/?p=107121)`)),d()});break}else{n=new Gs;const h=new pe;h.name=c,h.page=f;let m=null,u=null;for(;;){const x=r.readEntry(a,c=r.readLine());if(x==0)break;const y=o[a[0]];if(y)y();else{m==null&&(m=[],u=[]),m.push(a[0]);const k=[];for(let C=0;C<x;C++)k.push(parseInt(a[C+1]));u.push(k)}}n.originalWidth==0&&n.originalHeight==0&&(n.originalWidth=n.width,n.originalHeight=n.height);const g=f.baseTexture.resolution;n.x/=g,n.y/=g,n.width/=g,n.height/=g,n.originalWidth/=g,n.originalHeight/=g,n.offsetX/=g,n.offsetY/=g;const w=n.rotate%4!==0,S=new me(n.x,n.y,w?n.height:n.width,w?n.width:n.height),p=new me(0,0,n.originalWidth,n.originalHeight),b=new me(n.offsetX,n.originalHeight-n.height-n.offsetY,n.width,n.height);h.texture=new Vs(h.page.baseTexture,S,p,b,n.rotate),h.index=n.index,h.texture.updateUvs(),this.regions.push(h)}}};d()}findRegion(t){for(let s=0;s<this.regions.length;s++)if(this.regions[s].name==t)return this.regions[s];return null}dispose(){for(let t=0;t<this.pages.length;t++)this.pages[t].baseTexture.dispose()}}class Ks{constructor(t){this.index=0,this.lines=t.split(/\r\n|\r|\n/)}readLine(){return this.index>=this.lines.length?null:this.lines[this.index++]}readEntry(t,s){if(s==null||(s=s.trim(),s.length==0))return 0;const e=s.indexOf(":");if(e==-1)return 0;t[0]=s.substr(0,e).trim();for(let r=1,a=e+1;;r++){const f=s.indexOf(",",a);if(f==-1)return t[r]=s.substr(a).trim(),r;if(t[r]=s.substr(a,f-a).trim(),a=f+1,r==4)return 4}}}class xe{constructor(){this.minFilter=tt.Nearest,this.magFilter=tt.Nearest,this.uWrap=ct.ClampToEdge,this.vWrap=ct.ClampToEdge}setFilters(){const t=this.baseTexture,s=this.minFilter;s==tt.Linear?t.scaleMode=Kt.LINEAR:this.minFilter==tt.Nearest?t.scaleMode=Kt.NEAREST:(t.mipmap=$s.POW2,s==tt.MipMapNearestNearest?t.scaleMode=Kt.NEAREST:t.scaleMode=Kt.LINEAR)}}class pe extends Qt{}class Js{constructor(){this.array=new Array}add(t){const s=this.contains(t);return this.array[t|0]=t|0,!s}contains(t){return this.array[t|0]!=null}remove(t){this.array[t|0]=void 0}clear(){this.array.length=0}}class we{constructor(){this.entries={},this.size=0}add(t){const s=this.entries[t];return this.entries[t]=!0,s?!1:(this.size++,!0)}addAll(t){const s=this.size;for(let e=0,r=t.length;e<r;e++)this.add(t[e]);return s!=this.size}contains(t){return this.entries[t]}clear(){this.entries={},this.size=0}}const Yt=class{constructor(i=0,t=0,s=0,e=0){this.r=i,this.g=t,this.b=s,this.a=e}set(i,t,s,e){return this.r=i,this.g=t,this.b=s,this.a=e,this.clamp()}setFromColor(i){return this.r=i.r,this.g=i.g,this.b=i.b,this.a=i.a,this}setFromString(i){return i=i.charAt(0)=="#"?i.substr(1):i,this.r=parseInt(i.substr(0,2),16)/255,this.g=parseInt(i.substr(2,2),16)/255,this.b=parseInt(i.substr(4,2),16)/255,this.a=i.length!=8?1:parseInt(i.substr(6,2),16)/255,this}add(i,t,s,e){return this.r+=i,this.g+=t,this.b+=s,this.a+=e,this.clamp()}clamp(){return this.r<0?this.r=0:this.r>1&&(this.r=1),this.g<0?this.g=0:this.g>1&&(this.g=1),this.b<0?this.b=0:this.b>1&&(this.b=1),this.a<0?this.a=0:this.a>1&&(this.a=1),this}static rgba8888ToColor(i,t){i.r=((t&4278190080)>>>24)/255,i.g=((t&16711680)>>>16)/255,i.b=((t&65280)>>>8)/255,i.a=(t&255)/255}static rgb888ToColor(i,t){i.r=((t&16711680)>>>16)/255,i.g=((t&65280)>>>8)/255,i.b=(t&255)/255}static fromString(i){return new Yt().setFromString(i)}};let N=Yt;N.WHITE=new Yt(1,1,1,1),N.RED=new Yt(1,0,0,1),N.GREEN=new Yt(0,1,0,1),N.BLUE=new Yt(0,0,1,1),N.MAGENTA=new Yt(1,0,1,1);const St=class{static clamp(i,t,s){return i<t?t:i>s?s:i}static cosDeg(i){return Math.cos(i*St.degRad)}static sinDeg(i){return Math.sin(i*St.degRad)}static signum(i){return Math.sign(i)}static toInt(i){return i>0?Math.floor(i):Math.ceil(i)}static cbrt(i){const t=Math.pow(Math.abs(i),.3333333333333333);return i<0?-t:t}static randomTriangular(i,t){return St.randomTriangularWith(i,t,(i+t)*.5)}static randomTriangularWith(i,t,s){const e=Math.random(),r=t-i;return e<=(s-i)/r?i+Math.sqrt(e*r*(s-i)):t-Math.sqrt((1-e)*r*(t-s))}static isPowerOfTwo(i){return i&&(i&i-1)===0}};let F=St;F.PI=3.1415927,F.PI2=St.PI*2,F.radiansToDegrees=180/St.PI,F.radDeg=St.radiansToDegrees,F.degreesToRadians=St.PI/180,F.degRad=St.degreesToRadians;class ps{apply(t,s,e){return t+(s-t)*this.applyInternal(e)}}class ws extends ps{constructor(t){super(),this.power=2,this.power=t}applyInternal(t){return t<=.5?Math.pow(t*2,this.power)/2:Math.pow((t-1)*2,this.power)/(this.power%2==0?-2:2)+1}}class Qs extends ws{applyInternal(t){return Math.pow(t-1,this.power)*(this.power%2==0?-1:1)+1}}const Dt=class{static arrayCopy(i,t,s,e,r){for(let a=t,f=e;a<t+r;a++,f++)s[f]=i[a]}static arrayFill(i,t,s,e){for(let r=t;r<s;r++)i[r]=e}static setArraySize(i,t,s=0){const e=i.length;if(e==t)return i;if(i.length=t,e<t)for(let r=e;r<t;r++)i[r]=s;return i}static ensureArrayCapacity(i,t,s=0){return i.length>=t?i:Dt.setArraySize(i,t,s)}static newArray(i,t){const s=new Array(i);for(let e=0;e<i;e++)s[e]=t;return s}static newFloatArray(i){if(Dt.SUPPORTS_TYPED_ARRAYS)return new Float32Array(i);const t=new Array(i);for(let s=0;s<t.length;s++)t[s]=0;return t}static newShortArray(i){if(Dt.SUPPORTS_TYPED_ARRAYS)return new Int16Array(i);const t=new Array(i);for(let s=0;s<t.length;s++)t[s]=0;return t}static toFloatArray(i){return Dt.SUPPORTS_TYPED_ARRAYS?new Float32Array(i):i}static toSinglePrecision(i){return Dt.SUPPORTS_TYPED_ARRAYS?Math.fround(i):i}static webkit602BugfixHelper(i,t){}static contains(i,t,s=!0){for(let e=0;e<i.length;e++)if(i[e]==t)return!0;return!1}static enumValue(i,t){return i[t[0].toUpperCase()+t.slice(1)]}};let R=Dt;R.SUPPORTS_TYPED_ARRAYS=typeof Float32Array!="undefined";class Zs{static logBones(t){for(let s=0;s<t.bones.length;s++){const e=t.bones[s],r=e.matrix;console.log(`${e.data.name}, ${r.a}, ${r.b}, ${r.c}, ${r.d}, ${r.tx}, ${r.ty}`)}}}class be{constructor(t){this.items=new Array,this.instantiator=t}obtain(){return this.items.length>0?this.items.pop():this.instantiator()}free(t){t.reset&&t.reset(),this.items.push(t)}freeAll(t){for(let s=0;s<t.length;s++)this.free(t[s])}clear(){this.items.length=0}}class jt{constructor(t=0,s=0){this.x=t,this.y=s}set(t,s){return this.x=t,this.y=s,this}length(){const t=this.x,s=this.y;return Math.sqrt(t*t+s*s)}normalize(){const t=this.length();return t!=0&&(this.x/=t,this.y/=t),this}}class js{constructor(){this.maxDelta=.064,this.framesPerSecond=0,this.delta=0,this.totalTime=0,this.lastTime=Date.now()/1e3,this.frameCount=0,this.frameTime=0}update(){const t=Date.now()/1e3;this.delta=t-this.lastTime,this.frameTime+=this.delta,this.totalTime+=this.delta,this.delta>this.maxDelta&&(this.delta=this.maxDelta),this.lastTime=t,this.frameCount++,this.frameTime>1&&(this.framesPerSecond=this.frameCount/this.frameTime,this.frameTime=0,this.frameCount=0)}}class tn{constructor(t=32){this.addedValues=0,this.lastValue=0,this.mean=0,this.dirty=!0,this.values=new Array(t)}hasEnoughData(){return this.addedValues>=this.values.length}addValue(t){this.addedValues<this.values.length&&this.addedValues++,this.values[this.lastValue++]=t,this.lastValue>this.values.length-1&&(this.lastValue=0),this.dirty=!0}getMean(){if(this.hasEnoughData()){if(this.dirty){let t=0;for(let s=0;s<this.values.length;s++)t+=this.values[s];this.mean=t/this.values.length,this.dirty=!1}return this.mean}return 0}}class ye{constructor(){this.minX=0,this.minY=0,this.maxX=0,this.maxY=0,this.boundingBoxes=new Array,this.polygons=new Array,this.polygonPool=new be(()=>R.newFloatArray(16))}update(t,s){if(!t)throw new Error("skeleton cannot be null.");const e=this.boundingBoxes,r=this.polygons,a=this.polygonPool,f=t.slots,l=f.length;e.length=0,a.freeAll(r),r.length=0;for(let n=0;n<l;n++){const o=f[n];if(!o.bone.active)continue;const c=o.getAttachment();if(c!=null&&c.type===K.BoundingBox){const d=c;e.push(d);let h=a.obtain();h.length!=d.worldVerticesLength&&(h=R.newFloatArray(d.worldVerticesLength)),r.push(h),d.computeWorldVertices(o,0,d.worldVerticesLength,h,0,2)}}s?this.aabbCompute():(this.minX=Number.POSITIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY)}aabbCompute(){let t=Number.POSITIVE_INFINITY,s=Number.POSITIVE_INFINITY,e=Number.NEGATIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const a=this.polygons;for(let f=0,l=a.length;f<l;f++){const n=a[f],o=n;for(let c=0,d=n.length;c<d;c+=2){const h=o[c],m=o[c+1];t=Math.min(t,h),s=Math.min(s,m),e=Math.max(e,h),r=Math.max(r,m)}}this.minX=t,this.minY=s,this.maxX=e,this.maxY=r}aabbContainsPoint(t,s){return t>=this.minX&&t<=this.maxX&&s>=this.minY&&s<=this.maxY}aabbIntersectsSegment(t,s,e,r){const a=this.minX,f=this.minY,l=this.maxX,n=this.maxY;if(t<=a&&e<=a||s<=f&&r<=f||t>=l&&e>=l||s>=n&&r>=n)return!1;const o=(r-s)/(e-t);let c=o*(a-t)+s;if(c>f&&c<n||(c=o*(l-t)+s,c>f&&c<n))return!0;let d=(f-s)/o+t;return d>a&&d<l||(d=(n-s)/o+t,d>a&&d<l)}aabbIntersectsSkeleton(t){return this.minX<t.maxX&&this.maxX>t.minX&&this.minY<t.maxY&&this.maxY>t.minY}containsPoint(t,s){const e=this.polygons;for(let r=0,a=e.length;r<a;r++)if(this.containsPointPolygon(e[r],t,s))return this.boundingBoxes[r];return null}containsPointPolygon(t,s,e){const r=t,a=t.length;let f=a-2,l=!1;for(let n=0;n<a;n+=2){const o=r[n+1],c=r[f+1];if(o<e&&c>=e||c<e&&o>=e){const d=r[n];d+(e-o)/(c-o)*(r[f]-d)<s&&(l=!l)}f=n}return l}intersectsSegment(t,s,e,r){const a=this.polygons;for(let f=0,l=a.length;f<l;f++)if(this.intersectsSegmentPolygon(a[f],t,s,e,r))return this.boundingBoxes[f];return null}intersectsSegmentPolygon(t,s,e,r,a){const f=t,l=t.length,n=s-r,o=e-a,c=s*a-e*r;let d=f[l-2],h=f[l-1];for(let m=0;m<l;m+=2){const u=f[m],g=f[m+1],w=d*g-h*u,S=d-u,p=h-g,b=n*p-o*S,x=(c*S-n*w)/b;if((x>=d&&x<=u||x>=u&&x<=d)&&(x>=s&&x<=r||x>=r&&x<=s)){const y=(c*p-o*w)/b;if((y>=h&&y<=g||y>=g&&y<=h)&&(y>=e&&y<=a||y>=a&&y<=e))return!0}d=u,h=g}return!1}getPolygon(t){if(!t)throw new Error("boundingBox cannot be null.");const s=this.boundingBoxes.indexOf(t);return s==-1?null:this.polygons[s]}getWidth(){return this.maxX-this.minX}getHeight(){return this.maxY-this.minY}}const vt={yDown:!0,FAIL_ON_NON_EXISTING_SKIN:!1,GLOBAL_AUTO_UPDATE:!0,GLOBAL_DELAY_LIMIT:0},Mt=[0,0,0];class bs extends Us{constructor(){super(...arguments),this.region=null,this.attachment=null}}class ys extends zs{constructor(t,s,e,r,a){super(t,s,e,r,a),this.region=null,this.attachment=null}}const Ss=class extends Lt{constructor(i){if(super(),!i)throw new Error("The spineData param is required.");if(typeof i=="string")throw new Error('spineData param cant be string. Please use spine.Spine.fromAtlas("YOUR_RESOURCE_NAME") from now on.');this.spineData=i,this.createSkeleton(i),this.slotContainers=[],this.tempClipContainers=[];for(let t=0,s=this.skeleton.slots.length;t<s;t++){const e=this.skeleton.slots[t],r=e.getAttachment(),a=this.newContainer();if(a.name=e.data.name,this.slotContainers.push(a),this.addChild(a),this.tempClipContainers.push(null),!!r)if(r.type===K.Region){const f=r.name,l=this.createSprite(e,r,f);e.currentSprite=l,e.currentSpriteName=f,a.addChild(l)}else if(r.type===K.Mesh){const f=this.createMesh(e,r);e.currentMesh=f,e.currentMeshId=r.id,e.currentMeshName=r.name,a.addChild(f)}else r.type===K.Clipping&&(this.createGraphics(e,r),a.addChild(e.clippingContainer),a.addChild(e.currentGraphics))}this.tintRgb=new Float32Array([1,1,1]),this.autoUpdate=!0,this.visible=!0}get debug(){return this._debug}set debug(i){var t;i!=this._debug&&((t=this._debug)==null||t.unregisterSpine(this),i==null||i.registerSpine(this),this._debug=i)}get autoUpdate(){return this._autoUpdate}set autoUpdate(i){i!==this._autoUpdate&&(this._autoUpdate=i,this.updateTransform=i?Ss.prototype.autoUpdateTransform:Lt.prototype.updateTransform)}get tint(){return ot.rgb2hex(this.tintRgb)}set tint(i){this.tintRgb=ot.hex2rgb(i,this.tintRgb)}get delayLimit(){return(typeof this.localDelayLimit!="undefined"?this.localDelayLimit:vt.GLOBAL_DELAY_LIMIT)||Number.MAX_VALUE}update(i){var o;const t=this.delayLimit;if(i>t&&(i=t),this.state.update(i),this.state.apply(this.skeleton),!this.skeleton)return;this.skeleton.updateWorldTransform();const s=this.skeleton.slots,e=this.color;let r=null,a=null;e?(r=e.light,a=e.dark):r=this.tintRgb;for(let c=0,d=s.length;c<d;c++){const h=s[c],m=h.getAttachment(),u=this.slotContainers[c];if(!m){u.visible=!1;continue}let g=null;m.sequence&&m.sequence.apply(h,m);let w=m.region;const S=m.color;switch(m!=null&&m.type){case K.Region:if(u.transform.setFromMatrix(h.bone.matrix),w=m.region,h.currentMesh&&(h.currentMesh.visible=!1,h.currentMesh=null,h.currentMeshId=void 0,h.currentMeshName=void 0),!w){h.currentSprite&&(h.currentSprite.renderable=!1);break}if(!h.currentSpriteName||h.currentSpriteName!==m.name){const x=m.name;if(h.currentSprite&&(h.currentSprite.visible=!1),h.sprites=h.sprites||{},h.sprites[x]!==void 0)h.sprites[x].visible=!0;else{const y=this.createSprite(h,m,x);u.addChild(y)}h.currentSprite=h.sprites[x],h.currentSpriteName=x}h.currentSprite.renderable=!0,h.hackRegion||this.setSpriteRegion(m,h.currentSprite,w),h.currentSprite.color?g=h.currentSprite.color:(Mt[0]=r[0]*h.color.r*S.r,Mt[1]=r[1]*h.color.g*S.g,Mt[2]=r[2]*h.color.b*S.b,h.currentSprite.tint=ot.rgb2hex(Mt)),h.currentSprite.blendMode=h.blendMode;break;case K.Mesh:if(h.currentSprite){h.currentSprite.visible=!1,h.currentSprite=null,h.currentSpriteName=void 0;const x=new _s;x._parentID=-1,x._worldID=u.transform._worldID,u.transform=x}if(!w){h.currentMesh&&(h.currentMesh.renderable=!1);break}const b=m.id;if(h.currentMeshId===void 0||h.currentMeshId!==b){const x=b;if(h.currentMesh&&(h.currentMesh.visible=!1),h.meshes=h.meshes||{},h.meshes[x]!==void 0)h.meshes[x].visible=!0;else{const y=this.createMesh(h,m);u.addChild(y)}h.currentMesh=h.meshes[x],h.currentMeshName=m.name,h.currentMeshId=x}h.currentMesh.renderable=!0,m.computeWorldVerticesOld(h,h.currentMesh.vertices),h.currentMesh.color?g=h.currentMesh.color:(Mt[0]=r[0]*h.color.r*S.r,Mt[1]=r[1]*h.color.g*S.g,Mt[2]=r[2]*h.color.b*S.b,h.currentMesh.tint=ot.rgb2hex(Mt)),h.currentMesh.blendMode=h.blendMode,h.hackRegion||this.setMeshRegion(m,h.currentMesh,w);break;case K.Clipping:h.currentGraphics||(this.createGraphics(h,m),u.addChild(h.clippingContainer),u.addChild(h.currentGraphics)),this.updateGraphics(h,m),u.alpha=1,u.visible=!0;continue;default:u.visible=!1;continue}if(u.visible=!0,g){let p=h.color.r*S.r,b=h.color.g*S.g,x=h.color.b*S.b;g.setLight(r[0]*p+a[0]*(1-p),r[1]*b+a[1]*(1-b),r[2]*x+a[2]*(1-x)),h.darkColor?(p=h.darkColor.r,b=h.darkColor.g,x=h.darkColor.b):(p=0,b=0,x=0),g.setDark(r[0]*p+a[0]*(1-p),r[1]*b+a[1]*(1-b),r[2]*x+a[2]*(1-x))}u.alpha=h.color.a}const f=this.skeleton.drawOrder;let l=null,n=null;for(let c=0,d=f.length;c<d;c++){const h=s[f[c].data.index],m=this.slotContainers[f[c].data.index];if(n||m.parent!==null&&m.parent!==this&&(m.parent.removeChild(m),m.parent=this),h.currentGraphics&&h.getAttachment())n=h.clippingContainer,l=h.getAttachment(),n.children.length=0,this.children[c]=m,l.endSlot===h.data&&(l.endSlot=null);else if(n){let u=this.tempClipContainers[c];u||(u=this.tempClipContainers[c]=this.newContainer(),u.visible=!1),this.children[c]=u,m.parent=null,n.addChild(m),l.endSlot==h.data&&(n.renderable=!0,n=null,l=null)}else this.children[c]=m}(o=this._debug)==null||o.renderDebug(this)}setSpriteRegion(i,t,s){t.attachment===i&&t.region===s||(t.region=s,t.attachment=i,t.texture=s.texture,t.rotation=i.rotation*F.degRad,t.position.x=i.x,t.position.y=i.y,t.alpha=i.color.a,s.size?(t.scale.x=s.size.width/s.originalWidth,t.scale.y=-s.size.height/s.originalHeight):(t.scale.x=i.scaleX*i.width/s.originalWidth,t.scale.y=-i.scaleY*i.height/s.originalHeight))}setMeshRegion(i,t,s){t.attachment===i&&t.region===s||(t.region=s,t.attachment=i,t.texture=s.texture,s.texture.updateUvs(),t.uvBuffer.update(i.regionUVs))}autoUpdateTransform(){if(vt.GLOBAL_AUTO_UPDATE){this.lastTime=this.lastTime||Date.now();const i=(Date.now()-this.lastTime)*.001;this.lastTime=Date.now(),this.update(i)}else this.lastTime=0;Lt.prototype.updateTransform.call(this)}createSprite(i,t,s){let e=t.region;i.hackAttachment===t&&(e=i.hackRegion);const r=e?e.texture:null,a=this.newSprite(r);return a.anchor.set(.5),e&&this.setSpriteRegion(t,a,t.region),i.sprites=i.sprites||{},i.sprites[s]=a,a}createMesh(i,t){let s=t.region;i.hackAttachment===t&&(s=i.hackRegion,i.hackAttachment=null,i.hackRegion=null);const e=this.newMesh(s?s.texture:null,new Float32Array(t.regionUVs.length),t.regionUVs,new Uint16Array(t.triangles),Ws.TRIANGLES);return typeof e._canvasPadding!="undefined"&&(e._canvasPadding=1.5),e.alpha=t.color.a,e.region=t.region,s&&this.setMeshRegion(t,e,s),i.meshes=i.meshes||{},i.meshes[t.id]=e,e}createGraphics(i,t){const s=this.newGraphics(),e=new qs([]);return s.clear(),s.beginFill(16777215,1),s.drawPolygon(e),s.renderable=!1,i.currentGraphics=s,i.clippingContainer=this.newContainer(),i.clippingContainer.mask=i.currentGraphics,s}updateGraphics(i,t){const s=i.currentGraphics.geometry,e=s.graphicsData[0].shape.points,r=t.worldVerticesLength;e.length=r,t.computeWorldVertices(i,0,r,e,0,2),s.invalidate()}hackTextureBySlotIndex(i,t=null,s=null){const e=this.skeleton.slots[i];if(!e)return!1;const r=e.getAttachment();let a=r.region;return t?(a=new Qt,a.texture=t,a.size=s,e.hackRegion=a,e.hackAttachment=r):(e.hackRegion=null,e.hackAttachment=null),e.currentSprite?this.setSpriteRegion(r,e.currentSprite,a):e.currentMesh&&this.setMeshRegion(r,e.currentMesh,a),!0}hackTextureBySlotName(i,t=null,s=null){const e=this.skeleton.findSlotIndex(i);return e==-1?!1:this.hackTextureBySlotIndex(e,t,s)}hackTextureAttachment(i,t,s,e=null){const r=this.skeleton.findSlotIndex(i),a=this.skeleton.getAttachmentByName(i,t);a.region.texture=s;const f=this.skeleton.slots[r];if(!f)return!1;const l=f.getAttachment();if(t===l.name){let n=a.region;return s?(n=new Qt,n.texture=s,n.size=e,f.hackRegion=n,f.hackAttachment=l):(f.hackRegion=null,f.hackAttachment=null),f.currentSprite&&f.currentSprite.region!=n?(this.setSpriteRegion(l,f.currentSprite,n),f.currentSprite.region=n):f.currentMesh&&f.currentMesh.region!=n&&this.setMeshRegion(l,f.currentMesh,n),!0}return!1}newContainer(){return new Lt}newSprite(i){return new bs(i)}newGraphics(){return new it}newMesh(i,t,s,e,r){return new ys(i,t,s,e,r)}transformHack(){return 1}hackAttachmentGroups(i,t,s){if(!i)return;const e=[],r=[];for(let a=0,f=this.skeleton.slots.length;a<f;a++){const l=this.skeleton.slots[a],n=l.currentSpriteName||l.currentMeshName||"",o=l.currentSprite||l.currentMesh;n.endsWith(i)?(o.parentGroup=t,r.push(o)):s&&o&&(o.parentGroup=s,e.push(o))}return[e,r]}destroy(i){this.debug=null;for(let t=0,s=this.skeleton.slots.length;t<s;t++){const e=this.skeleton.slots[t];for(const r in e.meshes)e.meshes[r].destroy(i);e.meshes=null;for(const r in e.sprites)e.sprites[r].destroy(i);e.sprites=null}for(let t=0,s=this.slotContainers.length;t<s;t++)this.slotContainers[t].destroy(i);this.spineData=null,this.skeleton=null,this.slotContainers=null,this.stateData=null,this.state=null,this.tempClipContainers=null,super.destroy(i)}};let te=Ss;te.clippingPolygon=[],Object.defineProperty(te.prototype,"visible",{get(){return this._visible},set(i){i!==this._visible&&(this._visible=i,i&&(this.lastTime=0))}});class en{constructor(){this.registeredSpines=new Map,this.drawDebug=!0,this.drawMeshHull=!0,this.drawMeshTriangles=!0,this.drawBones=!0,this.drawPaths=!0,this.drawBoundingBoxes=!0,this.drawClipping=!0,this.drawRegionAttachments=!0,this.lineWidth=1,this.regionAttachmentsColor=30975,this.meshHullColor=30975,this.meshTrianglesColor=16763904,this.clippingPolygonColor=16711935,this.boundingBoxesRectColor=65280,this.boundingBoxesPolygonColor=65280,this.boundingBoxesCircleColor=65280,this.pathsCurveColor=16711680,this.pathsLineColor=16711935,this.skeletonXYColor=16711680,this.bonesColor=61132}registerSpine(t){this.registeredSpines.has(t)&&console.warn("SpineDebugRenderer.registerSpine() - this spine is already registered!",t);const s={parentDebugContainer:new Lt,bones:new Lt,skeletonXY:new it,regionAttachmentsShape:new it,meshTrianglesLine:new it,meshHullLine:new it,clippingPolygon:new it,boundingBoxesRect:new it,boundingBoxesCircle:new it,boundingBoxesPolygon:new it,pathsCurve:new it,pathsLine:new it};s.parentDebugContainer.addChild(s.bones),s.parentDebugContainer.addChild(s.skeletonXY),s.parentDebugContainer.addChild(s.regionAttachmentsShape),s.parentDebugContainer.addChild(s.meshTrianglesLine),s.parentDebugContainer.addChild(s.meshHullLine),s.parentDebugContainer.addChild(s.clippingPolygon),s.parentDebugContainer.addChild(s.boundingBoxesRect),s.parentDebugContainer.addChild(s.boundingBoxesCircle),s.parentDebugContainer.addChild(s.boundingBoxesPolygon),s.parentDebugContainer.addChild(s.pathsCurve),s.parentDebugContainer.addChild(s.pathsLine),t.addChild(s.parentDebugContainer),this.registeredSpines.set(t,s)}renderDebug(t){this.registeredSpines.has(t)||this.registerSpine(t);const s=this.registeredSpines.get(t);s.skeletonXY.clear(),s.regionAttachmentsShape.clear(),s.meshTrianglesLine.clear(),s.meshHullLine.clear(),s.clippingPolygon.clear(),s.boundingBoxesRect.clear(),s.boundingBoxesCircle.clear(),s.boundingBoxesPolygon.clear(),s.pathsCurve.clear(),s.pathsLine.clear();for(let a=s.bones.children.length;a>0;a--)s.bones.children[a-1].destroy({children:!0,texture:!0,baseTexture:!0});const e=t.scale.x||t.scale.y||1,r=this.lineWidth/e;this.drawBones&&this.drawBonesFunc(t,s,r,e),this.drawPaths&&this.drawPathsFunc(t,s,r),this.drawBoundingBoxes&&this.drawBoundingBoxesFunc(t,s,r),this.drawClipping&&this.drawClippingFunc(t,s,r),(this.drawMeshHull||this.drawMeshTriangles)&&this.drawMeshHullAndMeshTriangles(t,s,r),this.drawRegionAttachments&&this.drawRegionAttachmentsFunc(t,s,r)}drawBonesFunc(t,s,e,r){const a=t.skeleton,f=a.x,l=a.y,n=a.bones;s.skeletonXY.lineStyle(e,this.skeletonXYColor,1);for(let c=0,d=n.length;c<d;c++){const h=n[c],m=h.data.length,u=f+h.matrix.tx,g=l+h.matrix.ty,w=f+m*h.matrix.a+h.matrix.tx,S=l+m*h.matrix.b+h.matrix.ty;if(h.data.name==="root"||h.data.parent===null)continue;const p=Math.abs(u-w),b=Math.abs(g-S),x=Math.pow(p,2),y=b,k=Math.pow(b,2),C=Math.sqrt(x+k),I=Math.pow(C,2),M=Math.PI/180,Y=Math.acos((I+k-x)/(2*y*C))||0;if(C===0)continue;const T=new it;s.bones.addChild(T);const E=C/50/r;T.beginFill(this.bonesColor,1),T.drawPolygon(0,0,0-E,C-E*3,0,C-E,0+E,C-E*3),T.endFill(),T.x=u,T.y=g,T.pivot.y=C;let X=0;u<w&&g<S?X=-Y+180*M:u>w&&g<S?X=180*M+Y:u>w&&g>S?X=-Y:u<w&&g>S?X=Y:g===S&&u<w?X=90*M:g===S&&u>w?X=-90*M:u===w&&g<S?X=180*M:u===w&&g>S&&(X=0),T.rotation=X,T.lineStyle(e+E/2.4,this.bonesColor,1),T.beginFill(0,.6),T.drawCircle(0,C,E*1.2),T.endFill()}const o=e*3;s.skeletonXY.moveTo(f-o,l-o),s.skeletonXY.lineTo(f+o,l+o),s.skeletonXY.moveTo(f+o,l-o),s.skeletonXY.lineTo(f-o,l+o)}drawRegionAttachmentsFunc(t,s,e){const a=t.skeleton.slots;s.regionAttachmentsShape.lineStyle(e,this.regionAttachmentsColor,1);for(let f=0,l=a.length;f<l;f++){const n=a[f],o=n.getAttachment();if(o==null||o.type!==K.Region)continue;const c=o,d=new Float32Array(8);c.updateOffset&&c.updateOffset(),c.computeWorldVertices(n,d,0,2),s.regionAttachmentsShape.drawPolygon(Array.from(d.slice(0,8)))}}drawMeshHullAndMeshTriangles(t,s,e){const a=t.skeleton.slots;s.meshHullLine.lineStyle(e,this.meshHullColor,1),s.meshTrianglesLine.lineStyle(e,this.meshTrianglesColor,1);for(let f=0,l=a.length;f<l;f++){const n=a[f];if(!n.bone.active)continue;const o=n.getAttachment();if(o==null||o.type!==K.Mesh)continue;const c=o,d=new Float32Array(c.worldVerticesLength),h=c.triangles;let m=c.hullLength;if(c.computeWorldVertices(n,0,c.worldVerticesLength,d,0,2),this.drawMeshTriangles)for(let u=0,g=h.length;u<g;u+=3){const w=h[u]*2,S=h[u+1]*2,p=h[u+2]*2;s.meshTrianglesLine.moveTo(d[w],d[w+1]),s.meshTrianglesLine.lineTo(d[S],d[S+1]),s.meshTrianglesLine.lineTo(d[p],d[p+1])}if(this.drawMeshHull&&m>0){m=(m>>1)*2;let u=d[m-2],g=d[m-1];for(let w=0,S=m;w<S;w+=2){const p=d[w],b=d[w+1];s.meshHullLine.moveTo(p,b),s.meshHullLine.lineTo(u,g),u=p,g=b}}}}drawClippingFunc(t,s,e){const a=t.skeleton.slots;s.clippingPolygon.lineStyle(e,this.clippingPolygonColor,1);for(let f=0,l=a.length;f<l;f++){const n=a[f];if(!n.bone.active)continue;const o=n.getAttachment();if(o==null||o.type!==K.Clipping)continue;const c=o,d=c.worldVerticesLength,h=new Float32Array(d);c.computeWorldVertices(n,0,d,h,0,2),s.clippingPolygon.drawPolygon(Array.from(h))}}drawBoundingBoxesFunc(t,s,e){s.boundingBoxesRect.lineStyle(e,this.boundingBoxesRectColor,5);const r=new ye;r.update(t.skeleton,!0),s.boundingBoxesRect.drawRect(r.minX,r.minY,r.getWidth(),r.getHeight());const a=r.polygons,f=(l,n,o)=>{if(s.boundingBoxesPolygon.lineStyle(e,this.boundingBoxesPolygonColor,1),s.boundingBoxesPolygon.beginFill(this.boundingBoxesPolygonColor,.1),o<3)throw new Error("Polygon must contain at least 3 vertices");const c=[],d=e*2;for(let h=0,m=l.length;h<m;h+=2){const u=l[h],g=l[h+1];s.boundingBoxesCircle.lineStyle(0),s.boundingBoxesCircle.beginFill(this.boundingBoxesCircleColor),s.boundingBoxesCircle.drawCircle(u,g,d),s.boundingBoxesCircle.endFill(),c.push(u,g)}s.boundingBoxesPolygon.drawPolygon(c),s.boundingBoxesPolygon.endFill()};for(let l=0,n=a.length;l<n;l++){const o=a[l];f(o,0,o.length)}}drawPathsFunc(t,s,e){const a=t.skeleton.slots;s.pathsCurve.lineStyle(e,this.pathsCurveColor,1),s.pathsLine.lineStyle(e,this.pathsLineColor,1);for(let f=0,l=a.length;f<l;f++){const n=a[f];if(!n.bone.active)continue;const o=n.getAttachment();if(o==null||o.type!==K.Path)continue;const c=o;let d=c.worldVerticesLength;const h=new Float32Array(d);c.computeWorldVertices(n,0,d,h,0,2);let m=h[2],u=h[3],g=0,w=0;if(c.closed){const S=h[0],p=h[1],b=h[d-2],x=h[d-1];g=h[d-4],w=h[d-3],s.pathsCurve.moveTo(m,u),s.pathsCurve.bezierCurveTo(S,p,b,x,g,w),s.pathsLine.moveTo(m,u),s.pathsLine.lineTo(S,p),s.pathsLine.moveTo(g,w),s.pathsLine.lineTo(b,x)}d-=4;for(let S=4;S<d;S+=6){const p=h[S],b=h[S+1],x=h[S+2],y=h[S+3];g=h[S+4],w=h[S+5],s.pathsCurve.moveTo(m,u),s.pathsCurve.bezierCurveTo(p,b,x,y,g,w),s.pathsLine.moveTo(m,u),s.pathsLine.lineTo(p,b),s.pathsLine.moveTo(g,w),s.pathsLine.lineTo(x,y),m=g,u=w}}}unregisterSpine(t){this.registeredSpines.has(t)||console.warn("SpineDebugRenderer.unregisterSpine() - spine is not registered, can't unregister!",t),this.registeredSpines.get(t).parentDebugContainer.destroy({baseTexture:!0,children:!0,texture:!0}),this.registeredSpines.delete(t)}}const sn={extension:Jt.Asset,loader:{extension:{type:Jt.LoadParser,priority:gs.Normal},test(i){return Nt(i,".atlas")},async load(i){return await(await us.ADAPTER.fetch(i)).text()},testParse(i,t){const s=Nt(t.src,".atlas"),e=typeof i=="string";return Promise.resolve(s&&e)},async parse(i,t,s){const e=t.data;let r=ot.path.dirname(t.src);r&&r.lastIndexOf("/")!==r.length-1&&(r+="/");let a=null,f=null;const l=new Promise((c,d)=>{a=c,f=d});let n;const o=c=>{c||f(`Something went terribly wrong loading a spine .atlas file
Most likely your texture failed to load.`),a(n)};if(e.image||e.images){const c=Object.assign(e.image?{default:e.image}:{},e.images);n=new Zt(i,(d,h)=>{const m=c[d]||c.default;m&&m.baseTexture?h(m.baseTexture):h(m)},o)}else n=new Zt(i,ks(s,r,e.imageMetadata),o);return await l},unload(i){i.dispose()}}},ks=(i,t,s)=>async(e,r)=>{const a=ot.path.normalize([...t.split(ot.path.sep),e].join(ot.path.sep)),f=await i.load({src:a,data:s});r(f.baseTexture)};ms.add(sn);function Cs(i){return i.hasOwnProperty("bones")}function nn(i){return i instanceof ArrayBuffer}class rn{constructor(){}installLoader(){const t=this,s={extension:Jt.Asset,loader:{extension:{type:Jt.LoadParser,priority:gs.Normal},test(e){return Nt(e,".skel")},async load(e){return await(await us.ADAPTER.fetch(e)).arrayBuffer()},testParse(e,r){var n;const a=Nt(r.src,".json")&&Cs(e),f=Nt(r.src,".skel")&&nn(e),l=((n=r.data)==null?void 0:n.spineAtlas)===!1;return Promise.resolve(a&&!l||f)},async parse(e,r,a){var p;const f=ot.path.extname(r.src).toLowerCase(),l=ot.path.basename(r.src,f);let n=ot.path.dirname(r.src);n&&n.lastIndexOf("/")!==n.length-1&&(n+="/");const o=Nt(r.src,".json")&&Cs(e);let c=null,d=e;o?c=t.createJsonParser():(c=t.createBinaryParser(),d=new Uint8Array(e));const h=r.data||{},m=(p=h==null?void 0:h.spineSkeletonScale)!=null?p:null;m&&(c.scale=m);const u=h.spineAtlas;if(u&&u.pages)return t.parseData(c,u,d);const g=h.atlasRawData;if(g){let b=null,x=null;const y=new Promise((I,M)=>{b=I,x=M}),k=new Zt(g,ks(a,n,h.imageMetadata),I=>{I||x(`Something went terribly wrong loading a spine .atlas file
Most likely your texture failed to load.`),b(k)}),C=await y;return t.parseData(c,C,d)}let w=h.spineAtlasFile;w||(w=`${n+l}.atlas`);const S=await a.load({src:w,data:h,alias:h.spineAtlasAlias});return t.parseData(c,S,d)}}};return ms.add(s),s}}class Se{constructor(t){if(!t)throw new Error("name cannot be null.");this.name=t}}const As=class extends Se{constructor(i){super(i),this.id=As.nextID++,this.bones=null,this.vertices=[],this.worldVerticesLength=0,this.timelineAttachment=this}computeWorldVerticesOld(i,t){this.computeWorldVertices(i,0,this.worldVerticesLength,t,0,2)}computeWorldVertices(i,t,s,e,r,a){s=r+(s>>1)*a;const f=i.bone.skeleton,l=i.deform;let n=this.vertices;const o=this.bones;if(!o){l.length>0&&(n=l);const m=i.bone.matrix,u=m.tx,g=m.ty,w=m.a,S=m.c,p=m.b,b=m.d;for(let x=t,y=r;y<s;x+=2,y+=a){const k=n[x],C=n[x+1];e[y]=k*w+C*S+u,e[y+1]=k*p+C*b+g}return}let c=0,d=0;for(let m=0;m<t;m+=2){const u=o[c];c+=u+1,d+=u}const h=f.bones;if(l.length==0)for(let m=r,u=d*3;m<s;m+=a){let g=0,w=0,S=o[c++];for(S+=c;c<S;c++,u+=3){const p=h[o[c]].matrix,b=n[u],x=n[u+1],y=n[u+2];g+=(b*p.a+x*p.c+p.tx)*y,w+=(b*p.b+x*p.d+p.ty)*y}e[m]=g,e[m+1]=w}else{const m=l;for(let u=r,g=d*3,w=d<<1;u<s;u+=a){let S=0,p=0,b=o[c++];for(b+=c;c<b;c++,g+=3,w+=2){const x=h[o[c]].matrix,y=n[g]+m[w],k=n[g+1]+m[w+1],C=n[g+2];S+=(y*x.a+k*x.c+x.tx)*C,p+=(y*x.b+k*x.d+x.ty)*C}e[u]=S,e[u+1]=p}}}copyTo(i){this.bones?(i.bones=new Array(this.bones.length),R.arrayCopy(this.bones,0,i.bones,0,this.bones.length)):i.bones=null,this.vertices&&(i.vertices=R.newFloatArray(this.vertices.length),R.arrayCopy(this.vertices,0,i.vertices,0,this.vertices.length)),i.worldVerticesLength=this.worldVerticesLength,i.timelineAttachment=this.timelineAttachment}};let lt=As;lt.nextID=0;class ce extends lt{constructor(t){super(t),this.type=K.BoundingBox,this.color=new N(1,1,1,1)}copy(){const t=new ce(this.name);return this.copyTo(t),t.color.setFromColor(this.color),t}}class le extends lt{constructor(t){super(t),this.type=K.Clipping,this.endSlot=null,this.color=new N(.2275,.2275,.8078,1)}copy(){const t=new le(this.name);return this.copyTo(t),t.endSlot=this.endSlot,t.color.setFromColor(this.color),t}}class Rt extends lt{constructor(t,s){super(t),this.type=K.Mesh,this.region=null,this.triangles=[],this.color=new N(1,1,1,1),this.width=0,this.height=0,this.hullLength=0,this.edges=[],this.parentMesh=null,this.sequence=null,this.tempColor=new N(0,0,0,0),this.path=s}getParentMesh(){return this.parentMesh}setParentMesh(t){this.parentMesh=t,t&&(this.bones=t.bones,this.vertices=t.vertices,this.worldVerticesLength=t.worldVerticesLength,this.regionUVs=t.regionUVs,this.triangles=t.triangles,this.hullLength=t.hullLength,this.worldVerticesLength=t.worldVerticesLength)}copy(){if(this.parentMesh)return this.newLinkedMesh();const t=new Rt(this.name,this.path);return t.region=this.region,t.color.setFromColor(this.color),this.copyTo(t),t.regionUVs=new Float32Array(this.regionUVs.length),R.arrayCopy(this.regionUVs,0,t.regionUVs,0,this.regionUVs.length),t.triangles=new Array(this.triangles.length),R.arrayCopy(this.triangles,0,t.triangles,0,this.triangles.length),t.hullLength=this.hullLength,t.sequence=this.sequence!=null?this.sequence.copy():null,this.edges&&(t.edges=new Array(this.edges.length),R.arrayCopy(this.edges,0,t.edges,0,this.edges.length)),t.width=this.width,t.height=this.height,t}computeWorldVertices(t,s,e,r,a,f){this.sequence!=null&&this.sequence.apply(t,this),super.computeWorldVertices(t,s,e,r,a,f)}newLinkedMesh(){const t=new Rt(this.name,this.path);return t.region=this.region,t.color.setFromColor(this.color),t.timelineAttachment=this.timelineAttachment,t.setParentMesh(this.parentMesh?this.parentMesh:this),t}}class Xt extends lt{constructor(t){super(t),this.type=K.Path,this.lengths=[],this.closed=!1,this.constantSpeed=!1,this.color=new N(1,1,1,1)}copy(){const t=new Xt(this.name);return this.copyTo(t),t.lengths=new Array(this.lengths.length),R.arrayCopy(this.lengths,0,t.lengths,0,this.lengths.length),t.closed=closed,t.constantSpeed=this.constantSpeed,t.color.setFromColor(this.color),t}}class he extends lt{constructor(t){super(t),this.type=K.Point,this.x=0,this.y=0,this.rotation=0,this.color=new N(.38,.94,0,1)}computeWorldPosition(t,s){const e=t.matrix;return s.x=this.x*e.a+this.y*e.c+t.worldX,s.y=this.x*e.b+this.y*e.d+t.worldY,s}computeWorldRotation(t){const s=t.matrix,e=F.cosDeg(this.rotation),r=F.sinDeg(this.rotation),a=e*s.a+r*s.c,f=e*s.b+r*s.d;return Math.atan2(f,a)*F.radDeg}copy(){const t=new he(this.name);return t.x=this.x,t.y=this.y,t.rotation=this.rotation,t.color.setFromColor(this.color),t}}const vs=class extends Se{constructor(i,t){super(i),this.type=K.Region,this.x=0,this.y=0,this.scaleX=1,this.scaleY=1,this.rotation=0,this.width=0,this.height=0,this.color=new N(1,1,1,1),this.rendererObject=null,this.region=null,this.sequence=null,this.offset=R.newFloatArray(8),this.uvs=R.newFloatArray(8),this.tempColor=new N(1,1,1,1),this.path=t}updateRegion(){if(!this.region)throw new Error("Region not set.");const i=this.region,t=this.width/this.region.originalWidth*this.scaleX,s=this.height/this.region.originalHeight*this.scaleY,e=-this.width/2*this.scaleX+this.region.offsetX*t,r=-this.height/2*this.scaleY+this.region.offsetY*s,a=e+this.region.width*t,f=r+this.region.height*s,l=this.rotation*Math.PI/180,n=Math.cos(l),o=Math.sin(l),c=this.x,d=this.y,h=e*n+c,m=e*o,u=r*n+d,g=r*o,w=a*n+c,S=a*o,p=f*n+d,b=f*o,x=this.offset;x[0]=h-g,x[1]=u+m,x[2]=h-b,x[3]=p+m,x[4]=w-b,x[5]=p+S,x[6]=w-g,x[7]=u+S;const y=this.uvs;i.degrees==90?(y[2]=i.u,y[3]=i.v2,y[4]=i.u,y[5]=i.v,y[6]=i.u2,y[7]=i.v,y[0]=i.u2,y[1]=i.v2):(y[0]=i.u,y[1]=i.v2,y[2]=i.u,y[3]=i.v,y[4]=i.u2,y[5]=i.v,y[6]=i.u2,y[7]=i.v2)}computeWorldVertices(i,t,s,e){this.sequence!=null&&this.sequence.apply(i,this);const r=i.bone,a=this.offset,f=r.matrix,l=f.tx,n=f.ty,o=f.a,c=f.c,d=f.b,h=f.d;let m=0,u=0;m=a[0],u=a[1],t[s]=m*o+u*c+l,t[s+1]=m*d+u*h+n,s+=e,m=a[2],u=a[3],t[s]=m*o+u*c+l,t[s+1]=m*d+u*h+n,s+=e,m=a[4],u=a[5],t[s]=m*o+u*c+l,t[s+1]=m*d+u*h+n,s+=e,m=a[6],u=a[7],t[s]=m*o+u*c+l,t[s+1]=m*d+u*h+n}copy(){const i=new vs(this.name,this.path);return i.region=this.region,i.rendererObject=this.rendererObject,i.x=this.x,i.y=this.y,i.scaleX=this.scaleX,i.scaleY=this.scaleY,i.rotation=this.rotation,i.width=this.width,i.height=this.height,R.arrayCopy(this.uvs,0,i.uvs,0,8),R.arrayCopy(this.offset,0,i.offset,0,8),i.color.setFromColor(this.color),i.sequence=this.sequence!=null?this.sequence.copy():null,i}};let q=vs;q.X1=0,q.Y1=1,q.C1R=2,q.C1G=3,q.C1B=4,q.C1A=5,q.U1=6,q.V1=7,q.X2=8,q.Y2=9,q.C2R=10,q.C2G=11,q.C2B=12,q.C2A=13,q.U2=14,q.V2=15,q.X3=16,q.Y3=17,q.C3R=18,q.C3G=19,q.C3B=20,q.C3A=21,q.U3=22,q.V3=23,q.X4=24,q.Y4=25,q.C4R=26,q.C4G=27,q.C4B=28,q.C4A=29,q.U4=30,q.V4=31;const ee=class{constructor(i){this.id=ee.nextID(),this.start=0,this.digits=0,this.setupIndex=0,this.regions=new Array(i)}copy(){const i=new ee(this.regions.length);return R.arrayCopy(this.regions,0,i.regions,0,this.regions.length),i.start=this.start,i.digits=this.digits,i.setupIndex=this.setupIndex,i}apply(i,t){let s=i.sequenceIndex;s==-1&&(s=this.setupIndex),s>=this.regions.length&&(s=this.regions.length-1);const e=this.regions[s];t.region!=e&&(t.region=e)}getPath(i,t){let s=i;const e=(this.start+t).toString();for(let r=this.digits-e.length;r>0;r--)s+="0";return s+=e,s}static nextID(){return ee._nextID++}};let se=ee;se._nextID=0;var gt=(i=>(i[i.hold=0]="hold",i[i.once=1]="once",i[i.loop=2]="loop",i[i.pingpong=3]="pingpong",i[i.onceReverse=4]="onceReverse",i[i.loopReverse=5]="loopReverse",i[i.pingpongReverse=6]="pingpongReverse",i))(gt||{});const ke=[0,1,2,3,4,5,6];class ne{constructor(t,s,e){if(this.timelines=[],this.timelineIds=new we,!t)throw new Error("name cannot be null.");this.name=t,this.setTimelines(s),this.duration=e}setTimelines(t){if(!t)throw new Error("timelines cannot be null.");this.timelines=t,this.timelineIds.clear();for(let s=0;s<t.length;s++)this.timelineIds.addAll(t[s].getPropertyIds())}hasTimeline(t){for(let s=0;s<t.length;s++)if(this.timelineIds.contains(t[s]))return!0;return!1}apply(t,s,e,r,a,f,l,n){if(!t)throw new Error("skeleton cannot be null.");r&&this.duration!=0&&(e%=this.duration,s>0&&(s%=this.duration));const o=this.timelines;for(let c=0,d=o.length;c<d;c++)o[c].apply(t,s,e,a,f,l,n)}}const H={rotate:0,x:1,y:2,scaleX:3,scaleY:4,shearX:5,shearY:6,rgb:7,alpha:8,rgb2:9,attachment:10,deform:11,event:12,drawOrder:13,ikConstraint:14,transformConstraint:15,pathConstraintPosition:16,pathConstraintSpacing:17,pathConstraintMix:18,sequence:19};class J{constructor(t,s){this.propertyIds=s,this.frames=R.newFloatArray(t*this.getFrameEntries())}getPropertyIds(){return this.propertyIds}getFrameEntries(){return 1}getFrameCount(){return this.frames.length/this.getFrameEntries()}getDuration(){return this.frames[this.frames.length-this.getFrameEntries()]}static search1(t,s){const e=t.length;for(let r=1;r<e;r++)if(t[r]>s)return r-1;return e-1}static search(t,s,e){const r=t.length;for(let a=e;a<r;a+=e)if(t[a]>s)return a-e;return r-e}}class ht extends J{constructor(t,s,e){super(t,e),this.curves=R.newFloatArray(t+s*18),this.curves[t-1]=1}setLinear(t){this.curves[t]=0}setStepped(t){this.curves[t]=1}shrink(t){const s=this.getFrameCount()+t*18;if(this.curves.length>s){const e=R.newFloatArray(s);R.arrayCopy(this.curves,0,e,0,s),this.curves=e}}setBezier(t,s,e,r,a,f,l,n,o,c,d){const h=this.curves;let m=this.getFrameCount()+t*18;e==0&&(h[s]=2+m);const u=(r-f*2+n)*.03,g=(a-l*2+o)*.03,w=((f-n)*3-r+c)*.006,S=((l-o)*3-a+d)*.006;let p=u*2+w,b=g*2+S,x=(f-r)*.3+u+w*.16666667,y=(l-a)*.3+g+S*.16666667,k=r+x,C=a+y;for(let I=m+18;m<I;m+=2)h[m]=k,h[m+1]=C,x+=p,y+=b,p+=w,b+=S,k+=x,C+=y}getBezierValue(t,s,e,r){const a=this.curves;if(a[r]>t){const o=this.frames[s],c=this.frames[s+e];return c+(t-o)/(a[r]-o)*(a[r+1]-c)}const f=r+18;for(r+=2;r<f;r+=2)if(a[r]>=t){const o=a[r-2],c=a[r-1];return c+(t-o)/(a[r]-o)*(a[r+1]-c)}s+=this.getFrameEntries();const l=a[f-2],n=a[f-1];return n+(t-l)/(this.frames[s]-l)*(this.frames[s+e]-n)}}class dt extends ht{constructor(t,s,e){super(t,s,[e])}getFrameEntries(){return 2}setFrame(t,s,e){t<<=1,this.frames[t]=s,this.frames[t+1]=e}getCurveValue(t){const s=this.frames;let e=s.length-2;for(let a=2;a<=e;a+=2)if(s[a]>t){e=a-2;break}const r=this.curves[e>>1];switch(r){case 0:const a=s[e],f=s[e+1];return f+(t-a)/(s[e+2]-a)*(s[e+2+1]-f);case 1:return s[e+1]}return this.getBezierValue(t,e,1,r-2)}}class re extends ht{constructor(t,s,e,r){super(t,s,[e,r])}getFrameEntries(){return 3}setFrame(t,s,e,r){t*=3,this.frames[t]=s,this.frames[t+1]=e,this.frames[t+2]=r}}class qt extends dt{constructor(t,s,e){super(t,s,`${H.rotate}|${e}`),this.boneIndex=0,this.boneIndex=e}apply(t,s,e,r,a,f,l){const n=t.bones[this.boneIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.rotation=n.data.rotation;return;case v.first:n.rotation+=(n.data.rotation-n.rotation)*a}return}let c=this.getCurveValue(e);switch(f){case v.setup:n.rotation=n.data.rotation+c*a;break;case v.first:case v.replace:c+=n.data.rotation-n.rotation;case v.add:n.rotation+=c*a}}}class Ce extends re{constructor(t,s,e){super(t,s,`${H.x}|${e}`,`${H.y}|${e}`),this.boneIndex=0,this.boneIndex=e}apply(t,s,e,r,a,f,l){const n=t.bones[this.boneIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.x=n.data.x,n.y=n.data.y;return;case v.first:n.x+=(n.data.x-n.x)*a,n.y+=(n.data.y-n.y)*a}return}let c=0,d=0;const h=J.search(o,e,3),m=this.curves[h/3];switch(m){case 0:const u=o[h];c=o[h+1],d=o[h+2];const g=(e-u)/(o[h+3]-u);c+=(o[h+3+1]-c)*g,d+=(o[h+3+2]-d)*g;break;case 1:c=o[h+1],d=o[h+2];break;default:c=this.getBezierValue(e,h,1,m-2),d=this.getBezierValue(e,h,2,m+18-2)}switch(f){case v.setup:n.x=n.data.x+c*a,n.y=n.data.y+d*a;break;case v.first:case v.replace:n.x+=(n.data.x+c-n.x)*a,n.y+=(n.data.y+d-n.y)*a;break;case v.add:n.x+=c*a,n.y+=d*a}}}class Ae extends dt{constructor(t,s,e){super(t,s,`${H.x}|${e}`),this.boneIndex=0,this.boneIndex=e}apply(t,s,e,r,a,f,l){const n=t.bones[this.boneIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.x=n.data.x;return;case v.first:n.x+=(n.data.x-n.x)*a}return}const c=this.getCurveValue(e);switch(f){case v.setup:n.x=n.data.x+c*a;break;case v.first:case v.replace:n.x+=(n.data.x+c-n.x)*a;break;case v.add:n.x+=c*a}}}class ve extends dt{constructor(t,s,e){super(t,s,`${H.y}|${e}`),this.boneIndex=0,this.boneIndex=e}apply(t,s,e,r,a,f,l){const n=t.bones[this.boneIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.y=n.data.y;return;case v.first:n.y+=(n.data.y-n.y)*a}return}const c=this.getCurveValue(e);switch(f){case v.setup:n.y=n.data.y+c*a;break;case v.first:case v.replace:n.y+=(n.data.y+c-n.y)*a;break;case v.add:n.y+=c*a}}}class Me extends re{constructor(t,s,e){super(t,s,`${H.scaleX}|${e}`,`${H.scaleY}|${e}`),this.boneIndex=0,this.boneIndex=e}apply(t,s,e,r,a,f,l){const n=t.bones[this.boneIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.scaleX=n.data.scaleX,n.scaleY=n.data.scaleY;return;case v.first:n.scaleX+=(n.data.scaleX-n.scaleX)*a,n.scaleY+=(n.data.scaleY-n.scaleY)*a}return}let c,d;const h=J.search(o,e,3),m=this.curves[h/3];switch(m){case 0:const u=o[h];c=o[h+1],d=o[h+2];const g=(e-u)/(o[h+3]-u);c+=(o[h+3+1]-c)*g,d+=(o[h+3+2]-d)*g;break;case 1:c=o[h+1],d=o[h+2];break;default:c=this.getBezierValue(e,h,1,m-2),d=this.getBezierValue(e,h,2,m+18-2)}if(c*=n.data.scaleX,d*=n.data.scaleY,a==1)f==v.add?(n.scaleX+=c-n.data.scaleX,n.scaleY+=d-n.data.scaleY):(n.scaleX=c,n.scaleY=d);else{let u=0,g=0;if(l==j.mixOut)switch(f){case v.setup:u=n.data.scaleX,g=n.data.scaleY,n.scaleX=u+(Math.abs(c)*F.signum(u)-u)*a,n.scaleY=g+(Math.abs(d)*F.signum(g)-g)*a;break;case v.first:case v.replace:u=n.scaleX,g=n.scaleY,n.scaleX=u+(Math.abs(c)*F.signum(u)-u)*a,n.scaleY=g+(Math.abs(d)*F.signum(g)-g)*a;break;case v.add:n.scaleX+=(c-n.data.scaleX)*a,n.scaleY+=(d-n.data.scaleY)*a}else switch(f){case v.setup:u=Math.abs(n.data.scaleX)*F.signum(c),g=Math.abs(n.data.scaleY)*F.signum(d),n.scaleX=u+(c-u)*a,n.scaleY=g+(d-g)*a;break;case v.first:case v.replace:u=Math.abs(n.scaleX)*F.signum(c),g=Math.abs(n.scaleY)*F.signum(d),n.scaleX=u+(c-u)*a,n.scaleY=g+(d-g)*a;break;case v.add:n.scaleX+=(c-n.data.scaleX)*a,n.scaleY+=(d-n.data.scaleY)*a}}}}class Ie extends dt{constructor(t,s,e){super(t,s,`${H.scaleX}|${e}`),this.boneIndex=0,this.boneIndex=e}apply(t,s,e,r,a,f,l){const n=t.bones[this.boneIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.scaleX=n.data.scaleX;return;case v.first:n.scaleX+=(n.data.scaleX-n.scaleX)*a}return}const c=this.getCurveValue(e)*n.data.scaleX;if(a==1)f==v.add?n.scaleX+=c-n.data.scaleX:n.scaleX=c;else{let d=0;if(l==j.mixOut)switch(f){case v.setup:d=n.data.scaleX,n.scaleX=d+(Math.abs(c)*F.signum(d)-d)*a;break;case v.first:case v.replace:d=n.scaleX,n.scaleX=d+(Math.abs(c)*F.signum(d)-d)*a;break;case v.add:n.scaleX+=(c-n.data.scaleX)*a}else switch(f){case v.setup:d=Math.abs(n.data.scaleX)*F.signum(c),n.scaleX=d+(c-d)*a;break;case v.first:case v.replace:d=Math.abs(n.scaleX)*F.signum(c),n.scaleX=d+(c-d)*a;break;case v.add:n.scaleX+=(c-n.data.scaleX)*a}}}}class Te extends dt{constructor(t,s,e){super(t,s,`${H.scaleY}|${e}`),this.boneIndex=0,this.boneIndex=e}apply(t,s,e,r,a,f,l){const n=t.bones[this.boneIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.scaleY=n.data.scaleY;return;case v.first:n.scaleY+=(n.data.scaleY-n.scaleY)*a}return}const c=this.getCurveValue(e)*n.data.scaleY;if(a==1)f==v.add?n.scaleY+=c-n.data.scaleY:n.scaleY=c;else{let d=0;if(l==j.mixOut)switch(f){case v.setup:d=n.data.scaleY,n.scaleY=d+(Math.abs(c)*F.signum(d)-d)*a;break;case v.first:case v.replace:d=n.scaleY,n.scaleY=d+(Math.abs(c)*F.signum(d)-d)*a;break;case v.add:n.scaleY+=(c-n.data.scaleY)*a}else switch(f){case v.setup:d=Math.abs(n.data.scaleY)*F.signum(c),n.scaleY=d+(c-d)*a;break;case v.first:case v.replace:d=Math.abs(n.scaleY)*F.signum(c),n.scaleY=d+(c-d)*a;break;case v.add:n.scaleY+=(c-n.data.scaleY)*a}}}}class Ye extends re{constructor(t,s,e){super(t,s,`${H.shearX}|${e}`,`${H.shearY}|${e}`),this.boneIndex=0,this.boneIndex=e}apply(t,s,e,r,a,f,l){const n=t.bones[this.boneIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.shearX=n.data.shearX,n.shearY=n.data.shearY;return;case v.first:n.shearX+=(n.data.shearX-n.shearX)*a,n.shearY+=(n.data.shearY-n.shearY)*a}return}let c=0,d=0;const h=J.search(o,e,3),m=this.curves[h/3];switch(m){case 0:const u=o[h];c=o[h+1],d=o[h+2];const g=(e-u)/(o[h+3]-u);c+=(o[h+3+1]-c)*g,d+=(o[h+3+2]-d)*g;break;case 1:c=o[h+1],d=o[h+2];break;default:c=this.getBezierValue(e,h,1,m-2),d=this.getBezierValue(e,h,2,m+18-2)}switch(f){case v.setup:n.shearX=n.data.shearX+c*a,n.shearY=n.data.shearY+d*a;break;case v.first:case v.replace:n.shearX+=(n.data.shearX+c-n.shearX)*a,n.shearY+=(n.data.shearY+d-n.shearY)*a;break;case v.add:n.shearX+=c*a,n.shearY+=d*a}}}class Fe extends dt{constructor(t,s,e){super(t,s,`${H.shearX}|${e}`),this.boneIndex=0,this.boneIndex=e}apply(t,s,e,r,a,f,l){const n=t.bones[this.boneIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.shearX=n.data.shearX;return;case v.first:n.shearX+=(n.data.shearX-n.shearX)*a}return}const c=this.getCurveValue(e);switch(f){case v.setup:n.shearX=n.data.shearX+c*a;break;case v.first:case v.replace:n.shearX+=(n.data.shearX+c-n.shearX)*a;break;case v.add:n.shearX+=c*a}}}class Ee extends dt{constructor(t,s,e){super(t,s,`${H.shearY}|${e}`),this.boneIndex=0,this.boneIndex=e}apply(t,s,e,r,a,f,l){const n=t.bones[this.boneIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.shearY=n.data.shearY;return;case v.first:n.shearY+=(n.data.shearY-n.shearY)*a}return}const c=this.getCurveValue(e);switch(f){case v.setup:n.shearY=n.data.shearY+c*a;break;case v.first:case v.replace:n.shearY+=(n.data.shearY+c-n.shearY)*a;break;case v.add:n.shearY+=c*a}}}class Xe extends ht{constructor(t,s,e){super(t,s,[`${H.rgb}|${e}`,`${H.alpha}|${e}`]),this.slotIndex=0,this.slotIndex=e}getFrameEntries(){return 5}setFrame(t,s,e,r,a,f){t*=5,this.frames[t]=s,this.frames[t+1]=e,this.frames[t+2]=r,this.frames[t+3]=a,this.frames[t+4]=f}apply(t,s,e,r,a,f,l){const n=t.slots[this.slotIndex];if(!n.bone.active)return;const o=this.frames,c=n.color;if(e<o[0]){const S=n.data.color;switch(f){case v.setup:c.setFromColor(S);return;case v.first:c.add((S.r-c.r)*a,(S.g-c.g)*a,(S.b-c.b)*a,(S.a-c.a)*a)}return}let d=0,h=0,m=0,u=0;const g=J.search(o,e,5),w=this.curves[g/5];switch(w){case 0:const S=o[g];d=o[g+1],h=o[g+2],m=o[g+3],u=o[g+4];const p=(e-S)/(o[g+5]-S);d+=(o[g+5+1]-d)*p,h+=(o[g+5+2]-h)*p,m+=(o[g+5+3]-m)*p,u+=(o[g+5+4]-u)*p;break;case 1:d=o[g+1],h=o[g+2],m=o[g+3],u=o[g+4];break;default:d=this.getBezierValue(e,g,1,w-2),h=this.getBezierValue(e,g,2,w+18-2),m=this.getBezierValue(e,g,3,w+18*2-2),u=this.getBezierValue(e,g,4,w+18*3-2)}a==1?c.set(d,h,m,u):(f==v.setup&&c.setFromColor(n.data.color),c.add((d-c.r)*a,(h-c.g)*a,(m-c.b)*a,(u-c.a)*a))}}class Re extends ht{constructor(t,s,e){super(t,s,[`${H.rgb}|${e}`]),this.slotIndex=0,this.slotIndex=e}getFrameEntries(){return 4}setFrame(t,s,e,r,a){t<<=2,this.frames[t]=s,this.frames[t+1]=e,this.frames[t+2]=r,this.frames[t+3]=a}apply(t,s,e,r,a,f,l){const n=t.slots[this.slotIndex];if(!n.bone.active)return;const o=this.frames,c=n.color;if(e<o[0]){const w=n.data.color;switch(f){case v.setup:c.r=w.r,c.g=w.g,c.b=w.b;return;case v.first:c.r+=(w.r-c.r)*a,c.g+=(w.g-c.g)*a,c.b+=(w.b-c.b)*a}return}let d=0,h=0,m=0;const u=J.search(o,e,4),g=this.curves[u>>2];switch(g){case 0:const w=o[u];d=o[u+1],h=o[u+2],m=o[u+3];const S=(e-w)/(o[u+4]-w);d+=(o[u+4+1]-d)*S,h+=(o[u+4+2]-h)*S,m+=(o[u+4+3]-m)*S;break;case 1:d=o[u+1],h=o[u+2],m=o[u+3];break;default:d=this.getBezierValue(e,u,1,g-2),h=this.getBezierValue(e,u,2,g+18-2),m=this.getBezierValue(e,u,3,g+18*2-2)}if(a==1)c.r=d,c.g=h,c.b=m;else{if(f==v.setup){const w=n.data.color;c.r=w.r,c.g=w.g,c.b=w.b}c.r+=(d-c.r)*a,c.g+=(h-c.g)*a,c.b+=(m-c.b)*a}}}class Be extends dt{constructor(t,s,e){super(t,s,`${H.alpha}|${e}`),this.slotIndex=0,this.slotIndex=e}apply(t,s,e,r,a,f,l){const n=t.slots[this.slotIndex];if(!n.bone.active)return;const o=n.color;if(e<this.frames[0]){const d=n.data.color;switch(f){case v.setup:o.a=d.a;return;case v.first:o.a+=(d.a-o.a)*a}return}const c=this.getCurveValue(e);a==1?o.a=c:(f==v.setup&&(o.a=n.data.color.a),o.a+=(c-o.a)*a)}}class Pe extends ht{constructor(t,s,e){super(t,s,[`${H.rgb}|${e}`,`${H.alpha}|${e}`,`${H.rgb2}|${e}`]),this.slotIndex=0,this.slotIndex=e}getFrameEntries(){return 8}setFrame(t,s,e,r,a,f,l,n,o){t<<=3,this.frames[t]=s,this.frames[t+1]=e,this.frames[t+2]=r,this.frames[t+3]=a,this.frames[t+4]=f,this.frames[t+5]=l,this.frames[t+6]=n,this.frames[t+7]=o}apply(t,s,e,r,a,f,l){const n=t.slots[this.slotIndex];if(!n.bone.active)return;const o=this.frames,c=n.color,d=n.darkColor;if(e<o[0]){const y=n.data.color,k=n.data.darkColor;switch(f){case v.setup:c.setFromColor(y),d.r=k.r,d.g=k.g,d.b=k.b;return;case v.first:c.add((y.r-c.r)*a,(y.g-c.g)*a,(y.b-c.b)*a,(y.a-c.a)*a),d.r+=(k.r-d.r)*a,d.g+=(k.g-d.g)*a,d.b+=(k.b-d.b)*a}return}let h=0,m=0,u=0,g=0,w=0,S=0,p=0;const b=J.search(o,e,8),x=this.curves[b>>3];switch(x){case 0:const y=o[b];h=o[b+1],m=o[b+2],u=o[b+3],g=o[b+4],w=o[b+5],S=o[b+6],p=o[b+7];const k=(e-y)/(o[b+8]-y);h+=(o[b+8+1]-h)*k,m+=(o[b+8+2]-m)*k,u+=(o[b+8+3]-u)*k,g+=(o[b+8+4]-g)*k,w+=(o[b+8+5]-w)*k,S+=(o[b+8+6]-S)*k,p+=(o[b+8+7]-p)*k;break;case 1:h=o[b+1],m=o[b+2],u=o[b+3],g=o[b+4],w=o[b+5],S=o[b+6],p=o[b+7];break;default:h=this.getBezierValue(e,b,1,x-2),m=this.getBezierValue(e,b,2,x+18-2),u=this.getBezierValue(e,b,3,x+18*2-2),g=this.getBezierValue(e,b,4,x+18*3-2),w=this.getBezierValue(e,b,5,x+18*4-2),S=this.getBezierValue(e,b,6,x+18*5-2),p=this.getBezierValue(e,b,7,x+18*6-2)}if(a==1)c.set(h,m,u,g),d.r=w,d.g=S,d.b=p;else{if(f==v.setup){c.setFromColor(n.data.color);const y=n.data.darkColor;d.r=y.r,d.g=y.g,d.b=y.b}c.add((h-c.r)*a,(m-c.g)*a,(u-c.b)*a,(g-c.a)*a),d.r+=(w-d.r)*a,d.g+=(S-d.g)*a,d.b+=(p-d.b)*a}}}class Le extends ht{constructor(t,s,e){super(t,s,[`${H.rgb}|${e}`,`${H.rgb2}|${e}`]),this.slotIndex=0,this.slotIndex=e}getFrameEntries(){return 7}setFrame(t,s,e,r,a,f,l,n){t*=7,this.frames[t]=s,this.frames[t+1]=e,this.frames[t+2]=r,this.frames[t+3]=a,this.frames[t+4]=f,this.frames[t+5]=l,this.frames[t+6]=n}apply(t,s,e,r,a,f,l){const n=t.slots[this.slotIndex];if(!n.bone.active)return;const o=this.frames,c=n.color,d=n.darkColor;if(e<o[0]){const x=n.data.color,y=n.data.darkColor;switch(f){case v.setup:c.r=x.r,c.g=x.g,c.b=x.b,d.r=y.r,d.g=y.g,d.b=y.b;return;case v.first:c.r+=(x.r-c.r)*a,c.g+=(x.g-c.g)*a,c.b+=(x.b-c.b)*a,d.r+=(y.r-d.r)*a,d.g+=(y.g-d.g)*a,d.b+=(y.b-d.b)*a}return}let h=0,m=0,u=0,g=0,w=0,S=0;const p=J.search(o,e,7),b=this.curves[p/7];switch(b){case 0:const x=o[p];h=o[p+1],m=o[p+2],u=o[p+3],g=o[p+4],w=o[p+5],S=o[p+6];const y=(e-x)/(o[p+7]-x);h+=(o[p+7+1]-h)*y,m+=(o[p+7+2]-m)*y,u+=(o[p+7+3]-u)*y,g+=(o[p+7+4]-g)*y,w+=(o[p+7+5]-w)*y,S+=(o[p+7+6]-S)*y;break;case 1:h=o[p+1],m=o[p+2],u=o[p+3],g=o[p+4],w=o[p+5],S=o[p+6];break;default:h=this.getBezierValue(e,p,1,b-2),m=this.getBezierValue(e,p,2,b+18-2),u=this.getBezierValue(e,p,3,b+18*2-2),g=this.getBezierValue(e,p,4,b+18*3-2),w=this.getBezierValue(e,p,5,b+18*4-2),S=this.getBezierValue(e,p,6,b+18*5-2)}if(a==1)c.r=h,c.g=m,c.b=u,d.r=g,d.g=w,d.b=S;else{if(f==v.setup){const x=n.data.color,y=n.data.darkColor;c.r=x.r,c.g=x.g,c.b=x.b,d.r=y.r,d.g=y.g,d.b=y.b}c.r+=(h-c.r)*a,c.g+=(m-c.g)*a,c.b+=(u-c.b)*a,d.r+=(g-d.r)*a,d.g+=(w-d.g)*a,d.b+=(S-d.b)*a}}}class Ft extends J{constructor(t,s){super(t,[`${H.attachment}|${s}`]),this.slotIndex=0,this.slotIndex=s,this.attachmentNames=new Array(t)}getFrameCount(){return this.frames.length}setFrame(t,s,e){this.frames[t]=s,this.attachmentNames[t]=e}apply(t,s,e,r,a,f,l){const n=t.slots[this.slotIndex];if(n.bone.active){if(l==j.mixOut){f==v.setup&&this.setAttachment(t,n,n.data.attachmentName);return}if(e<this.frames[0]){(f==v.setup||f==v.first)&&this.setAttachment(t,n,n.data.attachmentName);return}this.setAttachment(t,n,this.attachmentNames[J.search1(this.frames,e)])}}setAttachment(t,s,e){s.setAttachment(e?t.getAttachment(this.slotIndex,e):null)}}class Ne extends ht{constructor(t,s,e,r){super(t,s,[`${H.deform}|${e}|${r.id}`]),this.slotIndex=0,this.slotIndex=e,this.attachment=r,this.vertices=new Array(t)}getFrameCount(){return this.frames.length}setFrame(t,s,e){this.frames[t]=s,this.vertices[t]=e}setBezier(t,s,e,r,a,f,l,n,o,c,d){const h=this.curves;let m=this.getFrameCount()+t*18;e==0&&(h[s]=2+m);const u=(r-f*2+n)*.03,g=o*.03-l*.06,w=((f-n)*3-r+c)*.006,S=(l-o+.33333333)*.018;let p=u*2+w,b=g*2+S,x=(f-r)*.3+u+w*.16666667,y=l*.3+g+S*.16666667,k=r+x,C=y;for(let I=m+18;m<I;m+=2)h[m]=k,h[m+1]=C,x+=p,y+=b,p+=w,b+=S,k+=x,C+=y}getCurvePercent(t,s){const e=this.curves;let r=e[s];switch(r){case 0:const n=this.frames[s];return(t-n)/(this.frames[s+this.getFrameEntries()]-n);case 1:return 0}if(r-=2,e[r]>t){const n=this.frames[s];return e[r+1]*(t-n)/(e[r]-n)}const a=r+18;for(r+=2;r<a;r+=2)if(e[r]>=t){const n=e[r-2],o=e[r-1];return o+(t-n)/(e[r]-n)*(e[r+1]-o)}const f=e[a-2],l=e[a-1];return l+(1-l)*(t-f)/(this.frames[s+this.getFrameEntries()]-f)}apply(t,s,e,r,a,f,l){const n=t.slots[this.slotIndex];if(!n.bone.active)return;const o=n.getAttachment();if(!o||!(o instanceof lt)||o.timelineAttachment!=this.attachment)return;const c=n.deform;c.length==0&&(f=v.setup);const d=this.vertices,h=d[0].length,m=this.frames;if(e<m[0]){switch(f){case v.setup:c.length=0;return;case v.first:if(a==1){c.length=0;return}c.length=h;const p=o;if(p.bones){a=1-a;for(let b=0;b<h;b++)c[b]*=a}else{const b=p.vertices;for(let x=0;x<h;x++)c[x]+=(b[x]-c[x])*a}}return}if(c.length=h,e>=m[m.length-1]){const p=d[m.length-1];if(a==1)if(f==v.add){const b=o;if(b.bones)for(let x=0;x<h;x++)c[x]+=p[x];else{const x=b.vertices;for(let y=0;y<h;y++)c[y]+=p[y]-x[y]}}else R.arrayCopy(p,0,c,0,h);else switch(f){case v.setup:{const x=o;if(x.bones)for(let y=0;y<h;y++)c[y]=p[y]*a;else{const y=x.vertices;for(let k=0;k<h;k++){const C=y[k];c[k]=C+(p[k]-C)*a}}break}case v.first:case v.replace:for(let x=0;x<h;x++)c[x]+=(p[x]-c[x])*a;break;case v.add:const b=o;if(b.bones)for(let x=0;x<h;x++)c[x]+=p[x]*a;else{const x=b.vertices;for(let y=0;y<h;y++)c[y]+=(p[y]-x[y])*a}}return}const u=J.search1(m,e),g=this.getCurvePercent(e,u),w=d[u],S=d[u+1];if(a==1)if(f==v.add){const p=o;if(p.bones)for(let b=0;b<h;b++){const x=w[b];c[b]+=x+(S[b]-x)*g}else{const b=p.vertices;for(let x=0;x<h;x++){const y=w[x];c[x]+=y+(S[x]-y)*g-b[x]}}}else for(let p=0;p<h;p++){const b=w[p];c[p]=b+(S[p]-b)*g}else switch(f){case v.setup:{const b=o;if(b.bones)for(let x=0;x<h;x++){const y=w[x];c[x]=(y+(S[x]-y)*g)*a}else{const x=b.vertices;for(let y=0;y<h;y++){const k=w[y],C=x[y];c[y]=C+(k+(S[y]-k)*g-C)*a}}break}case v.first:case v.replace:for(let b=0;b<h;b++){const x=w[b];c[b]+=(x+(S[b]-x)*g-c[b])*a}break;case v.add:const p=o;if(p.bones)for(let b=0;b<h;b++){const x=w[b];c[b]+=(x+(S[b]-x)*g)*a}else{const b=p.vertices;for(let x=0;x<h;x++){const y=w[x];c[x]+=(y+(S[x]-y)*g-b[x])*a}}}}}const Ms=class extends J{constructor(i){super(i,Ms.propertyIds),this.events=new Array(i)}getFrameCount(){return this.frames.length}setFrame(i,t){this.frames[i]=t.time,this.events[i]=t}apply(i,t,s,e,r,a,f){if(!e)return;const l=this.frames,n=this.frames.length;if(t>s)this.apply(i,t,Number.MAX_VALUE,e,r,a,f),t=-1;else if(t>=l[n-1])return;if(s<l[0])return;let o=0;if(t<l[0])o=0;else{o=J.search1(l,t)+1;const c=l[o];for(;o>0&&l[o-1]==c;)o--}for(;o<n&&s>=l[o];o++)e.push(this.events[o])}};let Ot=Ms;Ot.propertyIds=[`${H.event}`];const Is=class extends J{constructor(i){super(i,Is.propertyIds),this.drawOrders=new Array(i)}getFrameCount(){return this.frames.length}setFrame(i,t,s){this.frames[i]=t,this.drawOrders[i]=s}apply(i,t,s,e,r,a,f){if(f==j.mixOut){a==v.setup&&R.arrayCopy(i.slots,0,i.drawOrder,0,i.slots.length);return}if(s<this.frames[0]){(a==v.setup||a==v.first)&&R.arrayCopy(i.slots,0,i.drawOrder,0,i.slots.length);return}const l=J.search1(this.frames,s),n=this.drawOrders[l];if(!n)R.arrayCopy(i.slots,0,i.drawOrder,0,i.slots.length);else{const o=i.drawOrder,c=i.slots;for(let d=0,h=n.length;d<h;d++)o[d]=c[n[d]]}}};let Et=Is;Et.propertyIds=[`${H.drawOrder}`];class De extends ht{constructor(t,s,e){super(t,s,[`${H.ikConstraint}|${e}`]),this.ikConstraintIndex=0,this.ikConstraintIndex=e}getFrameEntries(){return 6}setFrame(t,s,e,r,a,f,l){t*=6,this.frames[t]=s,this.frames[t+1]=e,this.frames[t+2]=r,this.frames[t+3]=a,this.frames[t+4]=f?1:0,this.frames[t+5]=l?1:0}apply(t,s,e,r,a,f,l){const n=t.ikConstraints[this.ikConstraintIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.mix=n.data.mix,n.softness=n.data.softness,n.bendDirection=n.data.bendDirection,n.compress=n.data.compress,n.stretch=n.data.stretch;return;case v.first:n.mix+=(n.data.mix-n.mix)*a,n.softness+=(n.data.softness-n.softness)*a,n.bendDirection=n.data.bendDirection,n.compress=n.data.compress,n.stretch=n.data.stretch}return}let c=0,d=0;const h=J.search(o,e,6),m=this.curves[h/6];switch(m){case 0:const u=o[h];c=o[h+1],d=o[h+2];const g=(e-u)/(o[h+6]-u);c+=(o[h+6+1]-c)*g,d+=(o[h+6+2]-d)*g;break;case 1:c=o[h+1],d=o[h+2];break;default:c=this.getBezierValue(e,h,1,m-2),d=this.getBezierValue(e,h,2,m+18-2)}f==v.setup?(n.mix=n.data.mix+(c-n.data.mix)*a,n.softness=n.data.softness+(d-n.data.softness)*a,l==j.mixOut?(n.bendDirection=n.data.bendDirection,n.compress=n.data.compress,n.stretch=n.data.stretch):(n.bendDirection=o[h+3],n.compress=o[h+4]!=0,n.stretch=o[h+5]!=0)):(n.mix+=(c-n.mix)*a,n.softness+=(d-n.softness)*a,l==j.mixIn&&(n.bendDirection=o[h+3],n.compress=o[h+4]!=0,n.stretch=o[h+5]!=0))}}class Ve extends ht{constructor(t,s,e){super(t,s,[`${H.transformConstraint}|${e}`]),this.transformConstraintIndex=0,this.transformConstraintIndex=e}getFrameEntries(){return 7}setFrame(t,s,e,r,a,f,l,n){const o=this.frames;t*=7,o[t]=s,o[t+1]=e,o[t+2]=r,o[t+3]=a,o[t+4]=f,o[t+5]=l,o[t+6]=n}apply(t,s,e,r,a,f,l){const n=t.transformConstraints[this.transformConstraintIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){const p=n.data;switch(f){case v.setup:n.mixRotate=p.mixRotate,n.mixX=p.mixX,n.mixY=p.mixY,n.mixScaleX=p.mixScaleX,n.mixScaleY=p.mixScaleY,n.mixShearY=p.mixShearY;return;case v.first:n.mixRotate+=(p.mixRotate-n.mixRotate)*a,n.mixX+=(p.mixX-n.mixX)*a,n.mixY+=(p.mixY-n.mixY)*a,n.mixScaleX+=(p.mixScaleX-n.mixScaleX)*a,n.mixScaleY+=(p.mixScaleY-n.mixScaleY)*a,n.mixShearY+=(p.mixShearY-n.mixShearY)*a}return}let c,d,h,m,u,g;const w=J.search(o,e,7),S=this.curves[w/7];switch(S){case 0:const p=o[w];c=o[w+1],d=o[w+2],h=o[w+3],m=o[w+4],u=o[w+5],g=o[w+6];const b=(e-p)/(o[w+7]-p);c+=(o[w+7+1]-c)*b,d+=(o[w+7+2]-d)*b,h+=(o[w+7+3]-h)*b,m+=(o[w+7+4]-m)*b,u+=(o[w+7+5]-u)*b,g+=(o[w+7+6]-g)*b;break;case 1:c=o[w+1],d=o[w+2],h=o[w+3],m=o[w+4],u=o[w+5],g=o[w+6];break;default:c=this.getBezierValue(e,w,1,S-2),d=this.getBezierValue(e,w,2,S+18-2),h=this.getBezierValue(e,w,3,S+18*2-2),m=this.getBezierValue(e,w,4,S+18*3-2),u=this.getBezierValue(e,w,5,S+18*4-2),g=this.getBezierValue(e,w,6,S+18*5-2)}if(f==v.setup){const p=n.data;n.mixRotate=p.mixRotate+(c-p.mixRotate)*a,n.mixX=p.mixX+(d-p.mixX)*a,n.mixY=p.mixY+(h-p.mixY)*a,n.mixScaleX=p.mixScaleX+(m-p.mixScaleX)*a,n.mixScaleY=p.mixScaleY+(u-p.mixScaleY)*a,n.mixShearY=p.mixShearY+(g-p.mixShearY)*a}else n.mixRotate+=(c-n.mixRotate)*a,n.mixX+=(d-n.mixX)*a,n.mixY+=(h-n.mixY)*a,n.mixScaleX+=(m-n.mixScaleX)*a,n.mixScaleY+=(u-n.mixScaleY)*a,n.mixShearY+=(g-n.mixShearY)*a}}class $e extends dt{constructor(t,s,e){super(t,s,`${H.pathConstraintPosition}|${e}`),this.pathConstraintIndex=0,this.pathConstraintIndex=e}apply(t,s,e,r,a,f,l){const n=t.pathConstraints[this.pathConstraintIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.position=n.data.position;return;case v.first:n.position+=(n.data.position-n.position)*a}return}const c=this.getCurveValue(e);f==v.setup?n.position=n.data.position+(c-n.data.position)*a:n.position+=(c-n.position)*a}}class _e extends dt{constructor(t,s,e){super(t,s,`${H.pathConstraintSpacing}|${e}`),this.pathConstraintIndex=0,this.pathConstraintIndex=e}apply(t,s,e,r,a,f,l){const n=t.pathConstraints[this.pathConstraintIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.spacing=n.data.spacing;return;case v.first:n.spacing+=(n.data.spacing-n.spacing)*a}return}const c=this.getCurveValue(e);f==v.setup?n.spacing=n.data.spacing+(c-n.data.spacing)*a:n.spacing+=(c-n.spacing)*a}}class We extends ht{constructor(t,s,e){super(t,s,[`${H.pathConstraintMix}|${e}`]),this.pathConstraintIndex=0,this.pathConstraintIndex=e}getFrameEntries(){return 4}setFrame(t,s,e,r,a){const f=this.frames;t<<=2,f[t]=s,f[t+1]=e,f[t+2]=r,f[t+3]=a}apply(t,s,e,r,a,f,l){const n=t.pathConstraints[this.pathConstraintIndex];if(!n.active)return;const o=this.frames;if(e<o[0]){switch(f){case v.setup:n.mixRotate=n.data.mixRotate,n.mixX=n.data.mixX,n.mixY=n.data.mixY;return;case v.first:n.mixRotate+=(n.data.mixRotate-n.mixRotate)*a,n.mixX+=(n.data.mixX-n.mixX)*a,n.mixY+=(n.data.mixY-n.mixY)*a}return}let c,d,h;const m=J.search(o,e,4),u=this.curves[m>>2];switch(u){case 0:const g=o[m];c=o[m+1],d=o[m+2],h=o[m+3];const w=(e-g)/(o[m+4]-g);c+=(o[m+4+1]-c)*w,d+=(o[m+4+2]-d)*w,h+=(o[m+4+3]-h)*w;break;case 1:c=o[m+1],d=o[m+2],h=o[m+3];break;default:c=this.getBezierValue(e,m,1,u-2),d=this.getBezierValue(e,m,2,u+18-2),h=this.getBezierValue(e,m,3,u+18*2-2)}if(f==v.setup){const g=n.data;n.mixRotate=g.mixRotate+(c-g.mixRotate)*a,n.mixX=g.mixX+(d-g.mixX)*a,n.mixY=g.mixY+(h-g.mixY)*a}else n.mixRotate+=(c-n.mixRotate)*a,n.mixX+=(d-n.mixX)*a,n.mixY+=(h-n.mixY)*a}}const It=class extends J{constructor(i,t,s){super(i,[`${H.sequence}|${t}|${s.sequence.id}`]),this.slotIndex=t,this.attachment=s}getFrameEntries(){return It.ENTRIES}getSlotIndex(){return this.slotIndex}getAttachment(){return this.attachment}setFrame(i,t,s,e,r){const a=this.frames;i*=It.ENTRIES,a[i]=t,a[i+It.MODE]=s|e<<4,a[i+It.DELAY]=r}apply(i,t,s,e,r,a,f){const l=i.slots[this.slotIndex];if(!l.bone.active)return;const n=l.attachment,o=this.attachment;if(n!=o&&(!(n instanceof lt)||n.timelineAttachment!=o))return;const c=this.frames;if(s<c[0]){(a==v.setup||a==v.first)&&(l.sequenceIndex=-1);return}const d=J.search(c,s,It.ENTRIES),h=c[d],m=c[d+It.MODE],u=c[d+It.DELAY];if(!this.attachment.sequence)return;let g=m>>4;const w=this.attachment.sequence.regions.length,S=ke[m&15];if(S!=gt.hold)switch(g+=(s-h)/u+1e-5|0,S){case gt.once:g=Math.min(w-1,g);break;case gt.loop:g%=w;break;case gt.pingpong:{const p=(w<<1)-2;g=p==0?0:g%p,g>=w&&(g=p-g);break}case gt.onceReverse:g=Math.max(w-1-g,0);break;case gt.loopReverse:g=w-1-g%w;break;case gt.pingpongReverse:{const p=(w<<1)-2;g=p==0?0:(g+w-1)%p,g>=w&&(g=p-g)}}l.sequenceIndex=g}};let Vt=It;Vt.ENTRIES=3,Vt.MODE=1,Vt.DELAY=2;const xt=class{constructor(i){this.tracks=new Array,this.timeScale=1,this.unkeyedState=0,this.events=new Array,this.listeners=new Array,this.queue=new Ts(this),this.propertyIDs=new we,this.animationsChanged=!1,this.trackEntryPool=new be(()=>new ie),this.data=i}static emptyAnimation(){return xt._emptyAnimation}update(i){i*=this.timeScale;const t=this.tracks;for(let s=0,e=t.length;s<e;s++){const r=t[s];if(!r)continue;r.animationLast=r.nextAnimationLast,r.trackLast=r.nextTrackLast;let a=i*r.timeScale;if(r.delay>0){if(r.delay-=a,r.delay>0)continue;a=-r.delay,r.delay=0}let f=r.next;if(f){const l=r.trackLast-f.delay;if(l>=0){for(f.delay=0,f.trackTime+=r.timeScale==0?0:(l/r.timeScale+i)*f.timeScale,r.trackTime+=a,this.setCurrent(s,f,!0);f.mixingFrom;)f.mixTime+=i,f=f.mixingFrom;continue}}else if(r.trackLast>=r.trackEnd&&!r.mixingFrom){t[s]=null,this.queue.end(r),this.clearNext(r);continue}if(r.mixingFrom&&this.updateMixingFrom(r,i)){let l=r.mixingFrom;for(r.mixingFrom=null,l&&(l.mixingTo=null);l;)this.queue.end(l),l=l.mixingFrom}r.trackTime+=a}this.queue.drain()}updateMixingFrom(i,t){const s=i.mixingFrom;if(!s)return!0;const e=this.updateMixingFrom(s,t);return s.animationLast=s.nextAnimationLast,s.trackLast=s.nextTrackLast,i.mixTime>0&&i.mixTime>=i.mixDuration?((s.totalAlpha==0||i.mixDuration==0)&&(i.mixingFrom=s.mixingFrom,s.mixingFrom&&(s.mixingFrom.mixingTo=i),i.interruptAlpha=s.interruptAlpha,this.queue.end(s)),e):(s.trackTime+=t*s.timeScale,i.mixTime+=t,!1)}apply(i){if(!i)throw new Error("skeleton cannot be null.");this.animationsChanged&&this._animationsChanged();const t=this.events,s=this.tracks;let e=!1;for(let f=0,l=s.length;f<l;f++){const n=s[f];if(!n||n.delay>0)continue;e=!0;const o=f==0?v.first:n.mixBlend;let c=n.alpha;n.mixingFrom?c*=this.applyMixingFrom(n,i,o):n.trackTime>=n.trackEnd&&!n.next&&(c=0);const d=n.animationLast,h=n.getAnimationTime();let m=h,u=t;n.reverse&&(m=n.animation.duration-m,u=null);const g=n.animation.timelines,w=g.length;if(f==0&&c==1||o==v.add)for(let S=0;S<w;S++){R.webkit602BugfixHelper(c,o);const p=g[S];p instanceof Ft?this.applyAttachmentTimeline(p,i,m,o,!0):p.apply(i,d,m,u,c,o,j.mixIn)}else{const S=n.timelineMode,p=n.shortestRotation,b=!p&&n.timelinesRotation.length!=w<<1;b&&(n.timelinesRotation.length=w<<1);for(let x=0;x<w;x++){const y=g[x],k=S[x]==qe?o:v.setup;!p&&y instanceof qt?this.applyRotateTimeline(y,i,m,c,k,n.timelinesRotation,x<<1,b):y instanceof Ft?this.applyAttachmentTimeline(y,i,m,o,!0):(R.webkit602BugfixHelper(c,o),y.apply(i,d,m,u,c,k,j.mixIn))}}this.queueEvents(n,h),t.length=0,n.nextAnimationLast=h,n.nextTrackLast=n.trackTime}const r=this.unkeyedState+Es,a=i.slots;for(let f=0,l=i.slots.length;f<l;f++){const n=a[f];if(n.attachmentState==r){const o=n.data.attachmentName;n.setAttachment(o?i.getAttachment(n.data.index,o):null)}}return this.unkeyedState+=2,this.queue.drain(),e}applyMixingFrom(i,t,s){const e=i.mixingFrom;e.mixingFrom&&this.applyMixingFrom(e,t,s);let r=0;i.mixDuration==0?(r=1,s==v.first&&(s=v.setup)):(r=i.mixTime/i.mixDuration,r>1&&(r=1),s!=v.first&&(s=e.mixBlend));const a=r<e.attachmentThreshold,f=r<e.drawOrderThreshold,l=e.animation.timelines,n=l.length,o=e.alpha*i.interruptAlpha,c=o*(1-r),d=e.animationLast,h=e.getAnimationTime();let m=h,u=null;if(e.reverse?m=e.animation.duration-m:r<e.eventThreshold&&(u=this.events),s==v.add)for(let g=0;g<n;g++)l[g].apply(t,d,m,u,c,s,j.mixOut);else{const g=e.timelineMode,w=e.timelineHoldMix,S=e.shortestRotation,p=!S&&e.timelinesRotation.length!=n<<1;p&&(e.timelinesRotation.length=n<<1),e.totalAlpha=0;for(let b=0;b<n;b++){const x=l[b];let y=j.mixOut,k,C=0;switch(g[b]){case qe:if(!f&&x instanceof Et)continue;k=s,C=c;break;case Ys:k=v.setup,C=c;break;case Fs:k=s,C=o;break;case Oe:k=v.setup,C=o;break;default:k=v.setup;const I=w[b];C=o*Math.max(0,1-I.mixTime/I.mixDuration);break}e.totalAlpha+=C,!S&&x instanceof qt?this.applyRotateTimeline(x,t,m,C,k,e.timelinesRotation,b<<1,p):x instanceof Ft?this.applyAttachmentTimeline(x,t,m,k,a):(R.webkit602BugfixHelper(C,s),f&&x instanceof Et&&k==v.setup&&(y=j.mixIn),x.apply(t,d,m,u,C,k,y))}}return i.mixDuration>0&&this.queueEvents(e,h),this.events.length=0,e.nextAnimationLast=h,e.nextTrackLast=e.trackTime,r}applyAttachmentTimeline(i,t,s,e,r){const a=t.slots[i.slotIndex];a.bone.active&&(s<i.frames[0]?(e==v.setup||e==v.first)&&this.setAttachment(t,a,a.data.attachmentName,r):this.setAttachment(t,a,i.attachmentNames[J.search1(i.frames,s)],r),a.attachmentState<=this.unkeyedState&&(a.attachmentState=this.unkeyedState+Es))}setAttachment(i,t,s,e){t.setAttachment(s?i.getAttachment(t.data.index,s):null),e&&(t.attachmentState=this.unkeyedState+cn)}applyRotateTimeline(i,t,s,e,r,a,f,l){if(l&&(a[f]=0),e==1){i.apply(t,0,s,null,1,r,j.mixIn);return}const n=t.bones[i.boneIndex];if(!n.active)return;const o=i.frames;let c=0,d=0;if(s<o[0])switch(r){case v.setup:n.rotation=n.data.rotation;default:return;case v.first:c=n.rotation,d=n.data.rotation}else c=r==v.setup?n.data.rotation:n.rotation,d=n.data.rotation+i.getCurveValue(s);let h=0,m=d-c;if(m-=(16384-(16384.499999999996-m/360|0))*360,m==0)h=a[f];else{let u=0,g=0;l?(u=0,g=m):(u=a[f],g=a[f+1]);const w=m>0;let S=u>=0;F.signum(g)!=F.signum(m)&&Math.abs(g)<=90&&(Math.abs(u)>180&&(u+=360*F.signum(u)),S=w),h=m+u-u%360,S!=w&&(h+=360*F.signum(u)),a[f]=h}a[f+1]=m,n.rotation=c+h*e}queueEvents(i,t){const s=i.animationStart,e=i.animationEnd,r=e-s,a=i.trackLast%r,f=this.events;let l=0;const n=f.length;for(;l<n;l++){const c=f[l];if(c.time<a)break;c.time>e||this.queue.event(i,c)}let o=!1;for(i.loop?o=r==0||a>i.trackTime%r:o=t>=e&&i.animationLast<e,o&&this.queue.complete(i);l<n;l++){const c=f[l];c.time<s||this.queue.event(i,c)}}clearTracks(){const i=this.queue.drainDisabled;this.queue.drainDisabled=!0;for(let t=0,s=this.tracks.length;t<s;t++)this.clearTrack(t);this.tracks.length=0,this.queue.drainDisabled=i,this.queue.drain()}clearTrack(i){if(i>=this.tracks.length)return;const t=this.tracks[i];if(!t)return;this.queue.end(t),this.clearNext(t);let s=t;for(;;){const e=s.mixingFrom;if(!e)break;this.queue.end(e),s.mixingFrom=null,s.mixingTo=null,s=e}this.tracks[t.trackIndex]=null,this.queue.drain()}setCurrent(i,t,s){const e=this.expandToIndex(i);this.tracks[i]=t,t.previous=null,e&&(s&&this.queue.interrupt(e),t.mixingFrom=e,e.mixingTo=t,t.mixTime=0,e.mixingFrom&&e.mixDuration>0&&(t.interruptAlpha*=Math.min(1,e.mixTime/e.mixDuration)),e.timelinesRotation.length=0),this.queue.start(t)}setAnimation(i,t,s=!1){const e=this.data.skeletonData.findAnimation(t);if(!e)throw new Error(`Animation not found: ${t}`);return this.setAnimationWith(i,e,s)}setAnimationWith(i,t,s=!1){if(!t)throw new Error("animation cannot be null.");let e=!0,r=this.expandToIndex(i);r&&(r.nextTrackLast==-1?(this.tracks[i]=r.mixingFrom,this.queue.interrupt(r),this.queue.end(r),this.clearNext(r),r=r.mixingFrom,e=!1):this.clearNext(r));const a=this.trackEntry(i,t,s,r);return this.setCurrent(i,a,e),this.queue.drain(),a}addAnimation(i,t,s=!1,e=0){const r=this.data.skeletonData.findAnimation(t);if(!r)throw new Error(`Animation not found: ${t}`);return this.addAnimationWith(i,r,s,e)}addAnimationWith(i,t,s=!1,e=0){if(!t)throw new Error("animation cannot be null.");let r=this.expandToIndex(i);if(r)for(;r.next;)r=r.next;const a=this.trackEntry(i,t,s,r);return r?(r.next=a,a.previous=r,e<=0&&(e+=r.getTrackComplete()-a.mixDuration)):(this.setCurrent(i,a,!0),this.queue.drain()),a.delay=e,a}setEmptyAnimation(i,t=0){const s=this.setAnimationWith(i,xt.emptyAnimation(),!1);return s.mixDuration=t,s.trackEnd=t,s}addEmptyAnimation(i,t=0,s=0){const e=this.addAnimationWith(i,xt.emptyAnimation(),!1,s);return s<=0&&(e.delay+=e.mixDuration-t),e.mixDuration=t,e.trackEnd=t,e}setEmptyAnimations(i=0){const t=this.queue.drainDisabled;this.queue.drainDisabled=!0;for(let s=0,e=this.tracks.length;s<e;s++){const r=this.tracks[s];r&&this.setEmptyAnimation(r.trackIndex,i)}this.queue.drainDisabled=t,this.queue.drain()}expandToIndex(i){return i<this.tracks.length?this.tracks[i]:(R.ensureArrayCapacity(this.tracks,i+1,null),this.tracks.length=i+1,null)}trackEntry(i,t,s,e){const r=this.trackEntryPool.obtain();return r.reset(),r.trackIndex=i,r.animation=t,r.loop=s,r.holdPrevious=!1,r.reverse=!1,r.shortestRotation=!1,r.eventThreshold=0,r.attachmentThreshold=0,r.drawOrderThreshold=0,r.animationStart=0,r.animationEnd=t.duration,r.animationLast=-1,r.nextAnimationLast=-1,r.delay=0,r.trackTime=0,r.trackLast=-1,r.nextTrackLast=-1,r.trackEnd=Number.MAX_VALUE,r.timeScale=1,r.alpha=1,r.mixTime=0,r.mixDuration=e?this.data.getMix(e.animation,t):0,r.interruptAlpha=1,r.totalAlpha=0,r.mixBlend=v.replace,r}clearNext(i){let t=i.next;for(;t;)this.queue.dispose(t),t=t.next;i.next=null}_animationsChanged(){this.animationsChanged=!1,this.propertyIDs.clear();const i=this.tracks;for(let t=0,s=i.length;t<s;t++){let e=i[t];if(e){for(;e.mixingFrom;)e=e.mixingFrom;do(!e.mixingTo||e.mixBlend!=v.add)&&this.computeHold(e),e=e.mixingTo;while(e)}}}computeHold(i){const t=i.mixingTo,s=i.animation.timelines,e=i.animation.timelines.length,r=i.timelineMode;r.length=e;const a=i.timelineHoldMix;a.length=0;const f=this.propertyIDs;if(t&&t.holdPrevious){for(let l=0;l<e;l++)r[l]=f.addAll(s[l].getPropertyIds())?Oe:Fs;return}t:for(let l=0;l<e;l++){const n=s[l],o=n.getPropertyIds();if(!f.addAll(o))r[l]=qe;else if(!t||n instanceof Ft||n instanceof Et||n instanceof Ot||!t.animation.hasTimeline(o))r[l]=Ys;else{for(let c=t.mixingTo;c;c=c.mixingTo)if(!c.animation.hasTimeline(o)){if(i.mixDuration>0){r[l]=on,a[l]=c;continue t}break}r[l]=Oe}}}getCurrent(i){return i>=this.tracks.length?null:this.tracks[i]}addListener(i){if(!i)throw new Error("listener cannot be null.");this.listeners.push(i)}removeListener(i){const t=this.listeners.indexOf(i);t>=0&&this.listeners.splice(t,1)}clearListeners(){this.listeners.length=0}clearListenerNotifications(){this.queue.clear()}setAnimationByName(i,t,s){xt.deprecatedWarning1||(xt.deprecatedWarning1=!0,console.warn("Spine Deprecation Warning: AnimationState.setAnimationByName is deprecated, please use setAnimation from now on.")),this.setAnimation(i,t,s)}addAnimationByName(i,t,s,e){xt.deprecatedWarning2||(xt.deprecatedWarning2=!0,console.warn("Spine Deprecation Warning: AnimationState.addAnimationByName is deprecated, please use addAnimation from now on.")),this.addAnimation(i,t,s,e)}hasAnimation(i){return this.data.skeletonData.findAnimation(i)!==null}hasAnimationByName(i){return xt.deprecatedWarning3||(xt.deprecatedWarning3=!0,console.warn("Spine Deprecation Warning: AnimationState.hasAnimationByName is deprecated, please use hasAnimation from now on.")),this.hasAnimation(i)}};let $t=xt;$t._emptyAnimation=new ne("<empty>",[],0),$t.deprecatedWarning1=!1,$t.deprecatedWarning2=!1,$t.deprecatedWarning3=!1;const kt=class{constructor(){this.animation=null,this.previous=null,this.next=null,this.mixingFrom=null,this.mixingTo=null,this.listener=null,this.trackIndex=0,this.loop=!1,this.holdPrevious=!1,this.reverse=!1,this.shortestRotation=!1,this.eventThreshold=0,this.attachmentThreshold=0,this.drawOrderThreshold=0,this.animationStart=0,this.animationEnd=0,this.animationLast=0,this.nextAnimationLast=0,this.delay=0,this.trackTime=0,this.trackLast=0,this.nextTrackLast=0,this.trackEnd=0,this.timeScale=0,this.alpha=0,this.mixTime=0,this.mixDuration=0,this.interruptAlpha=0,this.totalAlpha=0,this.mixBlend=v.replace,this.timelineMode=new Array,this.timelineHoldMix=new Array,this.timelinesRotation=new Array}reset(){this.next=null,this.previous=null,this.mixingFrom=null,this.mixingTo=null,this.animation=null,this.listener=null,this.timelineMode.length=0,this.timelineHoldMix.length=0,this.timelinesRotation.length=0}getAnimationTime(){if(this.loop){const i=this.animationEnd-this.animationStart;return i==0?this.animationStart:this.trackTime%i+this.animationStart}return Math.min(this.trackTime+this.animationStart,this.animationEnd)}setAnimationLast(i){this.animationLast=i,this.nextAnimationLast=i}isComplete(){return this.trackTime>=this.animationEnd-this.animationStart}resetRotationDirections(){this.timelinesRotation.length=0}getTrackComplete(){const i=this.animationEnd-this.animationStart;if(i!=0){if(this.loop)return i*(1+(this.trackTime/i|0));if(this.trackTime<i)return i}return this.trackTime}get time(){return kt.deprecatedWarning1||(kt.deprecatedWarning1=!0,console.warn("Spine Deprecation Warning: TrackEntry.time is deprecated, please use trackTime from now on.")),this.trackTime}set time(i){kt.deprecatedWarning1||(kt.deprecatedWarning1=!0,console.warn("Spine Deprecation Warning: TrackEntry.time is deprecated, please use trackTime from now on.")),this.trackTime=i}get endTime(){return kt.deprecatedWarning2||(kt.deprecatedWarning2=!0,console.warn("Spine Deprecation Warning: TrackEntry.endTime is deprecated, please use trackEnd from now on.")),this.trackTime}set endTime(i){kt.deprecatedWarning2||(kt.deprecatedWarning2=!0,console.warn("Spine Deprecation Warning: TrackEntry.endTime is deprecated, please use trackEnd from now on.")),this.trackTime=i}loopsCount(){return Math.floor(this.trackTime/this.trackEnd)}};let ie=kt;ie.deprecatedWarning1=!1,ie.deprecatedWarning2=!1;class Ts{constructor(t){this.objects=[],this.drainDisabled=!1,this.animState=t}start(t){this.objects.push(nt.start),this.objects.push(t),this.animState.animationsChanged=!0}interrupt(t){this.objects.push(nt.interrupt),this.objects.push(t)}end(t){this.objects.push(nt.end),this.objects.push(t),this.animState.animationsChanged=!0}dispose(t){this.objects.push(nt.dispose),this.objects.push(t)}complete(t){this.objects.push(nt.complete),this.objects.push(t)}event(t,s){this.objects.push(nt.event),this.objects.push(t),this.objects.push(s)}drain(){if(this.drainDisabled)return;this.drainDisabled=!0;const t=this.objects,s=this.animState.listeners;for(let e=0;e<t.length;e+=2){const r=t[e],a=t[e+1];switch(r){case nt.start:a.listener&&a.listener.start&&a.listener.start(a);for(let l=0;l<s.length;l++){const n=s[l];n.start&&n.start(a)}break;case nt.interrupt:a.listener&&a.listener.interrupt&&a.listener.interrupt(a);for(let l=0;l<s.length;l++){const n=s[l];n.interrupt&&n.interrupt(a)}break;case nt.end:a.listener&&a.listener.end&&a.listener.end(a);for(let l=0;l<s.length;l++){const n=s[l];n.end&&n.end(a)}case nt.dispose:a.listener&&a.listener.dispose&&a.listener.dispose(a);for(let l=0;l<s.length;l++){const n=s[l];n.dispose&&n.dispose(a)}this.animState.trackEntryPool.free(a);break;case nt.complete:a.listener&&a.listener.complete&&a.listener.complete(a);for(let l=0;l<s.length;l++){const n=s[l];n.complete&&n.complete(a)}break;case nt.event:const f=t[e+++2];a.listener&&a.listener.event&&a.listener.event(a,f);for(let l=0;l<s.length;l++){const n=s[l];n.event&&n.event(a,f)}break}}this.clear(),this.drainDisabled=!1}clear(){this.objects.length=0}}var nt=(i=>(i[i.start=0]="start",i[i.interrupt=1]="interrupt",i[i.end=2]="end",i[i.dispose=3]="dispose",i[i.complete=4]="complete",i[i.event=5]="event",i))(nt||{});class an{start(t){}interrupt(t){}end(t){}dispose(t){}complete(t){}event(t,s){}}const qe=0,Ys=1,Fs=2,Oe=3,on=4,Es=1,cn=2;class Xs{constructor(t){if(this.animationToMixTime={},this.defaultMix=0,!t)throw new Error("skeletonData cannot be null.");this.skeletonData=t}setMix(t,s,e){const r=this.skeletonData.findAnimation(t);if(!r)throw new Error(`Animation not found: ${t}`);const a=this.skeletonData.findAnimation(s);if(!a)throw new Error(`Animation not found: ${s}`);this.setMixWith(r,a,e)}setMixWith(t,s,e){if(!t)throw new Error("from cannot be null.");if(!s)throw new Error("to cannot be null.");const r=`${t.name}.${s.name}`;this.animationToMixTime[r]=e}getMix(t,s){const e=`${t.name}.${s.name}`,r=this.animationToMixTime[e];return r===void 0?this.defaultMix:r}}class Rs{constructor(t){this.atlas=t}loadSequence(t,s,e){const r=e.regions;for(let a=0,f=r.length;a<f;a++){const l=e.getPath(s,a),n=this.atlas.findRegion(l);if(n==null)throw new Error(`Region not found in atlas: ${l} (sequence: ${t})`);r[a]=n,r[a].renderObject=r[a]}}newRegionAttachment(t,s,e,r){const a=new q(s,e);if(r!=null)this.loadSequence(s,e,r);else{const f=this.atlas.findRegion(e);if(!f)throw new Error(`Region not found in atlas: ${e} (region attachment: ${s})`);f.renderObject=f,a.region=f}return a}newMeshAttachment(t,s,e,r){const a=new Rt(s,e);if(r!=null)this.loadSequence(s,e,r);else{const f=this.atlas.findRegion(e);if(!f)throw new Error(`Region not found in atlas: ${e} (mesh attachment: ${s})`);f.renderObject=f,a.region=f}return a}newBoundingBoxAttachment(t,s){return new ce(s)}newPathAttachment(t,s){return new Xt(s)}newPointAttachment(t,s){return new he(s)}newClippingAttachment(t,s){return new le(s)}}class Ue{constructor(t,s,e){if(this.matrix=new Os,this.parent=null,this.children=new Array,this.x=0,this.y=0,this.rotation=0,this.scaleX=0,this.scaleY=0,this.shearX=0,this.shearY=0,this.ax=0,this.ay=0,this.arotation=0,this.ascaleX=0,this.ascaleY=0,this.ashearX=0,this.ashearY=0,this.sorted=!1,this.active=!1,!t)throw new Error("data cannot be null.");if(!s)throw new Error("skeleton cannot be null.");this.data=t,this.skeleton=s,this.parent=e,this.setToSetupPose()}get worldX(){return this.matrix.tx}get worldY(){return this.matrix.ty}isActive(){return this.active}update(){this.updateWorldTransformWith(this.ax,this.ay,this.arotation,this.ascaleX,this.ascaleY,this.ashearX,this.ashearY)}updateWorldTransform(){this.updateWorldTransformWith(this.x,this.y,this.rotation,this.scaleX,this.scaleY,this.shearX,this.shearY)}updateWorldTransformWith(t,s,e,r,a,f,l){this.ax=t,this.ay=s,this.arotation=e,this.ascaleX=r,this.ascaleY=a,this.ashearX=f,this.ashearY=l;const n=this.parent,o=this.matrix,c=this.skeleton.scaleX,d=vt.yDown?-this.skeleton.scaleY:this.skeleton.scaleY;if(!n){const w=this.skeleton,S=e+90+l;o.a=F.cosDeg(e+f)*r*c,o.c=F.cosDeg(S)*a*c,o.b=F.sinDeg(e+f)*r*d,o.d=F.sinDeg(S)*a*d,o.tx=t*c+w.x,o.ty=s*d+w.y;return}let h=n.matrix.a,m=n.matrix.c,u=n.matrix.b,g=n.matrix.d;switch(o.tx=h*t+m*s+n.matrix.tx,o.ty=u*t+g*s+n.matrix.ty,this.data.transformMode){case st.Normal:{const w=e+90+l,S=F.cosDeg(e+f)*r,p=F.cosDeg(w)*a,b=F.sinDeg(e+f)*r,x=F.sinDeg(w)*a;o.a=h*S+m*b,o.c=h*p+m*x,o.b=u*S+g*b,o.d=u*p+g*x;return}case st.OnlyTranslation:{const w=e+90+l;o.a=F.cosDeg(e+f)*r,o.c=F.cosDeg(w)*a,o.b=F.sinDeg(e+f)*r,o.d=F.sinDeg(w)*a;break}case st.NoRotationOrReflection:{let w=h*h+u*u,S=0;w>1e-4?(w=Math.abs(h*g-m*u)/w,h/=c,u/=d,m=u*w,g=h*w,S=Math.atan2(u,h)*F.radDeg):(h=0,u=0,S=90-Math.atan2(g,m)*F.radDeg);const p=e+f-S,b=e+l-S+90,x=F.cosDeg(p)*r,y=F.cosDeg(b)*a,k=F.sinDeg(p)*r,C=F.sinDeg(b)*a;o.a=h*x-m*k,o.c=h*y-m*C,o.b=u*x+g*k,o.d=u*y+g*C;break}case st.NoScale:case st.NoScaleOrReflection:{const w=F.cosDeg(e),S=F.sinDeg(e);let p=(h*w+m*S)/c,b=(u*w+g*S)/d,x=Math.sqrt(p*p+b*b);x>1e-5&&(x=1/x),p*=x,b*=x,x=Math.sqrt(p*p+b*b),this.data.transformMode==st.NoScale&&h*g-m*u<0!=(c<0!=d<0)&&(x=-x);const y=Math.PI/2+Math.atan2(b,p),k=Math.cos(y)*x,C=Math.sin(y)*x,I=F.cosDeg(f)*r,M=F.cosDeg(90+l)*a,Y=F.sinDeg(f)*r,T=F.sinDeg(90+l)*a;o.a=p*I+k*Y,o.c=p*M+k*T,o.b=b*I+C*Y,o.d=b*M+C*T;break}}o.a*=c,o.c*=c,o.b*=d,o.d*=d}setToSetupPose(){const t=this.data;this.x=t.x,this.y=t.y,this.rotation=t.rotation,this.scaleX=t.scaleX,this.scaleY=t.scaleY,this.shearX=t.shearX,this.shearY=t.shearY}getWorldRotationX(){return Math.atan2(this.matrix.b,this.matrix.a)*F.radDeg}getWorldRotationY(){return Math.atan2(this.matrix.d,this.matrix.c)*F.radDeg}getWorldScaleX(){const t=this.matrix;return Math.sqrt(t.a*t.a+t.b*t.b)}getWorldScaleY(){const t=this.matrix;return Math.sqrt(t.c*t.c+t.d*t.d)}updateAppliedTransform(){const t=this.parent,s=this.matrix;if(!t){this.ax=s.tx-this.skeleton.x,this.ay=s.ty-this.skeleton.y,this.arotation=Math.atan2(s.b,s.a)*F.radDeg,this.ascaleX=Math.sqrt(s.a*s.a+s.b*s.b),this.ascaleY=Math.sqrt(s.c*s.c+s.d*s.d),this.ashearX=0,this.ashearY=Math.atan2(s.a*s.c+s.b*s.d,s.a*s.d-s.b*s.c)*F.radDeg;return}const e=t.matrix,r=1/(e.a*e.d-e.b*e.c),a=s.tx-e.tx,f=s.ty-e.ty;this.ax=a*e.d*r-f*e.c*r,this.ay=f*e.a*r-a*e.b*r;const l=r*e.d,n=r*e.a,o=r*e.c,c=r*e.b,d=l*s.a-o*s.b,h=l*s.c-o*s.d,m=n*s.b-c*s.a,u=n*s.d-c*s.c;if(this.ashearX=0,this.ascaleX=Math.sqrt(d*d+m*m),this.ascaleX>1e-4){const g=d*u-h*m;this.ascaleY=g/this.ascaleX,this.ashearY=Math.atan2(d*h+m*u,g)*F.radDeg,this.arotation=Math.atan2(m,d)*F.radDeg}else this.ascaleX=0,this.ascaleY=Math.sqrt(h*h+u*u),this.ashearY=0,this.arotation=90-Math.atan2(u,h)*F.radDeg}worldToLocal(t){const s=this.matrix,e=s.a,r=s.c,a=s.b,f=s.d,l=1/(e*f-r*a),n=t.x-s.tx,o=t.y-s.ty;return t.x=n*f*l-o*r*l,t.y=o*e*l-n*a*l,t}localToWorld(t){const s=this.matrix,e=t.x,r=t.y;return t.x=e*s.a+r*s.c+s.tx,t.y=e*s.b+r*s.d+s.ty,t}worldToLocalRotation(t){const s=F.sinDeg(t),e=F.cosDeg(t),r=this.matrix;return Math.atan2(r.a*s-r.b*e,r.d*e-r.c*s)*F.radDeg}localToWorldRotation(t){t-=this.rotation-this.shearX;const s=F.sinDeg(t),e=F.cosDeg(t),r=this.matrix;return Math.atan2(e*r.b+s*r.d,e*r.a+s*r.c)*F.radDeg}rotateWorld(t){const s=this.matrix,e=s.a,r=s.c,a=s.b,f=s.d,l=F.cosDeg(t),n=F.sinDeg(t);s.a=l*e-n*a,s.c=l*r-n*f,s.b=n*e+l*a,s.d=n*r+l*f}}class ze{constructor(t,s,e){if(this.index=0,this.parent=null,this.length=0,this.x=0,this.y=0,this.rotation=0,this.scaleX=1,this.scaleY=1,this.shearX=0,this.shearY=0,this.transformMode=st.Normal,this.skinRequired=!1,this.color=new N,t<0)throw new Error("index must be >= 0.");if(!s)throw new Error("name cannot be null.");this.index=t,this.name=s,this.parent=e}}class ae{constructor(t,s,e){this.name=t,this.order=s,this.skinRequired=e}}class He{constructor(t,s){if(this.intValue=0,this.floatValue=0,this.stringValue=null,this.time=0,this.volume=0,this.balance=0,!s)throw new Error("data cannot be null.");this.time=t,this.data=s}}class Ge{constructor(t){this.intValue=0,this.floatValue=0,this.stringValue=null,this.audioPath=null,this.volume=0,this.balance=0,this.name=t}}class Bs{constructor(t,s){if(this.bendDirection=0,this.compress=!1,this.stretch=!1,this.mix=1,this.softness=0,this.active=!1,!t)throw new Error("data cannot be null.");if(!s)throw new Error("skeleton cannot be null.");this.data=t,this.mix=t.mix,this.softness=t.softness,this.bendDirection=t.bendDirection,this.compress=t.compress,this.stretch=t.stretch,this.bones=new Array;for(let r=0;r<t.bones.length;r++){const a=s.findBone(t.bones[r].name);if(!a)throw new Error(`Couldn't find bone ${t.bones[r].name}`);this.bones.push(a)}const e=s.findBone(t.target.name);if(!e)throw new Error(`Couldn't find bone ${t.target.name}`);this.target=e}isActive(){return this.active}update(){if(this.mix==0)return;const t=this.target,s=this.bones;switch(s.length){case 1:this.apply1(s[0],t.worldX,t.worldY,this.compress,this.stretch,this.data.uniform,this.mix);break;case 2:this.apply2(s[0],s[1],t.worldX,t.worldY,this.bendDirection,this.stretch,this.data.uniform,this.softness,this.mix);break}}apply1(t,s,e,r,a,f,l){const n=t.parent.matrix;if(!n)throw new Error("IK bone must have parent.");const o=n.a;let c=n.c;const d=n.b;let h=n.d,m=-t.ashearX-t.arotation,u=0,g=0;const w=t.skeleton.scaleX,S=vt.yDown?-t.skeleton.scaleY:t.skeleton.scaleY;switch(t.data.transformMode){case st.OnlyTranslation:u=s-t.worldX,g=e-t.worldY,vt.yDown&&(g=-g);break;case st.NoRotationOrReflection:const x=Math.abs(o*h-c*d)/(o*o+d*d),y=o/w,k=d/S;c=-k*x*w,h=y*x*S,m+=Math.atan2(k,y)*F.radDeg;default:const C=s-n.tx,I=e-n.ty,M=o*h-c*d;u=(C*h-I*c)/M-t.ax,g=(I*o-C*d)/M-t.ay}m+=Math.atan2(g,u)*F.radDeg,t.ascaleX<0&&(m+=180),m>180?m-=360:m<-180&&(m+=360);let p=t.ascaleX,b=t.ascaleY;if(r||a){switch(t.data.transformMode){case st.NoScale:case st.NoScaleOrReflection:u=s-t.worldX,g=e-t.worldY}const x=t.data.length*p,y=Math.sqrt(u*u+g*g);if(r&&y<x||a&&y>x&&x>1e-4){const k=(y/x-1)*l+1;p*=k,f&&(b*=k)}}t.updateWorldTransformWith(t.ax,t.ay,t.arotation+m*l,p,b,t.ashearX,t.ashearY)}apply2(t,s,e,r,a,f,l,n,o){const c=t.ax,d=t.ay;let h=t.ascaleX,m=t.ascaleY,u=h,g=m,w=s.ascaleX;const S=t.matrix;let p=0,b=0,x=0;h<0?(h=-h,p=180,x=-1):(p=0,x=1),m<0&&(m=-m,x=-x),w<0?(w=-w,b=180):b=0;const y=s.ax;let k=0,C=0,I=0,M=S.a,Y=S.c,T=S.b,E=S.d;const X=Math.abs(h-m)<=1e-4;!X||f?(k=0,C=M*y+S.tx,I=T*y+S.ty):(k=s.ay,C=M*y+Y*k+S.tx,I=T*y+E*k+S.ty);const B=t.parent.matrix;if(!B)throw new Error("IK parent must itself have a parent.");M=B.a,Y=B.c,T=B.b,E=B.d;const $=1/(M*E-Y*T);let L=C-B.tx,P=I-B.ty;const W=(L*E-P*Y)*$-c,U=(P*M-L*T)*$-d,z=Math.sqrt(W*W+U*U);let Z=s.data.length*w,D,V;if(z<1e-4){this.apply1(t,e,r,!1,f,!1,o),s.updateWorldTransformWith(y,k,0,s.ascaleX,s.ascaleY,s.ashearX,s.ashearY);return}L=e-B.tx,P=r-B.ty;let G=(L*E-P*Y)*$-c,rt=(P*M-L*T)*$-d,at=G*G+rt*rt;if(n!=0){n*=h*(w+1)*.5;const et=Math.sqrt(at),wt=et-z-Z*h+n;if(wt>0){let bt=Math.min(1,wt/(n*2))-1;bt=(wt-n*(1-bt*bt))/et,G-=bt*G,rt-=bt*rt,at=G*G+rt*rt}}t:if(X){Z*=h;let et=(at-z*z-Z*Z)/(2*z*Z);et<-1?(et=-1,V=Math.PI*a):et>1?(et=1,V=0,f&&(M=(Math.sqrt(at)/(z+Z)-1)*o+1,u*=M,l&&(g*=M))):V=Math.acos(et)*a,M=z+Z*et,Y=Z*Math.sin(V),D=Math.atan2(rt*M-G*Y,G*M+rt*Y)}else{M=h*Z,Y=m*Z;const et=M*M,wt=Y*Y,bt=Math.atan2(rt,G);T=wt*z*z+et*at-et*wt;const zt=-2*wt*z,as=wt-et;if(E=zt*zt-4*as*T,E>=0){let Bt=Math.sqrt(E);zt<0&&(Bt=-Bt),Bt=-(zt+Bt)*.5;const ds=Bt/as,fs=T/Bt,Pt=Math.abs(ds)<Math.abs(fs)?ds:fs;if(Pt*Pt<=at){P=Math.sqrt(at-Pt*Pt)*a,D=bt-Math.atan2(P,Pt),V=Math.atan2(P/m,(Pt-z)/h);break t}}let os=F.PI,Ht=z-M,fe=Ht*Ht,cs=0,ls=0,Gt=z+M,ue=Gt*Gt,hs=0;T=-M*z/(et-wt),T>=-1&&T<=1&&(T=Math.acos(T),L=M*Math.cos(T)+z,P=Y*Math.sin(T),E=L*L+P*P,E<fe&&(os=T,fe=E,Ht=L,cs=P),E>ue&&(ls=T,ue=E,Gt=L,hs=P)),at<=(fe+ue)*.5?(D=bt-Math.atan2(cs*a,Ht),V=os*a):(D=bt-Math.atan2(hs*a,Gt),V=ls*a)}const is=Math.atan2(k,y)*x;let Wt=t.arotation;D=(D-is)*F.radDeg+p-Wt,D>180?D-=360:D<-180&&(D+=360),t.updateWorldTransformWith(c,d,Wt+D*o,u,g,0,0),Wt=s.arotation,V=((V+is)*F.radDeg-s.ashearX)*x+b-Wt,V>180?V-=360:V<-180&&(V+=360),s.updateWorldTransformWith(y,k,Wt+V*o,s.ascaleX,s.ascaleY,s.ashearX,s.ashearY)}}class Ke extends ae{constructor(t){super(t,0,!1),this.bones=new Array,this._target=null,this.bendDirection=1,this.compress=!1,this.stretch=!1,this.uniform=!1,this.mix=1,this.softness=0}set target(t){this._target=t}get target(){if(this._target)return this._target;throw new Error("BoneData not set.")}}class Je extends ae{constructor(t){super(t,0,!1),this.bones=new Array,this._target=null,this.positionMode=mt.Fixed,this.spacingMode=Q.Fixed,this.rotateMode=Tt.Chain,this.offsetRotation=0,this.position=0,this.spacing=0,this.mixRotate=0,this.mixX=0,this.mixY=0}set target(t){this._target=t}get target(){if(this._target)return this._target;throw new Error("SlotData not set.")}}var Q=(i=>(i[i.Length=0]="Length",i[i.Fixed=1]="Fixed",i[i.Percent=2]="Percent",i[i.Proportional=3]="Proportional",i))(Q||{});const Ct=class{constructor(i,t){if(this.position=0,this.spacing=0,this.mixRotate=0,this.mixX=0,this.mixY=0,this.spaces=new Array,this.positions=new Array,this.world=new Array,this.curves=new Array,this.lengths=new Array,this.segments=new Array,this.active=!1,!i)throw new Error("data cannot be null.");if(!t)throw new Error("skeleton cannot be null.");this.data=i,this.bones=new Array;for(let e=0,r=i.bones.length;e<r;e++){const a=t.findBone(i.bones[e].name);if(!a)throw new Error(`Couldn't find bone ${i.bones[e].name}.`);this.bones.push(a)}const s=t.findSlot(i.target.name);if(!s)throw new Error(`Couldn't find target bone ${i.target.name}`);this.target=s,this.position=i.position,this.spacing=i.spacing,this.mixRotate=i.mixRotate,this.mixX=i.mixX,this.mixY=i.mixY}isActive(){return this.active}update(){const i=this.target.getAttachment();if(!(i instanceof Xt))return;const t=this.mixRotate,s=this.mixX,e=this.mixY;if(t==0&&s==0&&e==0)return;const r=this.data,a=r.rotateMode==Tt.Tangent,f=r.rotateMode==Tt.ChainScale,l=this.bones,n=l.length,o=a?n:n+1,c=R.setArraySize(this.spaces,o),d=f?this.lengths=R.setArraySize(this.lengths,n):[],h=this.spacing;switch(r.spacingMode){case Q.Percent:if(f)for(let x=0,y=o-1;x<y;x++){const k=l[x],C=k.data.length;if(C<Ct.epsilon)d[x]=0;else{const I=C*k.matrix.a,M=C*k.matrix.b;d[x]=Math.sqrt(I*I+M*M)}}R.arrayFill(c,1,o,h);break;case Q.Proportional:let p=0;for(let x=0,y=o-1;x<y;){const k=l[x],C=k.data.length;if(C<Ct.epsilon)f&&(d[x]=0),c[++x]=h;else{const I=C*k.matrix.a,M=C*k.matrix.b,Y=Math.sqrt(I*I+M*M);f&&(d[x]=Y),c[++x]=Y,p+=Y}}if(p>0){p=o/p*h;for(let x=1;x<o;x++)c[x]*=p}break;default:const b=r.spacingMode==Q.Length;for(let x=0,y=o-1;x<y;){const k=l[x],C=k.data.length;if(C<Ct.epsilon)f&&(d[x]=0),c[++x]=h;else{const I=C*k.matrix.a,M=C*k.matrix.b,Y=Math.sqrt(I*I+M*M);f&&(d[x]=Y),c[++x]=(b?C+h:h)*Y/C}}}const m=this.computeWorldPositions(i,o,a);let u=m[0],g=m[1],w=r.offsetRotation,S=!1;if(w==0)S=r.rotateMode==Tt.Chain;else{S=!1;const p=this.target.bone.matrix;w*=p.a*p.d-p.b*p.c>0?F.degRad:-F.degRad}for(let p=0,b=3;p<n;p++,b+=3){const x=l[p],y=x.matrix;y.tx+=(u-y.tx)*s,y.ty+=(g-y.ty)*e;const k=m[b],C=m[b+1],I=k-u,M=C-g;if(f){const Y=d[p];if(Y!=0){const T=(Math.sqrt(I*I+M*M)/Y-1)*t+1;y.a*=T,y.b*=T}}if(u=k,g=C,t>0){const Y=y.a,T=y.c,E=y.b,X=y.d;let B=0,$=0,L=0;if(a?B=m[b-1]:c[p+1]==0?B=m[b+2]:B=Math.atan2(M,I),B-=Math.atan2(E,Y),S){$=Math.cos(B),L=Math.sin(B);const P=x.data.length;u+=(P*($*Y-L*E)-I)*t,g+=(P*(L*Y+$*E)-M)*t}else B+=w;B>F.PI?B-=F.PI2:B<-F.PI&&(B+=F.PI2),B*=t,$=Math.cos(B),L=Math.sin(B),y.a=$*Y-L*E,y.c=$*T-L*X,y.b=L*Y+$*E,y.d=L*T+$*X}x.updateAppliedTransform()}}computeWorldPositions(i,t,s){const e=this.target;let r=this.position;const a=this.spaces,f=R.setArraySize(this.positions,t*3+2);let l=this.world;const n=i.closed;let o=i.worldVerticesLength,c=o/6,d=Ct.NONE;if(!i.constantSpeed){const P=i.lengths;c-=n?1:2;const W=P[c];this.data.positionMode==mt.Percent&&(r*=W);let U;switch(this.data.spacingMode){case Q.Percent:U=W;break;case Q.Proportional:U=W/t;break;default:U=1}l=R.setArraySize(this.world,8);for(let z=0,Z=0,D=0;z<t;z++,Z+=3){const V=a[z]*U;r+=V;let G=r;if(n)G%=W,G<0&&(G+=W),D=0;else if(G<0){d!=Ct.BEFORE&&(d=Ct.BEFORE,i.computeWorldVertices(e,2,4,l,0,2)),this.addBeforePosition(G,l,0,f,Z);continue}else if(G>W){d!=Ct.AFTER&&(d=Ct.AFTER,i.computeWorldVertices(e,o-6,4,l,0,2)),this.addAfterPosition(G-W,l,0,f,Z);continue}for(;;D++){const rt=P[D];if(!(G>rt)){if(D==0)G/=rt;else{const at=P[D-1];G=(G-at)/(rt-at)}break}}D!=d&&(d=D,n&&D==c?(i.computeWorldVertices(e,o-4,4,l,0,2),i.computeWorldVertices(e,0,4,l,4,2)):i.computeWorldVertices(e,D*6+2,8,l,0,2)),this.addCurvePosition(G,l[0],l[1],l[2],l[3],l[4],l[5],l[6],l[7],f,Z,s||z>0&&V==0)}return f}n?(o+=2,l=R.setArraySize(this.world,o),i.computeWorldVertices(e,2,o-4,l,0,2),i.computeWorldVertices(e,0,2,l,o-4,2),l[o-2]=l[0],l[o-1]=l[1]):(c--,o-=4,l=R.setArraySize(this.world,o),i.computeWorldVertices(e,2,o,l,0,2));const h=R.setArraySize(this.curves,c);let m=0,u=l[0],g=l[1],w=0,S=0,p=0,b=0,x=0,y=0,k=0,C=0,I=0,M=0,Y=0,T=0,E=0,X=0;for(let P=0,W=2;P<c;P++,W+=6)w=l[W],S=l[W+1],p=l[W+2],b=l[W+3],x=l[W+4],y=l[W+5],k=(u-w*2+p)*.1875,C=(g-S*2+b)*.1875,I=((w-p)*3-u+x)*.09375,M=((S-b)*3-g+y)*.09375,Y=k*2+I,T=C*2+M,E=(w-u)*.75+k+I*.16666667,X=(S-g)*.75+C+M*.16666667,m+=Math.sqrt(E*E+X*X),E+=Y,X+=T,Y+=I,T+=M,m+=Math.sqrt(E*E+X*X),E+=Y,X+=T,m+=Math.sqrt(E*E+X*X),E+=Y+I,X+=T+M,m+=Math.sqrt(E*E+X*X),h[P]=m,u=x,g=y;this.data.positionMode==mt.Percent&&(r*=m);let B;switch(this.data.spacingMode){case Q.Percent:B=m;break;case Q.Proportional:B=m/t;break;default:B=1}const $=this.segments;let L=0;for(let P=0,W=0,U=0,z=0;P<t;P++,W+=3){const Z=a[P]*B;r+=Z;let D=r;if(n)D%=m,D<0&&(D+=m),U=0;else if(D<0){this.addBeforePosition(D,l,0,f,W);continue}else if(D>m){this.addAfterPosition(D-m,l,o-4,f,W);continue}for(;;U++){const V=h[U];if(!(D>V)){if(U==0)D/=V;else{const G=h[U-1];D=(D-G)/(V-G)}break}}if(U!=d){d=U;let V=U*6;for(u=l[V],g=l[V+1],w=l[V+2],S=l[V+3],p=l[V+4],b=l[V+5],x=l[V+6],y=l[V+7],k=(u-w*2+p)*.03,C=(g-S*2+b)*.03,I=((w-p)*3-u+x)*.006,M=((S-b)*3-g+y)*.006,Y=k*2+I,T=C*2+M,E=(w-u)*.3+k+I*.16666667,X=(S-g)*.3+C+M*.16666667,L=Math.sqrt(E*E+X*X),$[0]=L,V=1;V<8;V++)E+=Y,X+=T,Y+=I,T+=M,L+=Math.sqrt(E*E+X*X),$[V]=L;E+=Y,X+=T,L+=Math.sqrt(E*E+X*X),$[8]=L,E+=Y+I,X+=T+M,L+=Math.sqrt(E*E+X*X),$[9]=L,z=0}for(D*=L;;z++){const V=$[z];if(!(D>V)){if(z==0)D/=V;else{const G=$[z-1];D=z+(D-G)/(V-G)}break}}this.addCurvePosition(D*.1,u,g,w,S,p,b,x,y,f,W,s||P>0&&Z==0)}return f}addBeforePosition(i,t,s,e,r){const a=t[s],f=t[s+1],l=t[s+2]-a,n=t[s+3]-f,o=Math.atan2(n,l);e[r]=a+i*Math.cos(o),e[r+1]=f+i*Math.sin(o),e[r+2]=o}addAfterPosition(i,t,s,e,r){const a=t[s+2],f=t[s+3],l=a-t[s],n=f-t[s+1],o=Math.atan2(n,l);e[r]=a+i*Math.cos(o),e[r+1]=f+i*Math.sin(o),e[r+2]=o}addCurvePosition(i,t,s,e,r,a,f,l,n,o,c,d){if(i==0||isNaN(i)){o[c]=t,o[c+1]=s,o[c+2]=Math.atan2(r-s,e-t);return}const h=i*i,m=h*i,u=1-i,g=u*u,w=g*u,S=u*i,p=S*3,b=u*p,x=p*i,y=t*w+e*b+a*x+l*m,k=s*w+r*b+f*x+n*m;o[c]=y,o[c+1]=k,d&&(i<.001?o[c+2]=Math.atan2(r-s,e-t):o[c+2]=Math.atan2(k-(s*g+r*S*2+f*h),y-(t*g+e*S*2+a*h)))}};let _t=Ct;_t.NONE=-1,_t.BEFORE=-2,_t.AFTER=-3,_t.epsilon=1e-5;class Ps{constructor(t,s){if(this.darkColor=null,this.attachment=null,this.attachmentState=0,this.sequenceIndex=-1,this.deform=new Array,!t)throw new Error("data cannot be null.");if(!s)throw new Error("bone cannot be null.");this.data=t,this.bone=s,this.color=new N,this.darkColor=t.darkColor?new N:null,this.setToSetupPose(),this.blendMode=this.data.blendMode}getSkeleton(){return this.bone.skeleton}getAttachment(){return this.attachment}setAttachment(t){this.attachment!=t&&((!(t instanceof lt)||!(this.attachment instanceof lt)||t.timelineAttachment!=this.attachment.timelineAttachment)&&(this.deform.length=0),this.attachment=t,this.sequenceIndex=-1)}setToSetupPose(){this.color.setFromColor(this.data.color),this.darkColor&&this.darkColor.setFromColor(this.data.darkColor),this.data.attachmentName?(this.attachment=null,this.setAttachment(this.bone.skeleton.getAttachment(this.data.index,this.data.attachmentName))):this.attachment=null}}class Ls{constructor(t,s){if(this.mixRotate=0,this.mixX=0,this.mixY=0,this.mixScaleX=0,this.mixScaleY=0,this.mixShearY=0,this.temp=new jt,this.active=!1,!t)throw new Error("data cannot be null.");if(!s)throw new Error("skeleton cannot be null.");this.data=t,this.mixRotate=t.mixRotate,this.mixX=t.mixX,this.mixY=t.mixY,this.mixScaleX=t.mixScaleX,this.mixScaleY=t.mixScaleY,this.mixShearY=t.mixShearY,this.bones=new Array;for(let r=0;r<t.bones.length;r++){const a=s.findBone(t.bones[r].name);if(!a)throw new Error(`Couldn't find bone ${t.bones[r].name}.`);this.bones.push(a)}const e=s.findBone(t.target.name);if(!e)throw new Error(`Couldn't find target bone ${t.target.name}.`);this.target=e}isActive(){return this.active}update(){this.mixRotate==0&&this.mixX==0&&this.mixY==0&&this.mixScaleX==0&&this.mixScaleX==0&&this.mixShearY==0||(this.data.local?this.data.relative?this.applyRelativeLocal():this.applyAbsoluteLocal():this.data.relative?this.applyRelativeWorld():this.applyAbsoluteWorld())}applyAbsoluteWorld(){const t=this.mixRotate,s=this.mixX,e=this.mixY,r=this.mixScaleX,a=this.mixScaleY,f=this.mixShearY,l=s!=0||e!=0,n=this.target,o=n.matrix,c=o.a,d=o.c,h=o.b,m=o.d,u=c*m-d*h>0?F.degRad:-F.degRad,g=this.data.offsetRotation*u,w=this.data.offsetShearY*u,S=this.bones;for(let p=0,b=S.length;p<b;p++){const x=S[p],y=x.matrix;if(t!=0){const k=y.a,C=y.c,I=y.b,M=y.d;let Y=Math.atan2(h,c)-Math.atan2(I,k)+g;Y>F.PI?Y-=F.PI2:Y<-F.PI&&(Y+=F.PI2),Y*=t;const T=Math.cos(Y),E=Math.sin(Y);y.a=T*k-E*I,y.c=T*C-E*M,y.b=E*k+T*I,y.d=E*C+T*M}if(l){const k=this.temp;n.localToWorld(k.set(this.data.offsetX,this.data.offsetY)),y.tx+=(k.x-y.tx)*s,y.ty+=(k.y-y.ty)*e}if(r!=0){let k=Math.sqrt(y.a*y.a+y.b*y.b);k!=0&&(k=(k+(Math.sqrt(c*c+h*h)-k+this.data.offsetScaleX)*r)/k),y.a*=k,y.b*=k}if(a!=0){let k=Math.sqrt(y.c*y.c+y.d*y.d);k!=0&&(k=(k+(Math.sqrt(d*d+m*m)-k+this.data.offsetScaleY)*a)/k),y.c*=k,y.d*=k}if(f>0){const k=y.c,C=y.d,I=Math.atan2(C,k);let M=Math.atan2(m,d)-Math.atan2(h,c)-(I-Math.atan2(y.b,y.a));M>F.PI?M-=F.PI2:M<-F.PI&&(M+=F.PI2),M=I+(M+w)*f;const Y=Math.sqrt(k*k+C*C);y.c=Math.cos(M)*Y,y.d=Math.sin(M)*Y}x.updateAppliedTransform()}}applyRelativeWorld(){const t=this.mixRotate,s=this.mixX,e=this.mixY,r=this.mixScaleX,a=this.mixScaleY,f=this.mixShearY,l=s!=0||e!=0,n=this.target,o=n.matrix,c=o.a,d=o.c,h=o.b,m=o.d,u=c*m-d*h>0?F.degRad:-F.degRad,g=this.data.offsetRotation*u,w=this.data.offsetShearY*u,S=this.bones;for(let p=0,b=S.length;p<b;p++){const x=S[p],y=x.matrix;if(t!=0){const k=y.a,C=y.c,I=y.b,M=y.d;let Y=Math.atan2(h,c)+g;Y>F.PI?Y-=F.PI2:Y<-F.PI&&(Y+=F.PI2),Y*=t;const T=Math.cos(Y),E=Math.sin(Y);y.a=T*k-E*I,y.c=T*C-E*M,y.b=E*k+T*I,y.d=E*C+T*M}if(l){const k=this.temp;n.localToWorld(k.set(this.data.offsetX,this.data.offsetY)),y.tx+=k.x*s,y.ty+=k.y*e}if(r!=0){const k=(Math.sqrt(c*c+h*h)-1+this.data.offsetScaleX)*r+1;y.a*=k,y.b*=k}if(a!=0){const k=(Math.sqrt(d*d+m*m)-1+this.data.offsetScaleY)*a+1;y.c*=k,y.d*=k}if(f>0){let k=Math.atan2(m,d)-Math.atan2(h,c);k>F.PI?k-=F.PI2:k<-F.PI&&(k+=F.PI2);const C=y.c,I=y.d;k=Math.atan2(I,C)+(k-F.PI/2+w)*f;const M=Math.sqrt(C*C+I*I);y.c=Math.cos(k)*M,y.d=Math.sin(k)*M}x.updateAppliedTransform()}}applyAbsoluteLocal(){const t=this.mixRotate,s=this.mixX,e=this.mixY,r=this.mixScaleX,a=this.mixScaleY,f=this.mixShearY,l=this.target,n=this.bones;for(let o=0,c=n.length;o<c;o++){const d=n[o];let h=d.arotation;if(t!=0){let p=l.arotation-h+this.data.offsetRotation;p-=(16384-(16384.499999999996-p/360|0))*360,h+=p*t}let m=d.ax,u=d.ay;m+=(l.ax-m+this.data.offsetX)*s,u+=(l.ay-u+this.data.offsetY)*e;let g=d.ascaleX,w=d.ascaleY;r!=0&&g!=0&&(g=(g+(l.ascaleX-g+this.data.offsetScaleX)*r)/g),a!=0&&w!=0&&(w=(w+(l.ascaleY-w+this.data.offsetScaleY)*a)/w);let S=d.ashearY;if(f!=0){let p=l.ashearY-S+this.data.offsetShearY;p-=(16384-(16384.499999999996-p/360|0))*360,S+=p*f}d.updateWorldTransformWith(m,u,h,g,w,d.ashearX,S)}}applyRelativeLocal(){const t=this.mixRotate,s=this.mixX,e=this.mixY,r=this.mixScaleX,a=this.mixScaleY,f=this.mixShearY,l=this.target,n=this.bones;for(let o=0,c=n.length;o<c;o++){const d=n[o],h=d.arotation+(l.arotation+this.data.offsetRotation)*t,m=d.ax+(l.ax+this.data.offsetX)*s,u=d.ay+(l.ay+this.data.offsetY)*e,g=d.ascaleX*((l.ascaleX-1+this.data.offsetScaleX)*r+1),w=d.ascaleY*((l.ascaleY-1+this.data.offsetScaleY)*a+1),S=d.ashearY+(l.ashearY+this.data.offsetShearY)*f;d.updateWorldTransformWith(m,u,h,g,w,d.ashearX,S)}}}const Ut=class{constructor(i){if(this._updateCache=new Array,this.skin=null,this.scaleX=1,this.scaleY=1,this.x=0,this.y=0,!i)throw new Error("data cannot be null.");this.data=i,this.bones=new Array;for(let t=0;t<i.bones.length;t++){const s=i.bones[t];let e;if(!s.parent)e=new Ue(s,this,null);else{const r=this.bones[s.parent.index];e=new Ue(s,this,r),r.children.push(e)}this.bones.push(e)}this.slots=new Array,this.drawOrder=new Array;for(let t=0;t<i.slots.length;t++){const s=i.slots[t],e=this.bones[s.boneData.index],r=new Ps(s,e);this.slots.push(r),this.drawOrder.push(r)}this.ikConstraints=new Array;for(let t=0;t<i.ikConstraints.length;t++){const s=i.ikConstraints[t];this.ikConstraints.push(new Bs(s,this))}this.transformConstraints=new Array;for(let t=0;t<i.transformConstraints.length;t++){const s=i.transformConstraints[t];this.transformConstraints.push(new Ls(s,this))}this.pathConstraints=new Array;for(let t=0;t<i.pathConstraints.length;t++){const s=i.pathConstraints[t];this.pathConstraints.push(new _t(s,this))}this.color=new N(1,1,1,1),this.updateCache()}updateCache(){const i=this._updateCache;i.length=0;const t=this.bones;for(let o=0,c=t.length;o<c;o++){const d=t[o];d.sorted=d.data.skinRequired,d.active=!d.sorted}if(this.skin){const o=this.skin.bones;for(let c=0,d=this.skin.bones.length;c<d;c++){let h=this.bones[o[c].index];do h.sorted=!1,h.active=!0,h=h.parent;while(h)}}const s=this.ikConstraints,e=this.transformConstraints,r=this.pathConstraints,a=s.length,f=e.length,l=r.length,n=a+f+l;t:for(let o=0;o<n;o++){for(let c=0;c<a;c++){const d=s[c];if(d.data.order==o){this.sortIkConstraint(d);continue t}}for(let c=0;c<f;c++){const d=e[c];if(d.data.order==o){this.sortTransformConstraint(d);continue t}}for(let c=0;c<l;c++){const d=r[c];if(d.data.order==o){this.sortPathConstraint(d);continue t}}}for(let o=0,c=t.length;o<c;o++)this.sortBone(t[o])}sortIkConstraint(i){if(i.active=i.target.isActive()&&(!i.data.skinRequired||this.skin&&R.contains(this.skin.constraints,i.data,!0)),!i.active)return;const t=i.target;this.sortBone(t);const s=i.bones,e=s[0];if(this.sortBone(e),s.length==1)this._updateCache.push(i),this.sortReset(e.children);else{const r=s[s.length-1];this.sortBone(r),this._updateCache.push(i),this.sortReset(e.children),r.sorted=!0}}sortPathConstraint(i){if(i.active=i.target.bone.isActive()&&(!i.data.skinRequired||this.skin&&R.contains(this.skin.constraints,i.data,!0)),!i.active)return;const t=i.target,s=t.data.index,e=t.bone;this.skin&&this.sortPathConstraintAttachment(this.skin,s,e),this.data.defaultSkin&&this.data.defaultSkin!=this.skin&&this.sortPathConstraintAttachment(this.data.defaultSkin,s,e);for(let l=0,n=this.data.skins.length;l<n;l++)this.sortPathConstraintAttachment(this.data.skins[l],s,e);const r=t.getAttachment();r instanceof Xt&&this.sortPathConstraintAttachmentWith(r,e);const a=i.bones,f=a.length;for(let l=0;l<f;l++)this.sortBone(a[l]);this._updateCache.push(i);for(let l=0;l<f;l++)this.sortReset(a[l].children);for(let l=0;l<f;l++)a[l].sorted=!0}sortTransformConstraint(i){if(i.active=i.target.isActive()&&(!i.data.skinRequired||this.skin&&R.contains(this.skin.constraints,i.data,!0)),!i.active)return;this.sortBone(i.target);const t=i.bones,s=t.length;if(i.data.local)for(let e=0;e<s;e++){const r=t[e];this.sortBone(r.parent),this.sortBone(r)}else for(let e=0;e<s;e++)this.sortBone(t[e]);this._updateCache.push(i);for(let e=0;e<s;e++)this.sortReset(t[e].children);for(let e=0;e<s;e++)t[e].sorted=!0}sortPathConstraintAttachment(i,t,s){const e=i.attachments[t];if(e)for(const r in e)this.sortPathConstraintAttachmentWith(e[r],s)}sortPathConstraintAttachmentWith(i,t){if(!(i instanceof Xt))return;const s=i.bones;if(!s)this.sortBone(t);else{const e=this.bones;for(let r=0,a=s.length;r<a;){let f=s[r++];for(f+=r;r<f;)this.sortBone(e[s[r++]])}}}sortBone(i){if(!i||i.sorted)return;const t=i.parent;t&&this.sortBone(t),i.sorted=!0,this._updateCache.push(i)}sortReset(i){for(let t=0,s=i.length;t<s;t++){const e=i[t];e.active&&(e.sorted&&this.sortReset(e.children),e.sorted=!1)}}updateWorldTransform(){const i=this.bones;for(let s=0,e=i.length;s<e;s++){const r=i[s];r.ax=r.x,r.ay=r.y,r.arotation=r.rotation,r.ascaleX=r.scaleX,r.ascaleY=r.scaleY,r.ashearX=r.shearX,r.ashearY=r.shearY}const t=this._updateCache;for(let s=0,e=t.length;s<e;s++)t[s].update()}updateWorldTransformWith(i){const t=this.getRootBone(),s=i.matrix.a,e=i.matrix.c,r=i.matrix.b,a=i.matrix.d;t.matrix.tx=s*this.x+e*this.y+i.worldX,t.matrix.ty=r*this.x+a*this.y+i.worldY;const f=t.rotation+90+t.shearY,l=F.cosDeg(t.rotation+t.shearX)*t.scaleX,n=F.cosDeg(f)*t.scaleY,o=F.sinDeg(t.rotation+t.shearX)*t.scaleX,c=F.sinDeg(f)*t.scaleY,d=this.scaleX,h=vt.yDown?-this.scaleY:this.scaleY;t.matrix.a=(s*l+e*o)*d,t.matrix.c=(s*n+e*c)*d,t.matrix.b=(r*l+a*o)*h,t.matrix.d=(r*n+a*c)*h;const m=this._updateCache;for(let u=0,g=m.length;u<g;u++){const w=m[u];w!=t&&w.update()}}setToSetupPose(){this.setBonesToSetupPose(),this.setSlotsToSetupPose()}setBonesToSetupPose(){const i=this.bones;for(let r=0,a=i.length;r<a;r++)i[r].setToSetupPose();const t=this.ikConstraints;for(let r=0,a=t.length;r<a;r++){const f=t[r];f.mix=f.data.mix,f.softness=f.data.softness,f.bendDirection=f.data.bendDirection,f.compress=f.data.compress,f.stretch=f.data.stretch}const s=this.transformConstraints;for(let r=0,a=s.length;r<a;r++){const f=s[r],l=f.data;f.mixRotate=l.mixRotate,f.mixX=l.mixX,f.mixY=l.mixY,f.mixScaleX=l.mixScaleX,f.mixScaleY=l.mixScaleY,f.mixShearY=l.mixShearY}const e=this.pathConstraints;for(let r=0,a=e.length;r<a;r++){const f=e[r],l=f.data;f.position=l.position,f.spacing=l.spacing,f.mixRotate=l.mixRotate,f.mixX=l.mixX,f.mixY=l.mixY}}setSlotsToSetupPose(){const i=this.slots;R.arrayCopy(i,0,this.drawOrder,0,i.length);for(let t=0,s=i.length;t<s;t++)i[t].setToSetupPose()}getRootBone(){return this.bones.length==0?null:this.bones[0]}findBone(i){if(!i)throw new Error("boneName cannot be null.");const t=this.bones;for(let s=0,e=t.length;s<e;s++){const r=t[s];if(r.data.name==i)return r}return null}findBoneIndex(i){if(!i)throw new Error("boneName cannot be null.");const t=this.bones;for(let s=0,e=t.length;s<e;s++)if(t[s].data.name==i)return s;return-1}findSlot(i){if(!i)throw new Error("slotName cannot be null.");const t=this.slots;for(let s=0,e=t.length;s<e;s++){const r=t[s];if(r.data.name==i)return r}return null}findSlotIndex(i){if(!i)throw new Error("slotName cannot be null.");const t=this.slots;for(let s=0,e=t.length;s<e;s++)if(t[s].data.name==i)return s;return-1}setSkinByName(i){const t=this.data.findSkin(i);if(!t)throw new Error(`Skin not found: ${i}`);this.setSkin(t)}setSkin(i){if(i!=this.skin){if(i)if(this.skin)i.attachAll(this,this.skin);else{const t=this.slots;for(let s=0,e=t.length;s<e;s++){const r=t[s],a=r.data.attachmentName;if(a){const f=i.getAttachment(s,a);f&&r.setAttachment(f)}}}this.skin=i,this.updateCache()}}getAttachmentByName(i,t){const s=this.data.findSlot(i);if(!s)throw new Error(`Can't find slot with name ${i}`);return this.getAttachment(s.index,t)}getAttachment(i,t){if(!t)throw new Error("attachmentName cannot be null.");if(this.skin){const s=this.skin.getAttachment(i,t);if(s)return s}return this.data.defaultSkin?this.data.defaultSkin.getAttachment(i,t):null}setAttachment(i,t){if(!i)throw new Error("slotName cannot be null.");const s=this.slots;for(let e=0,r=s.length;e<r;e++){const a=s[e];if(a.data.name==i){let f=null;if(t&&(f=this.getAttachment(e,t),!f))throw new Error(`Attachment not found: ${t}, for slot: ${i}`);a.setAttachment(f);return}}throw new Error(`Slot not found: ${i}`)}findIkConstraint(i){if(!i)throw new Error("constraintName cannot be null.");const t=this.ikConstraints;for(let s=0,e=t.length;s<e;s++){const r=t[s];if(r.data.name==i)return r}return null}findTransformConstraint(i){if(!i)throw new Error("constraintName cannot be null.");const t=this.transformConstraints;for(let s=0,e=t.length;s<e;s++){const r=t[s];if(r.data.name==i)return r}return null}findPathConstraint(i){if(!i)throw new Error("constraintName cannot be null.");const t=this.pathConstraints;for(let s=0,e=t.length;s<e;s++){const r=t[s];if(r.data.name==i)return r}return null}getBoundsRect(){const i=new jt,t=new jt;return this.getBounds(i,t),{x:i.x,y:i.y,width:t.x,height:t.y}}getBounds(i,t,s=new Array(2)){if(!i)throw new Error("offset cannot be null.");if(!t)throw new Error("size cannot be null.");const e=this.drawOrder;let r=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY,f=Number.NEGATIVE_INFINITY,l=Number.NEGATIVE_INFINITY;for(let n=0,o=e.length;n<o;n++){const c=e[n];if(!c.bone.active)continue;let d=0,h=null;const m=c.getAttachment();if(m instanceof q)d=8,h=R.setArraySize(s,d,0),m.computeWorldVertices(c,h,0,2);else if(m instanceof Rt){const u=m;d=u.worldVerticesLength,h=R.setArraySize(s,d,0),u.computeWorldVertices(c,0,d,h,0,2)}if(h)for(let u=0,g=h.length;u<g;u+=2){const w=h[u],S=h[u+1];r=Math.min(r,w),a=Math.min(a,S),f=Math.max(f,w),l=Math.max(l,S)}}i.set(r,a),t.set(f-r,l-a)}get flipX(){return this.scaleX==-1}set flipX(i){Ut.deprecatedWarning1||(Ut.deprecatedWarning1=!0,console.warn("Spine Deprecation Warning: `Skeleton.flipX/flipY` was deprecated, please use scaleX/scaleY")),this.scaleX=i?1:-1}get flipY(){return this.scaleY==-1}set flipY(i){Ut.deprecatedWarning1||(Ut.deprecatedWarning1=!0,console.warn("Spine Deprecation Warning: `Skeleton.flipX/flipY` was deprecated, please use scaleX/scaleY")),this.scaleY=i?1:-1}};let Qe=Ut;Qe.deprecatedWarning1=!1;class Ze{constructor(){this.name=null,this.bones=new Array,this.slots=new Array,this.skins=new Array,this.defaultSkin=null,this.events=new Array,this.animations=new Array,this.ikConstraints=new Array,this.transformConstraints=new Array,this.pathConstraints=new Array,this.x=0,this.y=0,this.width=0,this.height=0,this.version=null,this.hash=null,this.fps=0,this.imagesPath=null,this.audioPath=null}findBone(t){if(!t)throw new Error("boneName cannot be null.");const s=this.bones;for(let e=0,r=s.length;e<r;e++){const a=s[e];if(a.name==t)return a}return null}findBoneIndex(t){if(!t)throw new Error("boneName cannot be null.");const s=this.bones;for(let e=0,r=s.length;e<r;e++)if(s[e].name==t)return e;return-1}findSlot(t){if(!t)throw new Error("slotName cannot be null.");const s=this.slots;for(let e=0,r=s.length;e<r;e++){const a=s[e];if(a.name==t)return a}return null}findSlotIndex(t){if(!t)throw new Error("slotName cannot be null.");const s=this.slots;for(let e=0,r=s.length;e<r;e++)if(s[e].name==t)return e;return-1}findSkin(t){if(!t)throw new Error("skinName cannot be null.");const s=this.skins;for(let e=0,r=s.length;e<r;e++){const a=s[e];if(a.name==t)return a}return null}findEvent(t){if(!t)throw new Error("eventDataName cannot be null.");const s=this.events;for(let e=0,r=s.length;e<r;e++){const a=s[e];if(a.name==t)return a}return null}findAnimation(t){if(!t)throw new Error("animationName cannot be null.");const s=this.animations;for(let e=0,r=s.length;e<r;e++){const a=s[e];if(a.name==t)return a}return null}findIkConstraint(t){if(!t)throw new Error("constraintName cannot be null.");const s=this.ikConstraints;for(let e=0,r=s.length;e<r;e++){const a=s[e];if(a.name==t)return a}return null}findTransformConstraint(t){if(!t)throw new Error("constraintName cannot be null.");const s=this.transformConstraints;for(let e=0,r=s.length;e<r;e++){const a=s[e];if(a.name==t)return a}return null}findPathConstraint(t){if(!t)throw new Error("constraintName cannot be null.");const s=this.pathConstraints;for(let e=0,r=s.length;e<r;e++){const a=s[e];if(a.name==t)return a}return null}findPathConstraintIndex(t){if(t==null)throw new Error("pathConstraintName cannot be null.");const s=this.pathConstraints;for(let e=0,r=s.length;e<r;e++)if(s[e].name==t)return e;return-1}}class je{constructor(t,s,e){if(this.index=0,this.color=new N(1,1,1,1),this.darkColor=null,this.attachmentName=null,this.blendMode=yt.NORMAL,t<0)throw new Error("index must be >= 0.");if(!s)throw new Error("name cannot be null.");if(!e)throw new Error("boneData cannot be null.");this.index=t,this.name=s,this.boneData=e}}class ts extends ae{constructor(t){super(t,0,!1),this.bones=new Array,this._target=null,this.mixRotate=0,this.mixX=0,this.mixY=0,this.mixScaleX=0,this.mixScaleY=0,this.mixShearY=0,this.offsetRotation=0,this.offsetX=0,this.offsetY=0,this.offsetScaleX=0,this.offsetScaleY=0,this.offsetShearY=0,this.relative=!1,this.local=!1}set target(t){this._target=t}get target(){if(this._target)return this._target;throw new Error("BoneData not set.")}}class es{constructor(t,s,e){this.slotIndex=t,this.name=s,this.attachment=e}}class oe{constructor(t){if(this.attachments=new Array,this.bones=Array(),this.constraints=new Array,!t)throw new Error("name cannot be null.");this.name=t}setAttachment(t,s,e){if(!e)throw new Error("attachment cannot be null.");const r=this.attachments;t>=r.length&&(r.length=t+1),r[t]||(r[t]={}),r[t][s]=e}addSkin(t){for(let e=0;e<t.bones.length;e++){const r=t.bones[e];let a=!1;for(let f=0;f<this.bones.length;f++)if(this.bones[f]==r){a=!0;break}a||this.bones.push(r)}for(let e=0;e<t.constraints.length;e++){const r=t.constraints[e];let a=!1;for(let f=0;f<this.constraints.length;f++)if(this.constraints[f]==r){a=!0;break}a||this.constraints.push(r)}const s=t.getAttachments();for(let e=0;e<s.length;e++){const r=s[e];this.setAttachment(r.slotIndex,r.name,r.attachment)}}copySkin(t){for(let e=0;e<t.bones.length;e++){const r=t.bones[e];let a=!1;for(let f=0;f<this.bones.length;f++)if(this.bones[f]==r){a=!0;break}a||this.bones.push(r)}for(let e=0;e<t.constraints.length;e++){const r=t.constraints[e];let a=!1;for(let f=0;f<this.constraints.length;f++)if(this.constraints[f]==r){a=!0;break}a||this.constraints.push(r)}const s=t.getAttachments();for(let e=0;e<s.length;e++){const r=s[e];r.attachment&&(r.attachment instanceof Rt?(r.attachment=r.attachment.newLinkedMesh(),this.setAttachment(r.slotIndex,r.name,r.attachment)):(r.attachment=r.attachment.copy(),this.setAttachment(r.slotIndex,r.name,r.attachment)))}}getAttachment(t,s){const e=this.attachments[t];return e?e[s]:null}removeAttachment(t,s){const e=this.attachments[t];e&&delete e[s]}getAttachments(){const t=new Array;for(let s=0;s<this.attachments.length;s++){const e=this.attachments[s];if(e)for(const r in e){const a=e[r];a&&t.push(new es(s,r,a))}}return t}getAttachmentsForSlot(t,s){const e=this.attachments[t];if(e)for(const r in e){const a=e[r];a&&s.push(new es(t,r,a))}}clear(){this.attachments.length=0,this.bones.length=0,this.constraints.length=0}attachAll(t,s){let e=0;for(let r=0;r<t.slots.length;r++){const a=t.slots[r],f=a.getAttachment();if(f&&e<s.attachments.length){const l=s.attachments[e];for(const n in l){const o=l[n];if(f==o){const c=this.getAttachment(e,n);c&&a.setAttachment(c);break}}}e++}}}class ss{constructor(t){this.ver40=!1,this.scale=1,this.linkedMeshes=new Array,this.attachmentLoader=t}readSkeletonData(t){const s=this.scale,e=new Ze;e.name="";const r=new xs(t),a=r.readInt32(),f=r.readInt32();e.hash=f==0&&a==0?null:f.toString(16)+a.toString(16),e.version=r.readString();const l=e.version.substr(0,3);if(l!=="4.0"&&l!=="4.1"){const d=`Spine 4.1 loader cant load version ${e.version}. Please configure your pixi-spine bundle`;console.error(d)}this.ver40=l==="4.0",e.x=r.readFloat(),e.y=r.readFloat(),e.width=r.readFloat(),e.height=r.readFloat();const n=r.readBoolean();n&&(e.fps=r.readFloat(),e.imagesPath=r.readString(),e.audioPath=r.readString());let o=0;o=r.readInt(!0);for(let d=0;d<o;d++){const h=r.readString();if(!h)throw new Error("String in string table must not be null.");r.strings.push(h)}o=r.readInt(!0);for(let d=0;d<o;d++){const h=r.readString();if(!h)throw new Error("Bone name must not be null.");const m=d==0?null:e.bones[r.readInt(!0)],u=new ze(d,h,m);u.rotation=r.readFloat(),u.x=r.readFloat()*s,u.y=r.readFloat()*s,u.scaleX=r.readFloat(),u.scaleY=r.readFloat(),u.shearX=r.readFloat(),u.shearY=r.readFloat(),u.length=r.readFloat()*s,u.transformMode=r.readInt(!0),u.skinRequired=r.readBoolean(),n&&N.rgba8888ToColor(u.color,r.readInt32()),e.bones.push(u)}o=r.readInt(!0);for(let d=0;d<o;d++){const h=r.readString();if(!h)throw new Error("Slot name must not be null.");const m=e.bones[r.readInt(!0)],u=new je(d,h,m);N.rgba8888ToColor(u.color,r.readInt32());const g=r.readInt32();g!=-1&&N.rgb888ToColor(u.darkColor=new N,g),u.attachmentName=r.readStringRef(),u.blendMode=r.readInt(!0),e.slots.push(u)}o=r.readInt(!0);for(let d=0,h;d<o;d++){const m=r.readString();if(!m)throw new Error("IK constraint data name must not be null.");const u=new Ke(m);u.order=r.readInt(!0),u.skinRequired=r.readBoolean(),h=r.readInt(!0);for(let g=0;g<h;g++)u.bones.push(e.bones[r.readInt(!0)]);u.target=e.bones[r.readInt(!0)],u.mix=r.readFloat(),u.softness=r.readFloat()*s,u.bendDirection=r.readByte(),u.compress=r.readBoolean(),u.stretch=r.readBoolean(),u.uniform=r.readBoolean(),e.ikConstraints.push(u)}o=r.readInt(!0);for(let d=0,h;d<o;d++){const m=r.readString();if(!m)throw new Error("Transform constraint data name must not be null.");const u=new ts(m);u.order=r.readInt(!0),u.skinRequired=r.readBoolean(),h=r.readInt(!0);for(let g=0;g<h;g++)u.bones.push(e.bones[r.readInt(!0)]);u.target=e.bones[r.readInt(!0)],u.local=r.readBoolean(),u.relative=r.readBoolean(),u.offsetRotation=r.readFloat(),u.offsetX=r.readFloat()*s,u.offsetY=r.readFloat()*s,u.offsetScaleX=r.readFloat(),u.offsetScaleY=r.readFloat(),u.offsetShearY=r.readFloat(),u.mixRotate=r.readFloat(),u.mixX=r.readFloat(),u.mixY=r.readFloat(),u.mixScaleX=r.readFloat(),u.mixScaleY=r.readFloat(),u.mixShearY=r.readFloat(),e.transformConstraints.push(u)}o=r.readInt(!0);for(let d=0,h;d<o;d++){const m=r.readString();if(!m)throw new Error("Path constraint data name must not be null.");const u=new Je(m);u.order=r.readInt(!0),u.skinRequired=r.readBoolean(),h=r.readInt(!0);for(let g=0;g<h;g++)u.bones.push(e.bones[r.readInt(!0)]);u.target=e.slots[r.readInt(!0)],u.positionMode=r.readInt(!0),u.spacingMode=r.readInt(!0),u.rotateMode=r.readInt(!0),u.offsetRotation=r.readFloat(),u.position=r.readFloat(),u.positionMode==mt.Fixed&&(u.position*=s),u.spacing=r.readFloat(),(u.spacingMode==Q.Length||u.spacingMode==Q.Fixed)&&(u.spacing*=s),u.mixRotate=r.readFloat(),u.mixX=r.readFloat(),u.mixY=r.readFloat(),e.pathConstraints.push(u)}const c=this.readSkin(r,e,!0,n);c&&(e.defaultSkin=c,e.skins.push(c));{let d=e.skins.length;for(R.setArraySize(e.skins,o=d+r.readInt(!0));d<o;d++){const h=this.readSkin(r,e,!1,n);if(!h)throw new Error("readSkin() should not have returned null.");e.skins[d]=h}}o=this.linkedMeshes.length;for(let d=0;d<o;d++){const h=this.linkedMeshes[d],m=h.skin?e.findSkin(h.skin):e.defaultSkin;if(!m)throw new Error("Not skin found for linked mesh.");if(!h.parent)throw new Error("Linked mesh parent must not be null");const u=m.getAttachment(h.slotIndex,h.parent);if(!u)throw new Error(`Parent mesh not found: ${h.parent}`);h.mesh.timelineAttachment=h.inheritTimeline?u:h.mesh,h.mesh.setParentMesh(u)}this.linkedMeshes.length=0,o=r.readInt(!0);for(let d=0;d<o;d++){const h=r.readStringRef();if(!h)throw new Error;const m=new Ge(h);m.intValue=r.readInt(!1),m.floatValue=r.readFloat(),m.stringValue=r.readString(),m.audioPath=r.readString(),m.audioPath&&(m.volume=r.readFloat(),m.balance=r.readFloat()),e.events.push(m)}o=r.readInt(!0);for(let d=0;d<o;d++){const h=r.readString();if(!h)throw new Error("Animatio name must not be null.");e.animations.push(this.readAnimation(r,h,e))}return e}readSkin(t,s,e,r){let a=null,f=0;if(e){if(f=t.readInt(!0),f==0)return null;a=new oe("default")}else{const l=t.readStringRef();if(!l)throw new Error("Skin name must not be null.");a=new oe(l),a.bones.length=t.readInt(!0);for(let n=0,o=a.bones.length;n<o;n++)a.bones[n]=s.bones[t.readInt(!0)];for(let n=0,o=t.readInt(!0);n<o;n++)a.constraints.push(s.ikConstraints[t.readInt(!0)]);for(let n=0,o=t.readInt(!0);n<o;n++)a.constraints.push(s.transformConstraints[t.readInt(!0)]);for(let n=0,o=t.readInt(!0);n<o;n++)a.constraints.push(s.pathConstraints[t.readInt(!0)]);f=t.readInt(!0)}for(let l=0;l<f;l++){const n=t.readInt(!0);for(let o=0,c=t.readInt(!0);o<c;o++){const d=t.readStringRef();if(!d)throw new Error("Attachment name must not be null");const h=this.readAttachment(t,s,a,n,d,r);h&&a.setAttachment(n,d,h)}}return a}readAttachment(t,s,e,r,a,f){const l=this.scale;let n=t.readStringRef();switch(n||(n=a),t.readByte()){case K.Region:{let o=t.readStringRef();const c=t.readFloat(),d=t.readFloat(),h=t.readFloat(),m=t.readFloat(),u=t.readFloat(),g=t.readFloat(),w=t.readFloat(),S=t.readInt32(),p=this.readSequence(t);o||(o=n);const b=this.attachmentLoader.newRegionAttachment(e,n,o,p);return b?(b.path=o,b.x=d*l,b.y=h*l,b.scaleX=m,b.scaleY=u,b.rotation=c,b.width=g*l,b.height=w*l,N.rgba8888ToColor(b.color,S),b.sequence=p,p==null&&b.updateRegion(),b):null}case K.BoundingBox:{const o=t.readInt(!0),c=this.readVertices(t,o),d=f?t.readInt32():0,h=this.attachmentLoader.newBoundingBoxAttachment(e,n);return h?(h.worldVerticesLength=o<<1,h.vertices=c.vertices,h.bones=c.bones,f&&N.rgba8888ToColor(h.color,d),h):null}case K.Mesh:{let o=t.readStringRef();const c=t.readInt32(),d=t.readInt(!0),h=this.readFloatArray(t,d<<1,1),m=this.readShortArray(t),u=this.readVertices(t,d),g=t.readInt(!0),w=this.readSequence(t);let S=[],p=0,b=0;f&&(S=this.readShortArray(t),p=t.readFloat(),b=t.readFloat()),o||(o=n);const x=this.attachmentLoader.newMeshAttachment(e,n,o,w);return x?(x.path=o,N.rgba8888ToColor(x.color,c),x.bones=u.bones,x.vertices=u.vertices,x.worldVerticesLength=d<<1,x.triangles=m,x.regionUVs=new Float32Array(h),x.hullLength=g<<1,x.sequence=w,f&&(x.edges=S,x.width=p*l,x.height=b*l),x):null}case K.LinkedMesh:{let o=t.readStringRef();const c=t.readInt32(),d=t.readStringRef(),h=t.readStringRef(),m=t.readBoolean(),u=this.readSequence(t);let g=0,w=0;f&&(g=t.readFloat(),w=t.readFloat()),o||(o=n);const S=this.attachmentLoader.newMeshAttachment(e,n,o,u);return S?(S.path=o,N.rgba8888ToColor(S.color,c),S.sequence=u,f&&(S.width=g*l,S.height=w*l),this.linkedMeshes.push(new ln(S,d,r,h,m)),S):null}case K.Path:{const o=t.readBoolean(),c=t.readBoolean(),d=t.readInt(!0),h=this.readVertices(t,d),m=R.newArray(d/3,0);for(let w=0,S=m.length;w<S;w++)m[w]=t.readFloat()*l;const u=f?t.readInt32():0,g=this.attachmentLoader.newPathAttachment(e,n);return g?(g.closed=o,g.constantSpeed=c,g.worldVerticesLength=d<<1,g.vertices=h.vertices,g.bones=h.bones,g.lengths=m,f&&N.rgba8888ToColor(g.color,u),g):null}case K.Point:{const o=t.readFloat(),c=t.readFloat(),d=t.readFloat(),h=f?t.readInt32():0,m=this.attachmentLoader.newPointAttachment(e,n);return m?(m.x=c*l,m.y=d*l,m.rotation=o,f&&N.rgba8888ToColor(m.color,h),m):null}case K.Clipping:{const o=t.readInt(!0),c=t.readInt(!0),d=this.readVertices(t,c),h=f?t.readInt32():0,m=this.attachmentLoader.newClippingAttachment(e,n);return m?(m.endSlot=s.slots[o],m.worldVerticesLength=c<<1,m.vertices=d.vertices,m.bones=d.bones,f&&N.rgba8888ToColor(m.color,h),m):null}}return null}readSequence(t){if(this.ver40||!t.readBoolean())return null;const s=new se(t.readInt(!0));return s.start=t.readInt(!0),s.digits=t.readInt(!0),s.setupIndex=t.readInt(!0),s}readDeformTimelineType(t){return this.ver40?Ns:t.readByte()}readVertices(t,s){const e=this.scale,r=s<<1,a=new hn;if(!t.readBoolean())return a.vertices=this.readFloatArray(t,r,e),a;const f=new Array,l=new Array;for(let n=0;n<s;n++){const o=t.readInt(!0);l.push(o);for(let c=0;c<o;c++)l.push(t.readInt(!0)),f.push(t.readFloat()*e),f.push(t.readFloat()*e),f.push(t.readFloat())}return a.vertices=R.toFloatArray(f),a.bones=l,a}readFloatArray(t,s,e){const r=new Array(s);if(e==1)for(let a=0;a<s;a++)r[a]=t.readFloat();else for(let a=0;a<s;a++)r[a]=t.readFloat()*e;return r}readShortArray(t){const s=t.readInt(!0),e=new Array(s);for(let r=0;r<s;r++)e[r]=t.readShort();return e}readAnimation(t,s,e){t.readInt(!0);const r=new Array,a=this.scale;for(let o=0,c=t.readInt(!0);o<c;o++){const d=t.readInt(!0);for(let h=0,m=t.readInt(!0);h<m;h++){const u=t.readByte(),g=t.readInt(!0),w=g-1;switch(u){case Sn:{const S=new Ft(g,d);for(let p=0;p<g;p++)S.setFrame(p,t.readFloat(),t.readStringRef());r.push(S);break}case kn:{const S=t.readInt(!0),p=new Xe(g,S,d);let b=t.readFloat(),x=t.readUnsignedByte()/255,y=t.readUnsignedByte()/255,k=t.readUnsignedByte()/255,C=t.readUnsignedByte()/255;for(let I=0,M=0;p.setFrame(I,b,x,y,k,C),I!=w;I++){const Y=t.readFloat(),T=t.readUnsignedByte()/255,E=t.readUnsignedByte()/255,X=t.readUnsignedByte()/255,B=t.readUnsignedByte()/255;switch(t.readByte()){case ft:p.setStepped(I);break;case ut:_(t,p,M++,I,0,b,Y,x,T,1),_(t,p,M++,I,1,b,Y,y,E,1),_(t,p,M++,I,2,b,Y,k,X,1),_(t,p,M++,I,3,b,Y,C,B,1)}b=Y,x=T,y=E,k=X,C=B}r.push(p);break}case Cn:{const S=t.readInt(!0),p=new Re(g,S,d);let b=t.readFloat(),x=t.readUnsignedByte()/255,y=t.readUnsignedByte()/255,k=t.readUnsignedByte()/255;for(let C=0,I=0;p.setFrame(C,b,x,y,k),C!=w;C++){const M=t.readFloat(),Y=t.readUnsignedByte()/255,T=t.readUnsignedByte()/255,E=t.readUnsignedByte()/255;switch(t.readByte()){case ft:p.setStepped(C);break;case ut:_(t,p,I++,C,0,b,M,x,Y,1),_(t,p,I++,C,1,b,M,y,T,1),_(t,p,I++,C,2,b,M,k,E,1)}b=M,x=Y,y=T,k=E}r.push(p);break}case An:{const S=t.readInt(!0),p=new Pe(g,S,d);let b=t.readFloat(),x=t.readUnsignedByte()/255,y=t.readUnsignedByte()/255,k=t.readUnsignedByte()/255,C=t.readUnsignedByte()/255,I=t.readUnsignedByte()/255,M=t.readUnsignedByte()/255,Y=t.readUnsignedByte()/255;for(let T=0,E=0;p.setFrame(T,b,x,y,k,C,I,M,Y),T!=w;T++){const X=t.readFloat(),B=t.readUnsignedByte()/255,$=t.readUnsignedByte()/255,L=t.readUnsignedByte()/255,P=t.readUnsignedByte()/255,W=t.readUnsignedByte()/255,U=t.readUnsignedByte()/255,z=t.readUnsignedByte()/255;switch(t.readByte()){case ft:p.setStepped(T);break;case ut:_(t,p,E++,T,0,b,X,x,B,1),_(t,p,E++,T,1,b,X,y,$,1),_(t,p,E++,T,2,b,X,k,L,1),_(t,p,E++,T,3,b,X,C,P,1),_(t,p,E++,T,4,b,X,I,W,1),_(t,p,E++,T,5,b,X,M,U,1),_(t,p,E++,T,6,b,X,Y,z,1)}b=X,x=B,y=$,k=L,C=P,I=W,M=U,Y=z}r.push(p);break}case vn:{const S=t.readInt(!0),p=new Le(g,S,d);let b=t.readFloat(),x=t.readUnsignedByte()/255,y=t.readUnsignedByte()/255,k=t.readUnsignedByte()/255,C=t.readUnsignedByte()/255,I=t.readUnsignedByte()/255,M=t.readUnsignedByte()/255;for(let Y=0,T=0;p.setFrame(Y,b,x,y,k,C,I,M),Y!=w;Y++){const E=t.readFloat(),X=t.readUnsignedByte()/255,B=t.readUnsignedByte()/255,$=t.readUnsignedByte()/255,L=t.readUnsignedByte()/255,P=t.readUnsignedByte()/255,W=t.readUnsignedByte()/255;switch(t.readByte()){case ft:p.setStepped(Y);break;case ut:_(t,p,T++,Y,0,b,E,x,X,1),_(t,p,T++,Y,1,b,E,y,B,1),_(t,p,T++,Y,2,b,E,k,$,1),_(t,p,T++,Y,3,b,E,C,L,1),_(t,p,T++,Y,4,b,E,I,P,1),_(t,p,T++,Y,5,b,E,M,W,1)}b=E,x=X,y=B,k=$,C=L,I=P,M=W}r.push(p);break}case Mn:{const S=new Be(g,t.readInt(!0),d);let p=t.readFloat(),b=t.readUnsignedByte()/255;for(let x=0,y=0;S.setFrame(x,p,b),x!=w;x++){const k=t.readFloat(),C=t.readUnsignedByte()/255;switch(t.readByte()){case ft:S.setStepped(x);break;case ut:_(t,S,y++,x,0,p,k,b,C,1)}p=k,b=C}r.push(S)}}}}for(let o=0,c=t.readInt(!0);o<c;o++){const d=t.readInt(!0);for(let h=0,m=t.readInt(!0);h<m;h++){const u=t.readByte(),g=t.readInt(!0),w=t.readInt(!0);switch(u){case dn:r.push(At(t,new qt(g,w,d),1));break;case fn:r.push(ns(t,new Ce(g,w,d),a));break;case un:r.push(At(t,new Ae(g,w,d),a));break;case mn:r.push(At(t,new ve(g,w,d),a));break;case gn:r.push(ns(t,new Me(g,w,d),1));break;case xn:r.push(At(t,new Ie(g,w,d),1));break;case pn:r.push(At(t,new Te(g,w,d),1));break;case wn:r.push(ns(t,new Ye(g,w,d),1));break;case bn:r.push(At(t,new Fe(g,w,d),1));break;case yn:r.push(At(t,new Ee(g,w,d),1))}}}for(let o=0,c=t.readInt(!0);o<c;o++){const d=t.readInt(!0),h=t.readInt(!0),m=h-1,u=new De(h,t.readInt(!0),d);let g=t.readFloat(),w=t.readFloat(),S=t.readFloat()*a;for(let p=0,b=0;u.setFrame(p,g,w,S,t.readByte(),t.readBoolean(),t.readBoolean()),p!=m;p++){const x=t.readFloat(),y=t.readFloat(),k=t.readFloat()*a;switch(t.readByte()){case ft:u.setStepped(p);break;case ut:_(t,u,b++,p,0,g,x,w,y,1),_(t,u,b++,p,1,g,x,S,k,a)}g=x,w=y,S=k}r.push(u)}for(let o=0,c=t.readInt(!0);o<c;o++){const d=t.readInt(!0),h=t.readInt(!0),m=h-1,u=new Ve(h,t.readInt(!0),d);let g=t.readFloat(),w=t.readFloat(),S=t.readFloat(),p=t.readFloat(),b=t.readFloat(),x=t.readFloat(),y=t.readFloat();for(let k=0,C=0;u.setFrame(k,g,w,S,p,b,x,y),k!=m;k++){const I=t.readFloat(),M=t.readFloat(),Y=t.readFloat(),T=t.readFloat(),E=t.readFloat(),X=t.readFloat(),B=t.readFloat();switch(t.readByte()){case ft:u.setStepped(k);break;case ut:_(t,u,C++,k,0,g,I,w,M,1),_(t,u,C++,k,1,g,I,S,Y,1),_(t,u,C++,k,2,g,I,p,T,1),_(t,u,C++,k,3,g,I,b,E,1),_(t,u,C++,k,4,g,I,x,X,1),_(t,u,C++,k,5,g,I,y,B,1)}g=I,w=M,S=Y,p=T,b=E,x=X,y=B}r.push(u)}for(let o=0,c=t.readInt(!0);o<c;o++){const d=t.readInt(!0),h=e.pathConstraints[d];for(let m=0,u=t.readInt(!0);m<u;m++)switch(t.readByte()){case Tn:r.push(At(t,new $e(t.readInt(!0),t.readInt(!0),d),h.positionMode==mt.Fixed?a:1));break;case Yn:r.push(At(t,new _e(t.readInt(!0),t.readInt(!0),d),h.spacingMode==Q.Length||h.spacingMode==Q.Fixed?a:1));break;case Fn:const g=new We(t.readInt(!0),t.readInt(!0),d);let w=t.readFloat(),S=t.readFloat(),p=t.readFloat(),b=t.readFloat();for(let x=0,y=0,k=g.getFrameCount()-1;g.setFrame(x,w,S,p,b),x!=k;x++){const C=t.readFloat(),I=t.readFloat(),M=t.readFloat(),Y=t.readFloat();switch(t.readByte()){case ft:g.setStepped(x);break;case ut:_(t,g,y++,x,0,w,C,S,I,1),_(t,g,y++,x,1,w,C,p,M,1),_(t,g,y++,x,2,w,C,b,Y,1)}w=C,S=I,p=M,b=Y}r.push(g)}}for(let o=0,c=t.readInt(!0);o<c;o++){const d=e.skins[t.readInt(!0)];for(let h=0,m=t.readInt(!0);h<m;h++){const u=t.readInt(!0);for(let g=0,w=t.readInt(!0);g<w;g++){const S=t.readStringRef();if(!S)throw new Error("attachmentName must not be null.");const p=d.getAttachment(u,S),b=this.readDeformTimelineType(t),x=t.readInt(!0),y=x-1;switch(b){case Ns:{const k=p,C=k.bones,I=k.vertices,M=C?I.length/3*2:I.length,Y=t.readInt(!0),T=new Ne(x,Y,u,k);let E=t.readFloat();for(let X=0,B=0;;X++){let $,L=t.readInt(!0);if(L==0)$=C?R.newFloatArray(M):I;else{$=R.newFloatArray(M);const W=t.readInt(!0);if(L+=W,a==1)for(let U=W;U<L;U++)$[U]=t.readFloat();else for(let U=W;U<L;U++)$[U]=t.readFloat()*a;if(!C)for(let U=0,z=$.length;U<z;U++)$[U]+=I[U]}if(T.setFrame(X,E,$),X==y)break;const P=t.readFloat();switch(t.readByte()){case ft:T.setStepped(X);break;case ut:_(t,T,B++,X,0,E,P,0,1,1)}E=P}r.push(T);break}case In:{const k=new Vt(x,u,p);for(let C=0;C<x;C++){const I=t.readFloat(),M=t.readInt32();k.setFrame(C,I,ke[M&15],M>>4,t.readFloat())}r.push(k);break}}}}}const f=t.readInt(!0);if(f>0){const o=new Et(f),c=e.slots.length;for(let d=0;d<f;d++){const h=t.readFloat(),m=t.readInt(!0),u=R.newArray(c,0);for(let p=c-1;p>=0;p--)u[p]=-1;const g=R.newArray(c-m,0);let w=0,S=0;for(let p=0;p<m;p++){const b=t.readInt(!0);for(;w!=b;)g[S++]=w++;u[w+t.readInt(!0)]=w++}for(;w<c;)g[S++]=w++;for(let p=c-1;p>=0;p--)u[p]==-1&&(u[p]=g[--S]);o.setFrame(d,h,u)}r.push(o)}const l=t.readInt(!0);if(l>0){const o=new Ot(l);for(let c=0;c<l;c++){const d=t.readFloat(),h=e.events[t.readInt(!0)],m=new He(d,h);m.intValue=t.readInt(!1),m.floatValue=t.readFloat(),m.stringValue=t.readBoolean()?t.readString():h.stringValue,m.data.audioPath&&(m.volume=t.readFloat(),m.balance=t.readFloat()),o.setFrame(c,m)}r.push(o)}let n=0;for(let o=0,c=r.length;o<c;o++)n=Math.max(n,r[o].getDuration());return new ne(s,r,n)}}ss.BlendModeValues=[yt.NORMAL,yt.ADD,yt.MULTIPLY,yt.SCREEN];let ln=class{constructor(t,s,e,r,a){this.mesh=t,this.skin=s,this.slotIndex=e,this.parent=r,this.inheritTimeline=a}};class hn{constructor(t=null,s=null){this.bones=t,this.vertices=s}}function At(i,t,s){let e=i.readFloat(),r=i.readFloat()*s;for(let a=0,f=0,l=t.getFrameCount()-1;t.setFrame(a,e,r),a!=l;a++){const n=i.readFloat(),o=i.readFloat()*s;switch(i.readByte()){case ft:t.setStepped(a);break;case ut:_(i,t,f++,a,0,e,n,r,o,s)}e=n,r=o}return t}function ns(i,t,s){let e=i.readFloat(),r=i.readFloat()*s,a=i.readFloat()*s;for(let f=0,l=0,n=t.getFrameCount()-1;t.setFrame(f,e,r,a),f!=n;f++){const o=i.readFloat(),c=i.readFloat()*s,d=i.readFloat()*s;switch(i.readByte()){case ft:t.setStepped(f);break;case ut:_(i,t,l++,f,0,e,o,r,c,s),_(i,t,l++,f,1,e,o,a,d,s)}e=o,r=c,a=d}return t}function _(i,t,s,e,r,a,f,l,n,o){t.setBezier(s,e,r,a,l,i.readFloat(),i.readFloat()*o,i.readFloat(),i.readFloat()*o,f,n)}const dn=0,fn=1,un=2,mn=3,gn=4,xn=5,pn=6,wn=7,bn=8,yn=9,Sn=0,kn=1,Cn=2,An=3,vn=4,Mn=5,Ns=0,In=1,Tn=0,Yn=1,Fn=2,ft=1,ut=2;class En extends ye{}class de{constructor(t){this.scale=1,this.linkedMeshes=new Array,this.attachmentLoader=t}readSkeletonData(t){const s=this.scale,e=new Ze,r=typeof t=="string"?JSON.parse(t):t,a=r.skeleton;if(a){e.hash=a.hash,e.version=a.spine;const f=e.version.substr(0,3);if(f!=="4.0"&&f!=="4.1"){const l=`Spine 4.1 loader cant load version ${a.spine}. Please configure your pixi-spine bundle`;console.error(l)}e.x=a.x,e.y=a.y,e.width=a.width,e.height=a.height,e.fps=a.fps,e.imagesPath=a.images}if(r.bones)for(let f=0;f<r.bones.length;f++){const l=r.bones[f];let n=null;const o=A(l,"parent",null);if(o!=null&&(n=e.findBone(o),n==null))throw new Error(`Parent bone not found: ${o}`);const c=new ze(e.bones.length,l.name,n);c.length=A(l,"length",0)*s,c.x=A(l,"x",0)*s,c.y=A(l,"y",0)*s,c.rotation=A(l,"rotation",0),c.scaleX=A(l,"scaleX",1),c.scaleY=A(l,"scaleY",1),c.shearX=A(l,"shearX",0),c.shearY=A(l,"shearY",0),c.transformMode=R.enumValue(st,A(l,"transform","Normal")),c.skinRequired=A(l,"skin",!1);const d=A(l,"color",null);d&&c.color.setFromString(d),e.bones.push(c)}if(r.slots)for(let f=0;f<r.slots.length;f++){const l=r.slots[f],n=e.findBone(l.bone);if(!n)throw new Error(`Couldn't find bone ${l.bone} for slot ${l.name}`);const o=new je(e.slots.length,l.name,n),c=A(l,"color",null);c&&o.color.setFromString(c);const d=A(l,"dark",null);d&&(o.darkColor=N.fromString(d)),o.attachmentName=A(l,"attachment",null),o.blendMode=de.blendModeFromString(A(l,"blend","normal")),e.slots.push(o)}if(r.ik)for(let f=0;f<r.ik.length;f++){const l=r.ik[f],n=new Ke(l.name);n.order=A(l,"order",0),n.skinRequired=A(l,"skin",!1);for(let o=0;o<l.bones.length;o++){const c=l.bones[o],d=e.findBone(c);if(d==null)throw new Error(`IK bone not found: ${c}`);n.bones.push(d)}n.target=e.findBone(l.target),n.mix=A(l,"mix",1),n.softness=A(l,"softness",0)*s,n.bendDirection=A(l,"bendPositive",!0)?1:-1,n.compress=A(l,"compress",!1),n.stretch=A(l,"stretch",!1),n.uniform=A(l,"uniform",!1),e.ikConstraints.push(n)}if(r.transform)for(let f=0;f<r.transform.length;f++){const l=r.transform[f],n=new ts(l.name);n.order=A(l,"order",0),n.skinRequired=A(l,"skin",!1);for(let d=0;d<l.bones.length;d++){const h=l.bones[d],m=e.findBone(h);if(!m)throw new Error(`Couldn't find bone ${h} for transform constraint ${l.name}.`);n.bones.push(m)}const o=l.target,c=e.findBone(o);if(!c)throw new Error(`Couldn't find target bone ${o} for transform constraint ${l.name}.`);n.target=c,n.local=A(l,"local",!1),n.relative=A(l,"relative",!1),n.offsetRotation=A(l,"rotation",0),n.offsetX=A(l,"x",0)*s,n.offsetY=A(l,"y",0)*s,n.offsetScaleX=A(l,"scaleX",0),n.offsetScaleY=A(l,"scaleY",0),n.offsetShearY=A(l,"shearY",0),n.mixRotate=A(l,"mixRotate",1),n.mixX=A(l,"mixX",1),n.mixY=A(l,"mixY",n.mixX),n.mixScaleX=A(l,"mixScaleX",1),n.mixScaleY=A(l,"mixScaleY",n.mixScaleX),n.mixShearY=A(l,"mixShearY",1),e.transformConstraints.push(n)}if(r.path)for(let f=0;f<r.path.length;f++){const l=r.path[f],n=new Je(l.name);n.order=A(l,"order",0),n.skinRequired=A(l,"skin",!1);for(let d=0;d<l.bones.length;d++){const h=l.bones[d],m=e.findBone(h);if(!m)throw new Error(`Couldn't find bone ${h} for path constraint ${l.name}.`);n.bones.push(m)}const o=l.target,c=e.findSlot(o);if(!c)throw new Error(`Couldn't find target slot ${o} for path constraint ${l.name}.`);n.target=c,n.positionMode=R.enumValue(mt,A(l,"positionMode","Percent")),n.spacingMode=R.enumValue(Q,A(l,"spacingMode","Length")),n.rotateMode=R.enumValue(Tt,A(l,"rotateMode","Tangent")),n.offsetRotation=A(l,"rotation",0),n.position=A(l,"position",0),n.positionMode==mt.Fixed&&(n.position*=s),n.spacing=A(l,"spacing",0),(n.spacingMode==Q.Length||n.spacingMode==Q.Fixed)&&(n.spacing*=s),n.mixRotate=A(l,"mixRotate",1),n.mixX=A(l,"mixX",1),n.mixY=A(l,"mixY",n.mixX),e.pathConstraints.push(n)}if(r.skins)for(let f=0;f<r.skins.length;f++){const l=r.skins[f],n=new oe(l.name);if(l.bones)for(let o=0;o<l.bones.length;o++){const c=l.bones[o],d=e.findBone(c);if(!d)throw new Error(`Couldn't find bone ${c} for skin ${l.name}.`);n.bones.push(d)}if(l.ik)for(let o=0;o<l.ik.length;o++){const c=l.ik[o],d=e.findIkConstraint(c);if(!d)throw new Error(`Couldn't find IK constraint ${c} for skin ${l.name}.`);n.constraints.push(d)}if(l.transform)for(let o=0;o<l.transform.length;o++){const c=l.transform[o],d=e.findTransformConstraint(c);if(!d)throw new Error(`Couldn't find transform constraint ${c} for skin ${l.name}.`);n.constraints.push(d)}if(l.path)for(let o=0;o<l.path.length;o++){const c=l.path[o],d=e.findPathConstraint(c);if(!d)throw new Error(`Couldn't find path constraint ${c} for skin ${l.name}.`);n.constraints.push(d)}for(const o in l.attachments){const c=e.findSlot(o);if(!c)throw new Error(`Couldn't find slot ${o} for skin ${l.name}.`);const d=l.attachments[o];for(const h in d){const m=this.readAttachment(d[h],n,c.index,h,e);m&&n.setAttachment(c.index,h,m)}}e.skins.push(n),n.name=="default"&&(e.defaultSkin=n)}for(let f=0,l=this.linkedMeshes.length;f<l;f++){const n=this.linkedMeshes[f],o=n.skin?e.findSkin(n.skin):e.defaultSkin;if(!o)throw new Error(`Skin not found: ${n.skin}`);const c=o.getAttachment(n.slotIndex,n.parent);if(!c)throw new Error(`Parent mesh not found: ${n.parent}`);n.mesh.timelineAttachment=n.inheritTimeline?c:n.mesh,n.mesh.setParentMesh(c)}if(this.linkedMeshes.length=0,r.events)for(const f in r.events){const l=r.events[f],n=new Ge(f);n.intValue=A(l,"int",0),n.floatValue=A(l,"float",0),n.stringValue=A(l,"string",""),n.audioPath=A(l,"audio",null),n.audioPath&&(n.volume=A(l,"volume",1),n.balance=A(l,"balance",0)),e.events.push(n)}if(r.animations)for(const f in r.animations){const l=r.animations[f];this.readAnimation(l,f,e)}return e}readAttachment(t,s,e,r,a){const f=this.scale;switch(r=A(t,"name",r),A(t,"type","region")){case"region":{const l=A(t,"path",r),n=this.readSequence(A(t,"sequence",null)),o=this.attachmentLoader.newRegionAttachment(s,r,l,n);if(!o)return null;o.path=l,o.x=A(t,"x",0)*f,o.y=A(t,"y",0)*f,o.scaleX=A(t,"scaleX",1),o.scaleY=A(t,"scaleY",1),o.rotation=A(t,"rotation",0),o.width=t.width*f,o.height=t.height*f,o.sequence=n;const c=A(t,"color",null);return c&&o.color.setFromString(c),o}case"boundingbox":{const l=this.attachmentLoader.newBoundingBoxAttachment(s,r);if(!l)return null;this.readVertices(t,l,t.vertexCount<<1);const n=A(t,"color",null);return n&&l.color.setFromString(n),l}case"mesh":case"linkedmesh":{const l=A(t,"path",r),n=this.readSequence(A(t,"sequence",null)),o=this.attachmentLoader.newMeshAttachment(s,r,l,n);if(!o)return null;o.path=l;const c=A(t,"color",null);c&&o.color.setFromString(c),o.width=A(t,"width",0)*f,o.height=A(t,"height",0)*f,o.sequence=n;const d=A(t,"parent",null);if(d)return this.linkedMeshes.push(new Xn(o,A(t,"skin",null),e,d,A(t,"timelines",!0))),o;const h=t.uvs;return this.readVertices(t,o,h.length),o.triangles=t.triangles,o.regionUVs=new Float32Array(h),o.edges=A(t,"edges",null),o.hullLength=A(t,"hull",0)*2,o}case"path":{const l=this.attachmentLoader.newPathAttachment(s,r);if(!l)return null;l.closed=A(t,"closed",!1),l.constantSpeed=A(t,"constantSpeed",!0);const n=t.vertexCount;this.readVertices(t,l,n<<1);const o=R.newArray(n/3,0);for(let d=0;d<t.lengths.length;d++)o[d]=t.lengths[d]*f;l.lengths=o;const c=A(t,"color",null);return c&&l.color.setFromString(c),l}case"point":{const l=this.attachmentLoader.newPointAttachment(s,r);if(!l)return null;l.x=A(t,"x",0)*f,l.y=A(t,"y",0)*f,l.rotation=A(t,"rotation",0);const n=A(t,"color",null);return n&&l.color.setFromString(n),l}case"clipping":{const l=this.attachmentLoader.newClippingAttachment(s,r);if(!l)return null;const n=A(t,"end",null);if(n!=null){const d=a.findSlot(n);if(d==null)throw new Error(`Clipping end slot not found: ${n}`);l.endSlot=d}const o=t.vertexCount;this.readVertices(t,l,o<<1);const c=A(t,"color",null);return c&&l.color.setFromString(c),l}}return null}readSequence(t){if(t==null)return null;const s=new se(A(t,"count",0));return s.start=A(t,"start",1),s.digits=A(t,"digits",0),s.setupIndex=A(t,"setup",0),s}readVertices(t,s,e){const r=this.scale;s.worldVerticesLength=e;const a=t.vertices;if(e==a.length){const n=R.toFloatArray(a);if(r!=1)for(let o=0,c=a.length;o<c;o++)n[o]*=r;s.vertices=n;return}const f=new Array,l=new Array;for(let n=0,o=a.length;n<o;){const c=a[n++];l.push(c);for(let d=n+c*4;n<d;n+=4)l.push(a[n]),f.push(a[n+1]*r),f.push(a[n+2]*r),f.push(a[n+3])}s.bones=l,s.vertices=R.toFloatArray(f)}readAnimation(t,s,e){const r=this.scale,a=new Array;if(t.slots)for(const l in t.slots){const n=t.slots[l],o=e.findSlot(l);if(!o)throw new Error(`Slot not found: ${l}`);const c=o.index;for(const d in n){const h=n[d];if(!h)continue;const m=h.length;if(d=="attachment"){const u=new Ft(m,c);for(let g=0;g<m;g++){const w=h[g];u.setFrame(g,A(w,"time",0),A(w,"name",null))}a.push(u)}else if(d=="rgba"){const u=new Xe(m,m<<2,c);let g=h[0],w=A(g,"time",0),S=N.fromString(g.color);for(let p=0,b=0;;p++){u.setFrame(p,w,S.r,S.g,S.b,S.a);const x=h[p+1];if(!x){u.shrink(b);break}const y=A(x,"time",0),k=N.fromString(x.color),C=g.curve;C&&(b=O(C,u,b,p,0,w,y,S.r,k.r,1),b=O(C,u,b,p,1,w,y,S.g,k.g,1),b=O(C,u,b,p,2,w,y,S.b,k.b,1),b=O(C,u,b,p,3,w,y,S.a,k.a,1)),w=y,S=k,g=x}a.push(u)}else if(d=="rgb"){const u=new Re(m,m*3,c);let g=h[0],w=A(g,"time",0),S=N.fromString(g.color);for(let p=0,b=0;;p++){u.setFrame(p,w,S.r,S.g,S.b);const x=h[p+1];if(!x){u.shrink(b);break}const y=A(x,"time",0),k=N.fromString(x.color),C=g.curve;C&&(b=O(C,u,b,p,0,w,y,S.r,k.r,1),b=O(C,u,b,p,1,w,y,S.g,k.g,1),b=O(C,u,b,p,2,w,y,S.b,k.b,1)),w=y,S=k,g=x}a.push(u)}else if(d=="alpha")a.push(pt(h,new Be(m,m,c),0,1));else if(d=="rgba2"){const u=new Pe(m,m*7,c);let g=h[0],w=A(g,"time",0),S=N.fromString(g.light),p=N.fromString(g.dark);for(let b=0,x=0;;b++){u.setFrame(b,w,S.r,S.g,S.b,S.a,p.r,p.g,p.b);const y=h[b+1];if(!y){u.shrink(x);break}const k=A(y,"time",0),C=N.fromString(y.light),I=N.fromString(y.dark),M=g.curve;M&&(x=O(M,u,x,b,0,w,k,S.r,C.r,1),x=O(M,u,x,b,1,w,k,S.g,C.g,1),x=O(M,u,x,b,2,w,k,S.b,C.b,1),x=O(M,u,x,b,3,w,k,S.a,C.a,1),x=O(M,u,x,b,4,w,k,p.r,I.r,1),x=O(M,u,x,b,5,w,k,p.g,I.g,1),x=O(M,u,x,b,6,w,k,p.b,I.b,1)),w=k,S=C,p=I,g=y}a.push(u)}else if(d=="rgb2"){const u=new Le(m,m*6,c);let g=h[0],w=A(g,"time",0),S=N.fromString(g.light),p=N.fromString(g.dark);for(let b=0,x=0;;b++){u.setFrame(b,w,S.r,S.g,S.b,p.r,p.g,p.b);const y=h[b+1];if(!y){u.shrink(x);break}const k=A(y,"time",0),C=N.fromString(y.light),I=N.fromString(y.dark),M=g.curve;M&&(x=O(M,u,x,b,0,w,k,S.r,C.r,1),x=O(M,u,x,b,1,w,k,S.g,C.g,1),x=O(M,u,x,b,2,w,k,S.b,C.b,1),x=O(M,u,x,b,3,w,k,p.r,I.r,1),x=O(M,u,x,b,4,w,k,p.g,I.g,1),x=O(M,u,x,b,5,w,k,p.b,I.b,1)),w=k,S=C,p=I,g=y}a.push(u)}}}if(t.bones)for(const l in t.bones){const n=t.bones[l],o=e.findBone(l);if(!o)throw new Error(`Bone not found: ${l}`);const c=o.index;for(const d in n){const h=n[d],m=h.length;if(m!=0){if(d==="rotate")a.push(pt(h,new qt(m,m,c),0,1));else if(d==="translate"){const u=new Ce(m,m<<1,c);a.push(rs(h,u,"x","y",0,r))}else if(d==="translatex"){const u=new Ae(m,m,c);a.push(pt(h,u,0,r))}else if(d==="translatey"){const u=new ve(m,m,c);a.push(pt(h,u,0,r))}else if(d==="scale"){const u=new Me(m,m<<1,c);a.push(rs(h,u,"x","y",1,1))}else if(d==="scalex"){const u=new Ie(m,m,c);a.push(pt(h,u,1,1))}else if(d==="scaley"){const u=new Te(m,m,c);a.push(pt(h,u,1,1))}else if(d==="shear"){const u=new Ye(m,m<<1,c);a.push(rs(h,u,"x","y",0,1))}else if(d==="shearx"){const u=new Fe(m,m,c);a.push(pt(h,u,0,1))}else if(d==="sheary"){const u=new Ee(m,m,c);a.push(pt(h,u,0,1))}}}}if(t.ik)for(const l in t.ik){const n=t.ik[l];let o=n[0];if(!o)continue;const c=e.findIkConstraint(l);if(!c)throw new Error(`IK Constraint not found: ${l}`);const d=e.ikConstraints.indexOf(c),h=new De(n.length,n.length<<1,d);let m=A(o,"time",0),u=A(o,"mix",1),g=A(o,"softness",0)*r;for(let w=0,S=0;;w++){h.setFrame(w,m,u,g,A(o,"bendPositive",!0)?1:-1,A(o,"compress",!1),A(o,"stretch",!1));const p=n[w+1];if(!p){h.shrink(S);break}const b=A(p,"time",0),x=A(p,"mix",1),y=A(p,"softness",0)*r,k=o.curve;k&&(S=O(k,h,S,w,0,m,b,u,x,1),S=O(k,h,S,w,1,m,b,g,y,r)),m=b,u=x,g=y,o=p}a.push(h)}if(t.transform)for(const l in t.transform){const n=t.transform[l];let o=n[0];if(!o)continue;const c=e.findTransformConstraint(l);if(!c)throw new Error(`Transform constraint not found: ${l}`);const d=e.transformConstraints.indexOf(c),h=new Ve(n.length,n.length*6,d);let m=A(o,"time",0),u=A(o,"mixRotate",1),g=A(o,"mixX",1),w=A(o,"mixY",g),S=A(o,"mixScaleX",1),p=A(o,"mixScaleY",S);const b=A(o,"mixShearY",1);for(let x=0,y=0;;x++){h.setFrame(x,m,u,g,w,S,p,b);const k=n[x+1];if(!k){h.shrink(y);break}const C=A(k,"time",0),I=A(k,"mixRotate",1),M=A(k,"mixX",1),Y=A(k,"mixY",M),T=A(k,"mixScaleX",1),E=A(k,"mixScaleY",T),X=A(k,"mixShearY",1),B=o.curve;B&&(y=O(B,h,y,x,0,m,C,u,I,1),y=O(B,h,y,x,1,m,C,g,M,1),y=O(B,h,y,x,2,m,C,w,Y,1),y=O(B,h,y,x,3,m,C,S,T,1),y=O(B,h,y,x,4,m,C,p,E,1),y=O(B,h,y,x,5,m,C,b,X,1)),m=C,u=I,g=M,w=Y,S=T,p=E,S=T,o=k}a.push(h)}if(t.path)for(const l in t.path){const n=t.path[l],o=e.findPathConstraint(l);if(!o)throw new Error(`Path constraint not found: ${l}`);const c=e.pathConstraints.indexOf(o);for(const d in n){const h=n[d];let m=h[0];if(!m)continue;const u=h.length;if(d==="position"){const g=new $e(u,u,c);a.push(pt(h,g,0,o.positionMode==mt.Fixed?r:1))}else if(d==="spacing"){const g=new _e(u,u,c);a.push(pt(h,g,0,o.spacingMode==Q.Length||o.spacingMode==Q.Fixed?r:1))}else if(d==="mix"){const g=new We(u,u*3,c);let w=A(m,"time",0),S=A(m,"mixRotate",1),p=A(m,"mixX",1),b=A(m,"mixY",p);for(let x=0,y=0;;x++){g.setFrame(x,w,S,p,b);const k=h[x+1];if(!k){g.shrink(y);break}const C=A(k,"time",0),I=A(k,"mixRotate",1),M=A(k,"mixX",1),Y=A(k,"mixY",M),T=m.curve;T&&(y=O(T,g,y,x,0,w,C,S,I,1),y=O(T,g,y,x,1,w,C,p,M,1),y=O(T,g,y,x,2,w,C,b,Y,1)),w=C,S=I,p=M,b=Y,m=k}a.push(g)}}}if(t.deform){t.attachments={};for(const l in t.deform){const n=t.deform[l],o=t.attachments[l]={};for(const c in n){const d=n[c],h=o[c]={};for(const m in d)h[m]={deform:d[m]}}}}if(t.attachments)for(const l in t.attachments){const n=t.attachments[l],o=e.findSkin(l);if(o==null){if(vt.FAIL_ON_NON_EXISTING_SKIN)throw new Error(`Skin not found: ${l}`);continue}for(const c in n){const d=n[c],h=e.findSlot(c);if(!h)throw new Error(`Slot not found: ${c}`);const m=h.index;for(const u in d){const g=d[u],w=o.getAttachment(m,u);for(const S in g){const p=g[S];let b=p[0];if(b){if(S=="deform"){const x=w.bones,y=w.vertices,k=x?y.length/3*2:y.length,C=new Ne(p.length,p.length,m,w);let I=A(b,"time",0);for(let M=0,Y=0;;M++){let T;const E=A(b,"vertices",null);if(!E)T=x?R.newFloatArray(k):y;else{T=R.newFloatArray(k);const L=A(b,"offset",0);if(R.arrayCopy(E,0,T,L,E.length),r!=1)for(let P=L,W=P+E.length;P<W;P++)T[P]*=r;if(!x)for(let P=0;P<k;P++)T[P]+=y[P]}C.setFrame(M,I,T);const X=p[M+1];if(!X){C.shrink(Y);break}const B=A(X,"time",0),$=b.curve;$&&(Y=O($,C,Y,M,0,I,B,0,1,1)),I=B,b=X}a.push(C)}else if(S=="sequence"){const x=new Vt(p.length,m,w);let y=0;for(let k=0;k<p.length;k++){const C=A(b,"delay",y),I=A(b,"time",0),M=gt[A(b,"mode","hold")],Y=A(b,"index",0);x.setFrame(k,I,M,Y,C),y=C,b=p[k+1]}a.push(x)}}}}}}if(t.drawOrder){const l=new Et(t.drawOrder.length),n=e.slots.length;let o=0;for(let c=0;c<t.drawOrder.length;c++,o++){const d=t.drawOrder[c];let h=null;const m=A(d,"offsets",null);if(m){h=R.newArray(n,-1);const u=R.newArray(n-m.length,0);let g=0,w=0;for(let S=0;S<m.length;S++){const p=m[S],b=e.findSlot(p.slot);if(!b)throw new Error(`Slot not found: ${b}`);const x=b.index;for(;g!=x;)u[w++]=g++;h[g+p.offset]=g++}for(;g<n;)u[w++]=g++;for(let S=n-1;S>=0;S--)h[S]==-1&&(h[S]=u[--w])}l.setFrame(o,A(d,"time",0),h)}a.push(l)}if(t.events){const l=new Ot(t.events.length);let n=0;for(let o=0;o<t.events.length;o++,n++){const c=t.events[o],d=e.findEvent(c.name);if(!d)throw new Error(`Event not found: ${c.name}`);const h=new He(R.toSinglePrecision(A(c,"time",0)),d);h.intValue=A(c,"int",d.intValue),h.floatValue=A(c,"float",d.floatValue),h.stringValue=A(c,"string",d.stringValue),h.data.audioPath&&(h.volume=A(c,"volume",1),h.balance=A(c,"balance",0)),l.setFrame(n,h)}a.push(l)}let f=0;for(let l=0,n=a.length;l<n;l++)f=Math.max(f,a[l].getDuration());if(isNaN(f))throw new Error("Error while parsing animation, duration is NaN");e.animations.push(new ne(s,a,f))}static blendModeFromString(t){if(t=t.toLowerCase(),t=="normal")return yt.NORMAL;if(t=="additive")return yt.ADD;if(t=="multiply")return yt.MULTIPLY;if(t=="screen")return yt.SCREEN;throw new Error(`Unknown blend mode: ${t}`)}}class Xn{constructor(t,s,e,r,a){this.mesh=t,this.skin=s,this.slotIndex=e,this.parent=r,this.inheritTimeline=a}}function pt(i,t,s,e){let r=i[0],a=A(r,"time",0),f=A(r,"value",s)*e,l=0;for(let n=0;;n++){t.setFrame(n,a,f);const o=i[n+1];if(!o)return t.shrink(l),t;const c=A(o,"time",0),d=A(o,"value",s)*e;r.curve&&(l=O(r.curve,t,l,n,0,a,c,f,d,e)),a=c,f=d,r=o}}function rs(i,t,s,e,r,a){let f=i[0],l=A(f,"time",0),n=A(f,s,r)*a,o=A(f,e,r)*a,c=0;for(let d=0;;d++){t.setFrame(d,l,n,o);const h=i[d+1];if(!h)return t.shrink(c),t;const m=A(h,"time",0),u=A(h,s,r)*a,g=A(h,e,r)*a,w=f.curve;w&&(c=O(w,t,c,d,0,l,m,n,u,a),c=O(w,t,c,d,1,l,m,o,g,a)),l=m,n=u,o=g,f=h}}function O(i,t,s,e,r,a,f,l,n,o){if(i=="stepped")return t.setStepped(e),s;const c=r<<2,d=i[c],h=i[c+1]*o,m=i[c+2],u=i[c+3]*o;return t.setBezier(s,e,r,a,l,d,h,m,u,f,n),s+1}function A(i,t,s){return i[t]!==void 0?i[t]:s}class Rn extends te{createSkeleton(t){this.skeleton=new Qe(t),this.skeleton.updateWorldTransform(),this.stateData=new Xs(t),this.state=new $t(this.stateData)}}class Bn extends rn{createBinaryParser(){return new ss(null)}createJsonParser(){return new de(null)}parseData(t,s,e){const r=t;return r.attachmentLoader=new Rs(s),{spineData:r.readSkeletonData(e),spineAtlas:s}}}new Bn().installLoader();export{Be as AlphaTimeline,ne as Animation,$t as AnimationState,an as AnimationStateAdapter,Xs as AnimationStateData,Rs as AtlasAttachmentLoader,Se as Attachment,Ft as AttachmentTimeline,K as AttachmentType,xs as BinaryInput,Ue as Bone,ze as BoneData,ce as BoundingBoxAttachment,le as ClippingAttachment,N as Color,ae as ConstraintData,ht as CurveTimeline,dt as CurveTimeline1,re as CurveTimeline2,Zs as DebugUtils,Ne as DeformTimeline,Et as DrawOrderTimeline,He as Event,Ge as EventData,Ts as EventQueue,Ot as EventTimeline,nt as EventType,Bs as IkConstraint,Ke as IkConstraintData,De as IkConstraintTimeline,Js as IntSet,ps as Interpolation,F as MathUtils,Rt as MeshAttachment,v as MixBlend,j as MixDirection,Xt as PathAttachment,_t as PathConstraint,Je as PathConstraintData,We as PathConstraintMixTimeline,$e as PathConstraintPositionTimeline,_e as PathConstraintSpacingTimeline,he as PointAttachment,be as Pool,mt as PositionMode,ws as Pow,Qs as PowOut,Le as RGB2Timeline,Pe as RGBA2Timeline,Xe as RGBATimeline,Re as RGBTimeline,q as RegionAttachment,Tt as RotateMode,qt as RotateTimeline,Me as ScaleTimeline,Ie as ScaleXTimeline,Te as ScaleYTimeline,se as Sequence,gt as SequenceMode,ke as SequenceModeValues,Vt as SequenceTimeline,Ye as ShearTimeline,Fe as ShearXTimeline,Ee as ShearYTimeline,Qe as Skeleton,ss as SkeletonBinary,En as SkeletonBounds,ye as SkeletonBoundsBase,Ze as SkeletonData,de as SkeletonJson,oe as Skin,es as SkinEntry,Ps as Slot,je as SlotData,Q as SpacingMode,Rn as Spine,te as SpineBase,en as SpineDebugRenderer,ys as SpineMesh,bs as SpineSprite,we as StringSet,Zt as TextureAtlas,xe as TextureAtlasPage,pe as TextureAtlasRegion,tt as TextureFilter,Qt as TextureRegion,ct as TextureWrap,js as TimeKeeper,J as Timeline,ie as TrackEntry,Ls as TransformConstraint,ts as TransformConstraintData,Ve as TransformConstraintTimeline,st as TransformMode,Ce as TranslateTimeline,Ae as TranslateXTimeline,ve as TranslateYTimeline,R as Utils,jt as Vector2,lt as VertexAttachment,tn as WindowedMean,ge as filterFromString,vt as settings,Hs as wrapFromString};
//# sourceMappingURL=pixi-spine-4.1.mjs.map
