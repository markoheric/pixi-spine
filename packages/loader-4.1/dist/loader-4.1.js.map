{"version":3,"file":"loader-4.1.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable spaced-comment */\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../global.d.ts\" />\n\nimport '@pixi-spine/loader-base'; // Side effect install atlas loader\n// eslint-disable-next-line @typescript-eslint/no-duplicate-imports\nimport { ISpineResource, SpineLoaderAbstract } from '@pixi-spine/loader-base';\nimport type { ISkeletonParser, TextureAtlas } from '@pixi-spine/base';\nimport { AtlasAttachmentLoader, SkeletonBinary, SkeletonData, SkeletonJson } from '@pixi-spine/runtime-4.1';\n\n/**\n * @internal\n */\nclass SpineParser extends SpineLoaderAbstract<SkeletonData> {\n    createBinaryParser(): ISkeletonParser {\n        return new SkeletonBinary(null);\n    }\n\n    createJsonParser(): ISkeletonParser {\n        return new SkeletonJson(null);\n    }\n\n    parseData(parser: ISkeletonParser, atlas: TextureAtlas, dataToParse: any): ISpineResource<SkeletonData> {\n        const parserCast = parser as SkeletonBinary | SkeletonJson;\n\n        parserCast.attachmentLoader = new AtlasAttachmentLoader(atlas);\n\n        return {\n            spineData: parserCast.readSkeletonData(dataToParse),\n            spineAtlas: atlas,\n        };\n    }\n}\n\nnew SpineParser().installLoader();\n"],"names":["SpineParser","SpineLoaderAbstract","SkeletonBinary","SkeletonJson","parser","atlas","dataToParse","parserCast","AtlasAttachmentLoader"],"mappings":";;;;;;;;+BAaA,MAAMA,UAAoBC,EAAkC,mBAAA,CACxD,oBAAsC,CAClC,OAAO,IAAIC,EAAAA,eAAe,IAAI,CAClC,CAEA,kBAAoC,CAChC,OAAO,IAAIC,EAAAA,aAAa,IAAI,CAChC,CAEA,UAAUC,EAAyBC,EAAqBC,EAAgD,CACpG,MAAMC,EAAaH,EAEnB,OAAAG,EAAW,iBAAmB,IAAIC,EAAsBH,sBAAAA,CAAK,EAEtD,CACH,UAAWE,EAAW,iBAAiBD,CAAW,EAClD,WAAYD,CAChB,CACJ,CACJ,CAEA,IAAIL,IAAc,cAAc"}